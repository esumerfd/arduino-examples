!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABLC1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	324;"	d
ACCEL_DIM	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	/^const uint8_t ACCEL_DIM = 3;$/;"	v
ACK_CHECK_DIS	./libraries/esp32-camera-2.0.8/driver/sccb.c	37;"	d	file:
ACK_CHECK_DIS	./libraries/esp32-camera/sccb.c	37;"	d	file:
ACK_CHECK_EN	./libraries/esp32-camera-2.0.8/driver/sccb.c	36;"	d	file:
ACK_CHECK_EN	./libraries/esp32-camera/sccb.c	36;"	d	file:
ACK_VAL	./libraries/esp32-camera-2.0.8/driver/sccb.c	38;"	d	file:
ACK_VAL	./libraries/esp32-camera/sccb.c	38;"	d	file:
ACMD13	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t ACMD13 = 0X0D;$/;"	v
ACMD23	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t ACMD23 = 0X17;$/;"	v
ACMD41	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t ACMD41 = 0X29;$/;"	v
ACMD41_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t ACMD41_XFERTYP = SDHC_XFERTYP_CMDINX(ACMD41) | CMD_RESP_R3;$/;"	v
ACMD51	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t ACMD51 = 0X33;$/;"	v
ACMD51_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t ACMD51_XFERTYP = SDHC_XFERTYP_CMDINX(ACMD51) | CMD_RESP_R1 |$/;"	v
ACMD6	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t ACMD6 = 0X06;$/;"	v
ACMD6_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t ACMD6_XFERTYP = SDHC_XFERTYP_CMDINX(ACMD6) | CMD_RESP_R1;$/;"	v
ACOM	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	160;"	d
AC_CHROMA_CODES	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
AC_LUM_CODES	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
AD8_HIGH_TOREAD_AD7_HIGH_TOINC	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  AD8_HIGH_TOREAD_AD7_HIGH_TOINC = 1,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
AD8_HIGH_TOREAD_AD7_HIGH_TOINC	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  AD8_HIGH_TOREAD_AD7_HIGH_TOINC = 1,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADAFRUIT_NEOPIXEL_H	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	37;"	d
ADAFRUIT_RMT_CHANNEL_MAX	./libraries/Adafruit_NeoPixel/esp.c	96;"	d	file:
ADAFRUIT_TESTBED_BRAINS_H	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	2;"	d
ADAFRUIT_TESTBED_H	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	2;"	d
ADC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	159;"	d
ADCCTR0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	136;"	d
ADCCTR1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	137;"	d
ADCCTR2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	138;"	d
ADCCTR3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	139;"	d
ADC_COUNT	./libraries/SdFat/examples/ExFatLogger/ExFatLogger.h	/^const size_t ADC_COUNT = 4;$/;"	v
ADC_DIM	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	/^const uint8_t ADC_DIM = 4;$/;"	v
ADDRBIT8_HIGH_TOREAD	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOREAD = 0,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOREAD	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOREAD = 0,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOWRITE	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOWRITE = 2,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOWRITE	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOWRITE = 2,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE = 3,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE = 3,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDVSH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	131;"	d
ADDVSL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	130;"	d
ADOFF_B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	158;"	d
ADOFF_GB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	160;"	d
ADOFF_GR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	161;"	d
ADOFF_R	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	159;"	d
ADVFH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	150;"	d
ADVFH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	151;"	d
ADVFL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	149;"	d
ADVFL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	150;"	d
ADXL345_CS	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t ADXL345_CS = 9;$/;"	v
AD_CHB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	338;"	d
AD_CHGb	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	340;"	d
AD_CHGr	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	341;"	d
AD_CHR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	339;"	d
AEB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	126;"	d
AEB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	141;"	d
AEB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	143;"	d
AEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	113;"	d
AEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	61;"	d
AEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	67;"	d
AECH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	16;"	d
AECH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	17;"	d
AEC_PK_MANUAL	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	56;"	d
AEC_PK_MANUAL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	56;"	d
AEC_PK_MANUAL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	38;"	d
AEC_PK_MANUAL_AEC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	206;"	d
AEC_PK_MANUAL_AEC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	206;"	d
AEC_PK_MANUAL_AEC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	208;"	d
AEC_PK_MANUAL_AGC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	205;"	d
AEC_PK_MANUAL_AGC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	205;"	d
AEC_PK_MANUAL_AGC_MANUALEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	207;"	d
AEW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	125;"	d
AEW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	140;"	d
AEW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	142;"	d
ANALOG_PWC	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	17;"	d
ARBLM	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	156;"	d
ARCOM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	136;"	d
AREF0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	195;"	d
AREF1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	196;"	d
AREF2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	197;"	d
AREF3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	198;"	d
AREF4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	199;"	d
AREF5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	200;"	d
AREF6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	201;"	d
AREF7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	202;"	d
ASPECT_RATIO_16X10	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_16X10,$/;"	e	enum:__anon10
ASPECT_RATIO_16X10	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_16X10,$/;"	e	enum:__anon11
ASPECT_RATIO_16X9	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_16X9,$/;"	e	enum:__anon10
ASPECT_RATIO_16X9	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_16X9,$/;"	e	enum:__anon11
ASPECT_RATIO_1X1	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_1X1,$/;"	e	enum:__anon10
ASPECT_RATIO_1X1	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_1X1,$/;"	e	enum:__anon11
ASPECT_RATIO_21X9	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_21X9,$/;"	e	enum:__anon10
ASPECT_RATIO_21X9	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_21X9,$/;"	e	enum:__anon11
ASPECT_RATIO_3X2	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_3X2,$/;"	e	enum:__anon10
ASPECT_RATIO_3X2	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_3X2,$/;"	e	enum:__anon11
ASPECT_RATIO_4X3	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_4X3,$/;"	e	enum:__anon10
ASPECT_RATIO_4X3	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_4X3,$/;"	e	enum:__anon11
ASPECT_RATIO_5X3	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_5X3,$/;"	e	enum:__anon10
ASPECT_RATIO_5X3	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_5X3,$/;"	e	enum:__anon11
ASPECT_RATIO_5X4	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_5X4,$/;"	e	enum:__anon10
ASPECT_RATIO_5X4	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_5X4,$/;"	e	enum:__anon11
ASPECT_RATIO_9X16	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    ASPECT_RATIO_9X16$/;"	e	enum:__anon10
ASPECT_RATIO_9X16	./libraries/esp32-camera/include/sensor.h	/^    ASPECT_RATIO_9X16$/;"	e	enum:__anon11
AWBB_BLK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	205;"	d
AWBC1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	186;"	d
AWBC2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	187;"	d
AWBC3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	188;"	d
AWBC4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	189;"	d
AWBC5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	190;"	d
AWBC6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	191;"	d
AWBCTR0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	240;"	d
AWBCTR1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	239;"	d
AWBCTR2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	238;"	d
AWBCTR3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	237;"	d
AWB_BIAS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	244;"	d
AWB_CTRL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	207;"	d
AWB_CTRL0_CALC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	209;"	d
AWB_CTRL0_GAIN_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	208;"	d
AWB_CTRL0_WBC_MASK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	210;"	d
AWB_CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	245;"	d
AWB_CTRL10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	258;"	d
AWB_CTRL11	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	259;"	d
AWB_CTRL12	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	260;"	d
AWB_CTRL13	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	261;"	d
AWB_CTRL14	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	262;"	d
AWB_CTRL15	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	263;"	d
AWB_CTRL16	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	264;"	d
AWB_CTRL17	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	265;"	d
AWB_CTRL18	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	266;"	d
AWB_CTRL19	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	267;"	d
AWB_CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	246;"	d
AWB_CTRL20	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	268;"	d
AWB_CTRL21	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	269;"	d
AWB_CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	248;"	d
AWB_CTRL3_ADVANCED	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	249;"	d
AWB_CTRL3_SIMPLE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	250;"	d
AWB_CTRL4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	252;"	d
AWB_CTRL5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	253;"	d
AWB_CTRL6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	254;"	d
AWB_CTRL7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	255;"	d
AWB_CTRL8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	256;"	d
AWB_CTRL9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	257;"	d
Adafruit Support Forum	./libraries/SdFat/.github/ISSUE_TEMPLATE/config.yml	/^  - name: Adafruit Support Forum$/;"	k
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register($/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice *i2cdevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_SPIDevice *spidevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_Register {$/;"	c
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register($/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice *i2cdevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_SPIDevice *spidevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_Register {$/;"	c
Adafruit_BusIO_RegisterBits	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits($/;"	f	class:Adafruit_BusIO_RegisterBits
Adafruit_BusIO_RegisterBits	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_RegisterBits {$/;"	c
Adafruit_BusIO_RegisterBits	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits($/;"	f	class:Adafruit_BusIO_RegisterBits
Adafruit_BusIO_RegisterBits	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_RegisterBits {$/;"	c
Adafruit_BusIO_Register_h	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	2;"	d
Adafruit_BusIO_Register_h	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	2;"	d
Adafruit_BusIO_SPIRegType	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^} Adafruit_BusIO_SPIRegType;$/;"	t	typeref:enum:_Adafruit_BusIO_SPIRegType
Adafruit_BusIO_SPIRegType	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^} Adafruit_BusIO_SPIRegType;$/;"	t	typeref:enum:_Adafruit_BusIO_SPIRegType
Adafruit_I2CDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^Adafruit_I2CDevice::Adafruit_I2CDevice(uint8_t addr, TwoWire *theWire) {$/;"	f	class:Adafruit_I2CDevice
Adafruit_I2CDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^class Adafruit_I2CDevice {$/;"	c
Adafruit_I2CDevice	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^Adafruit_I2CDevice::Adafruit_I2CDevice(uint8_t addr, TwoWire *theWire) {$/;"	f	class:Adafruit_I2CDevice
Adafruit_I2CDevice	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^class Adafruit_I2CDevice {$/;"	c
Adafruit_I2CDevice_h	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	2;"	d
Adafruit_I2CDevice_h	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	2;"	d
Adafruit_I2CRegister	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_Register Adafruit_I2CRegister;$/;"	t
Adafruit_I2CRegister	./libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_Register Adafruit_I2CRegister;$/;"	t
Adafruit_I2CRegisterBits	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_RegisterBits Adafruit_I2CRegisterBits;$/;"	t
Adafruit_I2CRegisterBits	./libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_RegisterBits Adafruit_I2CRegisterBits;$/;"	t
Adafruit_NeoPixel	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^Adafruit_NeoPixel::Adafruit_NeoPixel()$/;"	f	class:Adafruit_NeoPixel
Adafruit_NeoPixel	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^Adafruit_NeoPixel::Adafruit_NeoPixel(uint16_t n, int16_t p, neoPixelType t)$/;"	f	class:Adafruit_NeoPixel
Adafruit_NeoPixel	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^class Adafruit_NeoPixel {$/;"	c
Adafruit_PWMServoDriver	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver()$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr)$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr,$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	/^class Adafruit_PWMServoDriver {$/;"	c
Adafruit_PWMServoDriver	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver()$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr)$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr,$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	/^class Adafruit_PWMServoDriver {$/;"	c
Adafruit_SPIDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, int8_t sckpin,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, uint32_t freq,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^class Adafruit_SPIDevice {$/;"	c
Adafruit_SPIDevice	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, int8_t sckpin,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, uint32_t freq,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^class Adafruit_SPIDevice {$/;"	c
Adafruit_SPIDevice_h	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	2;"	d
Adafruit_SPIDevice_h	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	2;"	d
Adafruit_TestBed	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^Adafruit_TestBed::Adafruit_TestBed(void) {$/;"	f	class:Adafruit_TestBed
Adafruit_TestBed	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^class Adafruit_TestBed {$/;"	c
Adafruit_TestBed_Brains	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^Adafruit_TestBed_Brains::Adafruit_TestBed_Brains() {$/;"	f	class:Adafruit_TestBed_Brains
Adafruit_TestBed_Brains	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^class Adafruit_TestBed_Brains : public Adafruit_TestBed {$/;"	c
AnalogBinLogger_h	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	2;"	d
AnalogBinLogger_h	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	2;"	d
ArduinoFiles_h	./libraries/SdFat/src/common/ArduinoFiles.h	26;"	d
ArduinoInStream	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  ArduinoInStream(Stream &hws, char* buf, size_t size) {$/;"	f	class:ArduinoInStream
ArduinoInStream	./libraries/SdFat/src/iostream/ArduinoStream.h	/^class ArduinoInStream : public ibufstream {$/;"	c
ArduinoOutStream	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  ArduinoOutStream() {}$/;"	f	class:ArduinoOutStream
ArduinoOutStream	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  explicit ArduinoOutStream(print_t& pr) : m_pr(&pr) {}$/;"	f	class:ArduinoOutStream
ArduinoOutStream	./libraries/SdFat/src/iostream/ArduinoStream.h	/^class ArduinoOutStream : public ostream {$/;"	c
ArduinoStream_h	./libraries/SdFat/src/iostream/ArduinoStream.h	26;"	d
AvrDevelopersGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/AvrDevelopersGpioPinMap.h	2;"	d
BANK_DSP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	/^    BANK_DSP, BANK_SENSOR, BANK_MAX$/;"	e	enum:__anon1
BANK_MAX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	/^    BANK_DSP, BANK_SENSOR, BANK_MAX$/;"	e	enum:__anon1
BANK_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	45;"	d
BANK_SENSOR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	/^    BANK_DSP, BANK_SENSOR, BANK_MAX$/;"	e	enum:__anon1
BAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	14;"	d
BAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	14;"	d
BBIAS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	143;"	d
BD50	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	144;"	d
BD50MAX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	308;"	d
BD50ST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	296;"	d
BD60	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	145;"	d
BD60MAX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	317;"	d
BD60ST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	297;"	d
BDBASE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	140;"	d
BF20A6_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    BF20A6_PID = 0x20a6,$/;"	e	enum:__anon4
BF20A6_PID	./libraries/esp32-camera/include/sensor.h	/^    BF20A6_PID = 0x20a6,$/;"	e	enum:__anon5
BF20A6_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    BF20A6_SCCB_ADDR   = 0x6E,$/;"	e	enum:__anon6
BF20A6_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    BF20A6_SCCB_ADDR   = 0x6E,$/;"	e	enum:__anon7
BF3005_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    BF3005_PID = 0x30,$/;"	e	enum:__anon4
BF3005_PID	./libraries/esp32-camera/include/sensor.h	/^    BF3005_PID = 0x30,$/;"	e	enum:__anon5
BF3005_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    BF3005_SCCB_ADDR   = 0x6E,$/;"	e	enum:__anon6
BF3005_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    BF3005_SCCB_ADDR   = 0x6E,$/;"	e	enum:__anon7
BIN	./libraries/SdFat/extras/attic/PrintBasic.h	46;"	d
BIN	./libraries/SdFat/extras/attic/PrintBasic.h	48;"	d
BIN	./libraries/SdFat/src/common/PrintBasic.h	47;"	d
BIN	./libraries/SdFat/src/common/PrintBasic.h	49;"	d
BIN_DEVKIT_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	44;"	d
BIN_DEVKIT_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	41;"	d
BIN_DEVKIT_S3	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	45;"	d
BIN_DEVKIT_S3	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	42;"	d
BIN_ESP32_NINA_1_7_4	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	35;"	d
BIN_ESP32_NINA_1_7_4	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	33;"	d
BIN_ESP32_WIFI_AP_SKETCH	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	36;"	d
BIN_ESP32_WIFI_AP_SKETCH	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	34;"	d
BIN_ESP8266	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	44;"	d
BIN_FEATHER_8266_BLINKY	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	47;"	d
BIN_FEATHER_ESP32_V2_BLINKY	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	38;"	d
BIN_FEATHER_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	40;"	d
BIN_FEATHER_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	37;"	d
BIN_FEATHER_S3	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	41;"	d
BIN_FEATHER_S3	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	38;"	d
BIN_FILES	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	29;"	d
BIN_FILES	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	29;"	d
BIN_FILES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	/^enum { BIN_FILES_COUNT = sizeof(bin_files) \/ sizeof(bin_files[0]) };$/;"	e	enum:__anon32
BIN_FILES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	/^enum { BIN_FILES_COUNT = sizeof(bin_files) \/ sizeof(bin_files[0]) };$/;"	e	enum:__anon34
BIN_METRO_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	42;"	d
BIN_METRO_S2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	39;"	d
BITMAP_CLUSTER	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint32_t BITMAP_CLUSTER = 2;$/;"	v
BLESerial	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^BLESerial::BLESerial(unsigned char req, unsigned char rdy, unsigned char rst) :$/;"	f	class:BLESerial
BLESerial	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^class BLESerial : public BLEPeripheral, public Stream$/;"	c
BLESerial	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^BLESerial::BLESerial(unsigned char req, unsigned char rdy, unsigned char rst) :$/;"	f	class:BLESerial
BLESerial	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^class BLESerial : public BLEPeripheral, public Stream$/;"	c
BLOCK_SIZE	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^const size_t BLOCK_SIZE = 64;$/;"	v
BLUE	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	14;"	d
BLUE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	10;"	d
BLUE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	11;"	d
BMP_HEADER_LEN	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static const int BMP_HEADER_LEN = 54;$/;"	v	file:
BOARD_CAMERA_MODEL_ESP32S2	./libraries/esp32-camera-2.0.8/test/test_camera.c	16;"	d	file:
BOARD_CAMERA_MODEL_ESP32_S3_EYE	./libraries/esp32-camera-2.0.8/test/test_camera.c	18;"	d	file:
BOARD_WROVER_KIT	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	48;"	d	file:
BOARD_WROVER_KIT	./libraries/esp32-camera-2.0.8/test/test_camera.c	14;"	d	file:
BOOT_BACKUP_OFFSET	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint32_t BOOT_BACKUP_OFFSET = 12;$/;"	v
BPADDR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	24;"	d
BPDATA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	25;"	d
BRIGHTNESS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	208;"	d
BRIGHTNESS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	302;"	d
BU16	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^uint16_t const BU16 = 128;$/;"	v
BU32	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^uint16_t const BU32 = 8192;$/;"	v
BUILTIN_SDCARD	./libraries/SdFat/src/SdFatConfig.h	411;"	d
BUSIO_HAS_HW_SPI	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	10;"	d
BUSIO_HAS_HW_SPI	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	10;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	62;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	67;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	73;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	81;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	85;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	62;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	67;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	73;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	81;"	d
BUSIO_USE_FAST_PINIO	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	85;"	d
BUSY_TIMEOUT_MICROS	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t BUSY_TIMEOUT_MICROS = 1000000;$/;"	v
BYTE	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned char	BYTE;$/;"	t
BYTE	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned char	BYTE;$/;"	t
BYTECLIP	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^BYTE BYTECLIP ($/;"	f
BYTECLIP	./libraries/esp32-camera-2.0.8/target/tjpgd.c	69;"	d	file:
BYTES_PER_SECTOR	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint16_t BYTES_PER_SECTOR = 512;$/;"	v
BYTES_PER_SECTOR	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^const uint16_t BYTES_PER_SECTOR = 512;$/;"	v
BYTES_PER_SECTOR_SHIFT	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint8_t  BYTES_PER_SECTOR_SHIFT = 9;$/;"	v
BaseBlockDriver	./libraries/SdFat/src/SdFatConfig.h	49;"	d
Bernstein	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^static uint16_t Bernstein(const char* bgn, const char* end, uint16_t hash) {$/;"	f	file:
Blink_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino = {$/;"	v
Blink_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino = {$/;"	v
Blink_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp8266_blinky.h	/^const esp32_zipfile_t Blink_ino = {$/;"	v
Blink_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino = {$/;"	v
Blink_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino = {$/;"	v
Blink_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_bootloader = {$/;"	v
Blink_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_bootloader = {$/;"	v
Blink_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_bootloader = {$/;"	v
Blink_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_bootloader = {$/;"	v
Blink_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_partitions = {$/;"	v
Blink_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_partitions = {$/;"	v
Blink_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_partitions = {$/;"	v
Blink_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t Blink_ino_partitions = {$/;"	v
BobuinoGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/BobuinoGpioPinMap.h	2;"	d
BpbExFat_t	./libraries/SdFat/src/common/FsStructs.h	/^} BpbExFat_t;$/;"	t	typeref:struct:biosParameterBlockExFat
BpbFat16_t	./libraries/SdFat/src/common/FsStructs.h	/^} BpbFat16_t;$/;"	t	typeref:struct:biosParameterBlockFat16
BpbFat32_t	./libraries/SdFat/src/common/FsStructs.h	/^} BpbFat32_t;$/;"	t	typeref:struct:biosParameterBlockFat32
Brain	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^Adafruit_TestBed_Brains Brain;$/;"	v
BrainCRC32	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^  BrainCRC32() { crc = 0xffffffff; }$/;"	f	class:BrainCRC32
BrainCRC32	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^class BrainCRC32 {$/;"	c	file:
BufferedPrint	./libraries/SdFat/src/BufferedPrint.h	/^  BufferedPrint() : m_wr(nullptr), m_in(0) {}$/;"	f	class:BufferedPrint
BufferedPrint	./libraries/SdFat/src/BufferedPrint.h	/^  explicit BufferedPrint(WriteClass* wr) : m_wr(wr), m_in(0) {}$/;"	f	class:BufferedPrint
BufferedPrint	./libraries/SdFat/src/BufferedPrint.h	/^class BufferedPrint {$/;"	c
BufferedPrint_h	./libraries/SdFat/src/BufferedPrint.h	26;"	d
BusIOBitOrder	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef BitOrder BusIOBitOrder;$/;"	t
BusIOBitOrder	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^} BusIOBitOrder;$/;"	t	typeref:enum:_BitOrder
BusIOBitOrder	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef BitOrder BusIOBitOrder;$/;"	t
BusIOBitOrder	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^} BusIOBitOrder;$/;"	t	typeref:enum:_BitOrder
BusIO_PortMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef uint32_t BusIO_PortMask;$/;"	t
BusIO_PortMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef uint8_t BusIO_PortMask;$/;"	t
BusIO_PortMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint32_t BusIO_PortMask;$/;"	t
BusIO_PortMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t BusIO_PortMask;$/;"	t
BusIO_PortReg	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef volatile uint32_t BusIO_PortReg;$/;"	t
BusIO_PortReg	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef volatile uint8_t BusIO_PortReg;$/;"	t
BusIO_PortReg	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint32_t BusIO_PortReg;$/;"	t
BusIO_PortReg	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint8_t BusIO_PortReg;$/;"	t
CACHE_FOR_READ	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_FOR_READ = 0;$/;"	m	class:FsCache
CACHE_FOR_WRITE	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_FOR_WRITE = CACHE_STATUS_DIRTY;$/;"	m	class:FsCache
CACHE_OPTION_NO_READ	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_OPTION_NO_READ = 4;$/;"	m	class:FsCache
CACHE_RESERVE_FOR_WRITE	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_RESERVE_FOR_WRITE =$/;"	m	class:FsCache
CACHE_STATUS_DIRTY	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_STATUS_DIRTY = 1;$/;"	m	class:FsCache
CACHE_STATUS_MASK	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_STATUS_MASK =$/;"	m	class:FsCache
CACHE_STATUS_MIRROR_FAT	./libraries/SdFat/src/common/FsCache.h	/^  static const uint8_t CACHE_STATUS_MIRROR_FAT = 2;$/;"	m	class:FsCache
CAMERA_BF20A6	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_BF20A6,$/;"	e	enum:__anon5
CAMERA_BF20A6	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_BF20A6,$/;"	e	enum:__anon6
CAMERA_BF3005	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_BF3005,$/;"	e	enum:__anon5
CAMERA_BF3005	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_BF3005,$/;"	e	enum:__anon6
CAMERA_DBG_PIN_ENABLE	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	53;"	d
CAMERA_DISABLE_OUT_CLOCK	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	92;"	d	file:
CAMERA_DISABLE_OUT_CLOCK	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	95;"	d	file:
CAMERA_DISABLE_OUT_CLOCK	./libraries/esp32-camera/esp_camera.c	92;"	d	file:
CAMERA_DISABLE_OUT_CLOCK	./libraries/esp32-camera/esp_camera.c	95;"	d	file:
CAMERA_ENABLE_OUT_CLOCK	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	91;"	d	file:
CAMERA_ENABLE_OUT_CLOCK	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	94;"	d	file:
CAMERA_ENABLE_OUT_CLOCK	./libraries/esp32-camera/esp_camera.c	91;"	d	file:
CAMERA_ENABLE_OUT_CLOCK	./libraries/esp32-camera/esp_camera.c	94;"	d	file:
CAMERA_FB_IN_DRAM	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    CAMERA_FB_IN_DRAM           \/*!< Frame buffer is placed in internal DRAM *\/$/;"	e	enum:__anon17
CAMERA_FB_IN_DRAM	./libraries/esp32-camera/include/esp_camera.h	/^    CAMERA_FB_IN_DRAM           \/*!< Frame buffer is placed in internal DRAM *\/$/;"	e	enum:__anon18
CAMERA_FB_IN_PSRAM	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    CAMERA_FB_IN_PSRAM,         \/*!< Frame buffer is placed in external PSRAM *\/$/;"	e	enum:__anon17
CAMERA_FB_IN_PSRAM	./libraries/esp32-camera/include/esp_camera.h	/^    CAMERA_FB_IN_PSRAM,         \/*!< Frame buffer is placed in external PSRAM *\/$/;"	e	enum:__anon18
CAMERA_GC0308	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_GC0308,$/;"	e	enum:__anon5
CAMERA_GC0308	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_GC0308,$/;"	e	enum:__anon6
CAMERA_GC032A	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_GC032A,$/;"	e	enum:__anon5
CAMERA_GC032A	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_GC032A,$/;"	e	enum:__anon6
CAMERA_GC2145	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_GC2145,$/;"	e	enum:__anon5
CAMERA_GC2145	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_GC2145,$/;"	e	enum:__anon6
CAMERA_GRAB_LATEST	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    CAMERA_GRAB_LATEST              \/*!< Except when 1 frame buffer is used, queue will always contain the last 'fb_count' frames *\/$/;"	e	enum:__anon16
CAMERA_GRAB_LATEST	./libraries/esp32-camera/include/esp_camera.h	/^    CAMERA_GRAB_LATEST              \/*!< Except when 1 frame buffer is used, queue will always contain the last 'fb_count' frames *\/$/;"	e	enum:__anon17
CAMERA_GRAB_WHEN_EMPTY	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    CAMERA_GRAB_WHEN_EMPTY,         \/*!< Fills buffers when they are empty. Less resources but first 'fb_count' frames might be old *\/$/;"	e	enum:__anon16
CAMERA_GRAB_WHEN_EMPTY	./libraries/esp32-camera/include/esp_camera.h	/^    CAMERA_GRAB_WHEN_EMPTY,         \/*!< Fills buffers when they are empty. Less resources but first 'fb_count' frames might be old *\/$/;"	e	enum:__anon17
CAMERA_ISR_IRAM_ATTR	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	47;"	d
CAMERA_ISR_IRAM_ATTR	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	50;"	d
CAMERA_ISR_IRAM_FLAG	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	46;"	d
CAMERA_ISR_IRAM_FLAG	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	49;"	d
CAMERA_MODEL_MAX	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_MODEL_MAX,$/;"	e	enum:__anon5
CAMERA_MODEL_MAX	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_MODEL_MAX,$/;"	e	enum:__anon6
CAMERA_NONE	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_NONE,$/;"	e	enum:__anon5
CAMERA_NONE	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_NONE,$/;"	e	enum:__anon6
CAMERA_NT99141	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_NT99141,$/;"	e	enum:__anon5
CAMERA_NT99141	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_NT99141,$/;"	e	enum:__anon6
CAMERA_OV2640	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_OV2640,$/;"	e	enum:__anon5
CAMERA_OV2640	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_OV2640,$/;"	e	enum:__anon6
CAMERA_OV3660	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_OV3660,$/;"	e	enum:__anon5
CAMERA_OV3660	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_OV3660,$/;"	e	enum:__anon6
CAMERA_OV5640	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_OV5640,$/;"	e	enum:__anon5
CAMERA_OV5640	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_OV5640,$/;"	e	enum:__anon6
CAMERA_OV7670	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_OV7670,$/;"	e	enum:__anon5
CAMERA_OV7670	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_OV7670,$/;"	e	enum:__anon6
CAMERA_OV7725	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_OV7725,$/;"	e	enum:__anon5
CAMERA_OV7725	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_OV7725,$/;"	e	enum:__anon6
CAMERA_PIXFORMAT_NVS_KEY	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static const char *CAMERA_PIXFORMAT_NVS_KEY = "pixformat";$/;"	v	file:
CAMERA_PIXFORMAT_NVS_KEY	./libraries/esp32-camera/esp_camera.c	/^static const char *CAMERA_PIXFORMAT_NVS_KEY = "pixformat";$/;"	v	file:
CAMERA_SC030IOT	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_SC030IOT,$/;"	e	enum:__anon5
CAMERA_SC030IOT	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_SC030IOT,$/;"	e	enum:__anon6
CAMERA_SC031GS	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_SC031GS,$/;"	e	enum:__anon5
CAMERA_SC031GS	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_SC031GS,$/;"	e	enum:__anon6
CAMERA_SC101IOT	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    CAMERA_SC101IOT,$/;"	e	enum:__anon5
CAMERA_SC101IOT	./libraries/esp32-camera/include/sensor.h	/^    CAMERA_SC101IOT,$/;"	e	enum:__anon6
CAMERA_SENSOR_NVS_KEY	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static const char *CAMERA_SENSOR_NVS_KEY = "sensor";$/;"	v	file:
CAMERA_SENSOR_NVS_KEY	./libraries/esp32-camera/esp_camera.c	/^static const char *CAMERA_SENSOR_NVS_KEY = "sensor";$/;"	v	file:
CAM_CHECK	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	66;"	d
CAM_CHECK_GOTO	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	71;"	d
CAM_IN_SUC_EOF_EVENT	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    CAM_IN_SUC_EOF_EVENT = 0,$/;"	e	enum:__anon23
CAM_PIN_D0	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	66;"	d	file:
CAM_PIN_D0	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	89;"	d	file:
CAM_PIN_D1	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	65;"	d	file:
CAM_PIN_D1	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	88;"	d	file:
CAM_PIN_D2	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	64;"	d	file:
CAM_PIN_D2	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	87;"	d	file:
CAM_PIN_D3	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	63;"	d	file:
CAM_PIN_D3	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	86;"	d	file:
CAM_PIN_D4	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	62;"	d	file:
CAM_PIN_D4	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	85;"	d	file:
CAM_PIN_D5	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	61;"	d	file:
CAM_PIN_D5	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	84;"	d	file:
CAM_PIN_D6	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	60;"	d	file:
CAM_PIN_D6	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	83;"	d	file:
CAM_PIN_D7	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	59;"	d	file:
CAM_PIN_D7	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	82;"	d	file:
CAM_PIN_HREF	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	68;"	d	file:
CAM_PIN_HREF	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	91;"	d	file:
CAM_PIN_PCLK	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	69;"	d	file:
CAM_PIN_PCLK	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	92;"	d	file:
CAM_PIN_PWDN	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	53;"	d	file:
CAM_PIN_PWDN	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	76;"	d	file:
CAM_PIN_RESET	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	54;"	d	file:
CAM_PIN_RESET	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	77;"	d	file:
CAM_PIN_SIOC	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	57;"	d	file:
CAM_PIN_SIOC	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	80;"	d	file:
CAM_PIN_SIOD	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	56;"	d	file:
CAM_PIN_SIOD	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	79;"	d	file:
CAM_PIN_VSYNC	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	67;"	d	file:
CAM_PIN_VSYNC	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	90;"	d	file:
CAM_PIN_XCLK	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	55;"	d	file:
CAM_PIN_XCLK	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	78;"	d	file:
CAM_STATE_IDLE	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    CAM_STATE_IDLE = 0,$/;"	e	enum:__anon24
CAM_STATE_READ_BUF	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    CAM_STATE_READ_BUF = 1,$/;"	e	enum:__anon24
CAM_TASK_STACK	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	37;"	d	file:
CAM_TASK_STACK	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	39;"	d	file:
CAM_TASK_STACK	./libraries/esp32-camera/cam_hal.c	37;"	d	file:
CAM_TASK_STACK	./libraries/esp32-camera/cam_hal.c	39;"	d	file:
CAM_VSYNC_EVENT	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    CAM_VSYNC_EVENT$/;"	e	enum:__anon23
CARD_STATUS_ADDRESS_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ADDRESS_ERROR = 1UL << 30;$/;"	v
CARD_STATUS_AKE_SEQ_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_AKE_SEQ_ERROR = 1UL << 3;$/;"	v
CARD_STATUS_APP_CMD	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_APP_CMD = 1UL << 5;$/;"	v
CARD_STATUS_CARD_ECC_DISABLED	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CARD_ECC_DISABLED = 1UL << 14;$/;"	v
CARD_STATUS_CARD_ECC_FAILED	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CARD_ECC_FAILED = 1UL << 21;$/;"	v
CARD_STATUS_CARD_IS_LOCKED	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CARD_IS_LOCKED = 1UL << 25;$/;"	v
CARD_STATUS_CC_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CC_ERROR = 1UL << 20;$/;"	v
CARD_STATUS_COM_CRC_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_COM_CRC_ERROR = 1UL << 23;$/;"	v
CARD_STATUS_CSD_OVERWRITE	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CSD_OVERWRITE = 1UL <<16;$/;"	v
CARD_STATUS_CURRENT_STATE	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CURRENT_STATE = 0XF << 9;$/;"	v
CARD_STATUS_CURRENT_STATE_SHIFT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_CURRENT_STATE_SHIFT = 9;$/;"	v
CARD_STATUS_ERASE_PARAM	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ERASE_PARAM = 1UL << 27;$/;"	v
CARD_STATUS_ERASE_RESET	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ERASE_RESET = 1UL << 13;$/;"	v
CARD_STATUS_ERASE_SEQ_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ERASE_SEQ_ERROR = 1UL <<28;$/;"	v
CARD_STATUS_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ERROR = 1UL << 19;$/;"	v
CARD_STATUS_FX_EVENT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_FX_EVENT = 1UL << 6;$/;"	v
CARD_STATUS_ILLEGAL_COMMAND	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_ILLEGAL_COMMAND = 1UL << 22;$/;"	v
CARD_STATUS_LOCK_UNLOCK_FAILED	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_LOCK_UNLOCK_FAILED = 1UL << 24;$/;"	v
CARD_STATUS_OUT_OF_RANGE	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_OUT_OF_RANGE = 1UL << 31;$/;"	v
CARD_STATUS_READY_FOR_DATA	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_READY_FOR_DATA = 1UL << 8;$/;"	v
CARD_STATUS_SECTOR_LEN_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_SECTOR_LEN_ERROR = 1UL << 29;$/;"	v
CARD_STATUS_WP_ERASE_SKIP	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_WP_ERASE_SKIP = 1UL << 15;$/;"	v
CARD_STATUS_WP_VIOLATION	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint32_t CARD_STATUS_WP_VIOLATION = 1UL << 26;$/;"	v
CB_B	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CB_G	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CB_R	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CCM_ANALOG_PFD_528_PFD0_FRAC	./libraries/SdFat/src/SdCard/SdioTeensy.h	223;"	d
CCM_ANALOG_PFD_528_PFD0_FRAC_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	222;"	d
CCM_ANALOG_PFD_528_PFD1_FRAC	./libraries/SdFat/src/SdCard/SdioTeensy.h	225;"	d
CCM_ANALOG_PFD_528_PFD1_FRAC_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	224;"	d
CCM_ANALOG_PFD_528_PFD2_FRAC	./libraries/SdFat/src/SdCard/SdioTeensy.h	227;"	d
CCM_ANALOG_PFD_528_PFD2_FRAC_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	226;"	d
CCM_ANALOG_PFD_528_PFD3_FRAC	./libraries/SdFat/src/SdCard/SdioTeensy.h	229;"	d
CCM_ANALOG_PFD_528_PFD3_FRAC_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	228;"	d
CCM_CSCDR1_USDHC1_CLK_PODF	./libraries/SdFat/src/SdCard/SdioTeensy.h	265;"	d
CCM_CSCDR1_USDHC1_CLK_PODF_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	264;"	d
CHAR	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef char			CHAR;$/;"	t
CHAR	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef char			CHAR;$/;"	t
CHECK_FLASH_PROGRAMMING	./libraries/SdFat/src/SdFatConfig.h	280;"	d
CHECK_SPI_ACTIVE	./libraries/SdFat/src/SdCard/SdSpiCard.h	37;"	d
CHIP_DETECT_MAGIC_ESP32	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  CHIP_DETECT_MAGIC_ESP32 = 0x00F01D83,$/;"	e	enum:__anon1
CHIP_DETECT_MAGIC_ESP32S2	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  CHIP_DETECT_MAGIC_ESP32S2 = 0x000007C6,$/;"	e	enum:__anon1
CHIP_DETECT_MAGIC_ESP32S3	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  CHIP_DETECT_MAGIC_ESP32S3 = 0x9,$/;"	e	enum:__anon1
CHIP_DETECT_MAGIC_ESP8266	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  CHIP_DETECT_MAGIC_ESP8266 = 0xFFF0C101,$/;"	e	enum:__anon1
CHIP_DETECT_MAGIC_REG_ADDR	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  CHIP_DETECT_MAGIC_REG_ADDR = 0x40001000,$/;"	e	enum:__anon5	file:
CHIP_ID_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	7;"	d
CHIP_ID_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	8;"	d
CHLF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	155;"	d
CID	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^typedef struct CID {$/;"	s
CLKRC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	114;"	d
CLKRC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	62;"	d
CLKRC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	68;"	d
CLKRC_2X	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	211;"	d
CLKRC_2X_CIF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	214;"	d
CLKRC_2X_SVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	213;"	d
CLKRC_2X_UXGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	212;"	d
CLK_DIV_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	12;"	d
CLOCK_POL_CONTROL	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	85;"	d
CLOCK_POL_CONTROL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	85;"	d
CLOCK_POL_CONTROL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	110;"	d
CMD0	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD0 = 0X00;$/;"	v
CMD0_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD0_XFERTYP = SDHC_XFERTYP_CMDINX(CMD0) | CMD_RESP_NONE;$/;"	v
CMD10	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD10 = 0X0A;$/;"	v
CMD10_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD10_XFERTYP = SDHC_XFERTYP_CMDINX(CMD10) | CMD_RESP_R2;$/;"	v
CMD11	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD11 = 0X0B;$/;"	v
CMD11_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD11_XFERTYP = SDHC_XFERTYP_CMDINX(CMD11) | CMD_RESP_R1;$/;"	v
CMD12	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD12 = 0X0C;$/;"	v
CMD12_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD12_XFERTYP = SDHC_XFERTYP_CMDINX(CMD12) | CMD_RESP_R1b |$/;"	v
CMD13	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD13 = 0X0D;$/;"	v
CMD13_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD13_XFERTYP = SDHC_XFERTYP_CMDINX(CMD13) | CMD_RESP_R1;$/;"	v
CMD17	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD17 = 0X11;$/;"	v
CMD17_DMA_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD17_DMA_XFERTYP = SDHC_XFERTYP_CMDINX(CMD17) | CMD_RESP_R1 |$/;"	v
CMD18	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD18 = 0X12;$/;"	v
CMD18_DMA_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD18_DMA_XFERTYP = SDHC_XFERTYP_CMDINX(CMD18) | CMD_RESP_R1 |$/;"	v
CMD18_PGM_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD18_PGM_XFERTYP = SDHC_XFERTYP_CMDINX(CMD18) | CMD_RESP_R1 |$/;"	v
CMD2	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD2 = 0X02;$/;"	v
CMD24	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD24 = 0X18;$/;"	v
CMD24_DMA_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD24_DMA_XFERTYP = SDHC_XFERTYP_CMDINX(CMD24) | CMD_RESP_R1 |$/;"	v
CMD25	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD25 = 0X19;$/;"	v
CMD25_DMA_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD25_DMA_XFERTYP = SDHC_XFERTYP_CMDINX(CMD25) | CMD_RESP_R1 |$/;"	v
CMD25_PGM_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD25_PGM_XFERTYP = SDHC_XFERTYP_CMDINX(CMD25) | CMD_RESP_R1 |$/;"	v
CMD2_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD2_XFERTYP = SDHC_XFERTYP_CMDINX(CMD2) | CMD_RESP_R2;$/;"	v
CMD3	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD3 = 0X03;$/;"	v
CMD32	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD32 = 0X20;$/;"	v
CMD32_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD32_XFERTYP = SDHC_XFERTYP_CMDINX(CMD32) | CMD_RESP_R1;$/;"	v
CMD33	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD33 = 0X21;$/;"	v
CMD33_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD33_XFERTYP = SDHC_XFERTYP_CMDINX(CMD33) | CMD_RESP_R1;$/;"	v
CMD38	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD38 = 0X26;$/;"	v
CMD38_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD38_XFERTYP = SDHC_XFERTYP_CMDINX(CMD38) | CMD_RESP_R1b;$/;"	v
CMD3_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD3_XFERTYP = SDHC_XFERTYP_CMDINX(CMD3) | CMD_RESP_R6;$/;"	v
CMD55	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD55 = 0X37;$/;"	v
CMD55_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD55_XFERTYP = SDHC_XFERTYP_CMDINX(CMD55) | CMD_RESP_R1;$/;"	v
CMD58	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD58 = 0X3A;$/;"	v
CMD59	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD59 = 0X3B;$/;"	v
CMD6	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD6 = 0X06;$/;"	v
CMD6_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD6_XFERTYP = SDHC_XFERTYP_CMDINX(CMD6) | CMD_RESP_R1 |$/;"	v
CMD7	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD7 = 0X07;$/;"	v
CMD7_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD7_XFERTYP = SDHC_XFERTYP_CMDINX(CMD7) | CMD_RESP_R1b;$/;"	v
CMD8	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD8 = 0X08;$/;"	v
CMD8_RETRIES	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD8_RETRIES = 3;$/;"	v
CMD8_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD8_XFERTYP = SDHC_XFERTYP_CMDINX(CMD8) | CMD_RESP_R7;$/;"	v
CMD9	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t CMD9 = 0X09;$/;"	v
CMD9_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD9_XFERTYP = SDHC_XFERTYP_CMDINX(CMD9) | CMD_RESP_R2;$/;"	v
CMD_RESP_NONE	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_NONE = SDHC_XFERTYP_RSPTYP(0);$/;"	v
CMD_RESP_R1	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R1 = SDHC_XFERTYP_CICEN | SDHC_XFERTYP_CCCEN |$/;"	v
CMD_RESP_R1b	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R1b = SDHC_XFERTYP_CICEN | SDHC_XFERTYP_CCCEN |$/;"	v
CMD_RESP_R2	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R2 = SDHC_XFERTYP_CCCEN | SDHC_XFERTYP_RSPTYP(1);$/;"	v
CMD_RESP_R3	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R3 = SDHC_XFERTYP_RSPTYP(2);$/;"	v
CMD_RESP_R6	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R6 = CMD_RESP_R1;$/;"	v
CMD_RESP_R7	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t CMD_RESP_R7 = CMD_RESP_R1;$/;"	v
CM_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	14;"	d
CM_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	11;"	d
COM1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	105;"	d
COM1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	13;"	d
COM10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	118;"	d
COM10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	105;"	d
COM10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	112;"	d
COM10_HREF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	195;"	d
COM10_HREF_NEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	199;"	d
COM10_HREF_REV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	111;"	d
COM10_HREF_REV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	118;"	d
COM10_HSYNC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	196;"	d
COM10_HSYNC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	107;"	d
COM10_HSYNC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	114;"	d
COM10_HSYNC_NEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	201;"	d
COM10_NEGATIVE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	106;"	d
COM10_NEGATIVE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	113;"	d
COM10_OUT_RANGE_10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	116;"	d
COM10_OUT_RANGE_10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	123;"	d
COM10_OUT_RANGE_8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	115;"	d
COM10_OUT_RANGE_8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	122;"	d
COM10_PCLK_EDGE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	198;"	d
COM10_PCLK_FREE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	197;"	d
COM10_PCLK_FREE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	108;"	d
COM10_PCLK_FREE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	115;"	d
COM10_PCLK_MASK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	109;"	d
COM10_PCLK_MASK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	116;"	d
COM10_PCLK_REV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	110;"	d
COM10_PCLK_REV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	117;"	d
COM10_VSYNC_FALLING	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	112;"	d
COM10_VSYNC_FALLING	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	119;"	d
COM10_VSYNC_NEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	200;"	d
COM10_VSYNC_NEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	114;"	d
COM10_VSYNC_NEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	121;"	d
COM10_VSYNC_RISING	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	113;"	d
COM10_VSYNC_RISING	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	120;"	d
COM11	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	164;"	d
COM11	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	136;"	d
COM11_EXP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	165;"	d
COM11_HZAUTO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	166;"	d
COM11_SNGL_FRAME_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	137;"	d
COM11_SNGL_XFR_TRIG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	138;"	d
COM12	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	168;"	d
COM12	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	166;"	d
COM13	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	170;"	d
COM13	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	168;"	d
COM13_ABLC_GAIN_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	172;"	d
COM13_ADC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	170;"	d
COM13_ANALOG_BLC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	171;"	d
COM13_BLC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	169;"	d
COM13_GAMMA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	171;"	d
COM13_UVSAT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	172;"	d
COM14	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	174;"	d
COM14	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	174;"	d
COM15	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	177;"	d
COM15	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	175;"	d
COM15_R00FF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	180;"	d
COM15_RGB565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	179;"	d
COM15_SET_RGB565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	178;"	d
COM16	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	182;"	d
COM16	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	176;"	d
COM16_AWBGAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	183;"	d
COM17	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	184;"	d
COM19	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	140;"	d
COM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	108;"	d
COM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	19;"	d
COM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	19;"	d
COM22	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	142;"	d
COM25	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	143;"	d
COM2_OUT_DRIVE_1x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	161;"	d
COM2_OUT_DRIVE_1x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	21;"	d
COM2_OUT_DRIVE_1x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	21;"	d
COM2_OUT_DRIVE_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	162;"	d
COM2_OUT_DRIVE_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	22;"	d
COM2_OUT_DRIVE_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	22;"	d
COM2_OUT_DRIVE_3x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	163;"	d
COM2_OUT_DRIVE_3x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	23;"	d
COM2_OUT_DRIVE_3x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	23;"	d
COM2_OUT_DRIVE_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	164;"	d
COM2_OUT_DRIVE_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	24;"	d
COM2_OUT_DRIVE_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	24;"	d
COM2_SOFT_SLEEP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	20;"	d
COM2_SOFT_SLEEP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	20;"	d
COM2_STDBY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	160;"	d
COM3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	111;"	d
COM3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	29;"	d
COM3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	29;"	d
COM3_BAND_50Hz	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	167;"	d
COM3_BAND_60Hz	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	168;"	d
COM3_BAND_AUTO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	169;"	d
COM3_BAND_SET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	170;"	d
COM3_COLOR_BAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	37;"	d
COM3_DCW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	34;"	d
COM3_DEFAULT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	166;"	d
COM3_MIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	31;"	d
COM3_SCALE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	33;"	d
COM3_SET_CBAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	38;"	d
COM3_SET_FLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	40;"	d
COM3_SET_MIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	39;"	d
COM3_SWAP_BR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	32;"	d
COM3_SWAP_MSB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	34;"	d
COM3_SWAP_OUT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	30;"	d
COM3_SWAP_YUV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	33;"	d
COM3_TRI_CLK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	31;"	d
COM3_TRI_CLOCK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	35;"	d
COM3_TRI_DATA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	32;"	d
COM3_TRI_DATA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	36;"	d
COM3_VFLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	30;"	d
COM4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	112;"	d
COM4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	36;"	d
COM4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	42;"	d
COM4_AEC_1_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	42;"	d
COM4_AEC_1_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	48;"	d
COM4_AEC_1_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	43;"	d
COM4_AEC_1_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	49;"	d
COM4_AEC_2_3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	44;"	d
COM4_AEC_2_3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	50;"	d
COM4_AEC_FULL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	41;"	d
COM4_AEC_FULL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	47;"	d
COM4_PLL_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	38;"	d
COM4_PLL_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	44;"	d
COM4_PLL_6x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	39;"	d
COM4_PLL_6x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	45;"	d
COM4_PLL_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	40;"	d
COM4_PLL_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	46;"	d
COM4_PLL_BYPASS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	37;"	d
COM4_PLL_BYPASS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	43;"	d
COM5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	46;"	d
COM5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	52;"	d
COM5_AEC_NO_LIMIT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	56;"	d
COM5_AEC_NO_LIMIT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	62;"	d
COM5_AFR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	47;"	d
COM5_AFR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	53;"	d
COM5_AFR_0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	49;"	d
COM5_AFR_0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	55;"	d
COM5_AFR_16x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	55;"	d
COM5_AFR_16x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	61;"	d
COM5_AFR_1_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	50;"	d
COM5_AFR_1_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	56;"	d
COM5_AFR_1_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	51;"	d
COM5_AFR_1_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	57;"	d
COM5_AFR_1_8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	52;"	d
COM5_AFR_1_8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	58;"	d
COM5_AFR_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	53;"	d
COM5_AFR_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	59;"	d
COM5_AFR_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	54;"	d
COM5_AFR_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	60;"	d
COM5_AFR_SPEED	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	48;"	d
COM5_AFR_SPEED	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	54;"	d
COM6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	58;"	d
COM6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	64;"	d
COM6_AUTO_WINDOW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	59;"	d
COM6_AUTO_WINDOW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	65;"	d
COM7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	115;"	d
COM7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	64;"	d
COM7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	70;"	d
COM7_BT656	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	68;"	d
COM7_BT656	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	74;"	d
COM7_COLOR_BAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	177;"	d
COM7_FMT_GBR422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	70;"	d
COM7_FMT_GBR422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	76;"	d
COM7_FMT_P_BAYER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	75;"	d
COM7_FMT_P_BAYER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	81;"	d
COM7_FMT_RGB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	76;"	d
COM7_FMT_RGB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	82;"	d
COM7_FMT_RGB444	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	73;"	d
COM7_FMT_RGB444	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	79;"	d
COM7_FMT_RGB555	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	72;"	d
COM7_FMT_RGB555	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	78;"	d
COM7_FMT_RGB565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	71;"	d
COM7_FMT_RGB565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	77;"	d
COM7_FMT_R_BAYER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	77;"	d
COM7_FMT_R_BAYER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	83;"	d
COM7_FMT_YUV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	74;"	d
COM7_FMT_YUV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	80;"	d
COM7_RESET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	65;"	d
COM7_RESET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	71;"	d
COM7_RES_CIF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	175;"	d
COM7_RES_QVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	67;"	d
COM7_RES_QVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	73;"	d
COM7_RES_SVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	174;"	d
COM7_RES_UXGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	173;"	d
COM7_RES_VGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	66;"	d
COM7_RES_VGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	72;"	d
COM7_SENSOR_RAW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	69;"	d
COM7_SENSOR_RAW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	75;"	d
COM7_SET_FMT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	78;"	d
COM7_SET_FMT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	84;"	d
COM7_SET_RGB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	85;"	d
COM7_SRST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	172;"	d
COM7_ZOOM_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	176;"	d
COM8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	116;"	d
COM8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	80;"	d
COM8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	87;"	d
COM8_AEC_BANDF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	85;"	d
COM8_AEC_BANDF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	92;"	d
COM8_AEC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	182;"	d
COM8_AEC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	89;"	d
COM8_AEC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	96;"	d
COM8_AEC_FINE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	86;"	d
COM8_AEC_FINE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	93;"	d
COM8_AGC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	181;"	d
COM8_AGC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	87;"	d
COM8_AGC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	94;"	d
COM8_AWB_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	88;"	d
COM8_AWB_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	95;"	d
COM8_BANDF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	84;"	d
COM8_BANDF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	91;"	d
COM8_BNDF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	180;"	d
COM8_DEFAULT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	179;"	d
COM8_FAST_AUTO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	81;"	d
COM8_FAST_AUTO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	88;"	d
COM8_SET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	183;"	d
COM8_SET_AEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	92;"	d
COM8_SET_AEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	99;"	d
COM8_SET_AGC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	90;"	d
COM8_SET_AGC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	97;"	d
COM8_SET_AWB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	91;"	d
COM8_SET_AWB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	98;"	d
COM8_STEP_UNLIMIT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	83;"	d
COM8_STEP_UNLIMIT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	90;"	d
COM8_STEP_VSYNC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	82;"	d
COM8_STEP_VSYNC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	89;"	d
COM9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	117;"	d
COM9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	94;"	d
COM9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	101;"	d
COM9_AGC_GAIN_128x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	192;"	d
COM9_AGC_GAIN_16x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	189;"	d
COM9_AGC_GAIN_16x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	99;"	d
COM9_AGC_GAIN_16x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	106;"	d
COM9_AGC_GAIN_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	186;"	d
COM9_AGC_GAIN_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	96;"	d
COM9_AGC_GAIN_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	103;"	d
COM9_AGC_GAIN_32x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	190;"	d
COM9_AGC_GAIN_32x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	100;"	d
COM9_AGC_GAIN_32x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	107;"	d
COM9_AGC_GAIN_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	187;"	d
COM9_AGC_GAIN_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	97;"	d
COM9_AGC_GAIN_4x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	104;"	d
COM9_AGC_GAIN_64x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	191;"	d
COM9_AGC_GAIN_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	188;"	d
COM9_AGC_GAIN_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	98;"	d
COM9_AGC_GAIN_8x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	105;"	d
COM9_AGC_SET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	193;"	d
COM9_DEFAULT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	185;"	d
COM9_DROP_HREF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	102;"	d
COM9_DROP_HREF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	109;"	d
COM9_DROP_VSYNC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	101;"	d
COM9_DROP_VSYNC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	108;"	d
COM9_HISTO_AVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	95;"	d
COM9_HISTO_AVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	102;"	d
COM9_SET_AGC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	103;"	d
COM9_SET_AGC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	110;"	d
COMPRESSION_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	184;"	d
COMPRESSION_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	184;"	d
COMPRESSION_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	186;"	d
COMPRESSION_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	185;"	d
COMPRESSION_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	185;"	d
COMPRESSION_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	187;"	d
COMPRESSION_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	186;"	d
COMPRESSION_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	186;"	d
COMPRESSION_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	188;"	d
COMPRESSION_CTRL03	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	187;"	d
COMPRESSION_CTRL03	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	187;"	d
COMPRESSION_CTRL03	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	189;"	d
COMPRESSION_CTRL04	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	188;"	d
COMPRESSION_CTRL04	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	188;"	d
COMPRESSION_CTRL04	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	190;"	d
COMPRESSION_CTRL05	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	189;"	d
COMPRESSION_CTRL05	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	189;"	d
COMPRESSION_CTRL05	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	191;"	d
COMPRESSION_CTRL06	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	190;"	d
COMPRESSION_CTRL06	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	190;"	d
COMPRESSION_CTRL06	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	192;"	d
COMPRESSION_CTRL07	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	191;"	d
COMPRESSION_CTRL07	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	191;"	d
COMPRESSION_CTRL07	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	193;"	d
COMPRESSION_CTRL09	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	193;"	d
COMPRESSION_CTRL09	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	193;"	d
COMPRESSION_CTRL09	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	195;"	d
COMPRESSION_CTRL0E	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	198;"	d
COMPRESSION_CTRL0E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	198;"	d
COMPRESSION_CTRL0E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	200;"	d
COMPRESSION_CTRL0a	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	194;"	d
COMPRESSION_CTRL0a	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	194;"	d
COMPRESSION_CTRL0a	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	196;"	d
COMPRESSION_CTRL0b	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	195;"	d
COMPRESSION_CTRL0b	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	195;"	d
COMPRESSION_CTRL0b	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	197;"	d
COMPRESSION_CTRL0c	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	196;"	d
COMPRESSION_CTRL0c	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	196;"	d
COMPRESSION_CTRL0c	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	198;"	d
COMPRESSION_CTRL0d	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	197;"	d
COMPRESSION_CTRL0d	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	197;"	d
COMPRESSION_CTRL0d	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	199;"	d
COMPRESSION_ISI_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	192;"	d
COMPRESSION_ISI_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	192;"	d
COMPRESSION_ISI_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	194;"	d
CONST_BITS	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { CONST_BITS = 13, ROW_BITS = 2 };$/;"	e	enum:jpge::__anon3	file:
CONTRASCENTER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	210;"	d
CONTRAST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	209;"	d
CONTRAST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	303;"	d
CONV_DISABLE	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    CONV_DISABLE,$/;"	e	enum:__anon18
CONV_DISABLE	./libraries/esp32-camera/include/esp_camera.h	/^    CONV_DISABLE,$/;"	e	enum:__anon19
CRC7	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^static uint8_t CRC7(const uint8_t* data, uint8_t n) {$/;"	f	file:
CRC_CCITT	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^static uint16_t CRC_CCITT(const uint8_t* data, size_t n) {$/;"	f	file:
CR_B	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CR_G	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CR_R	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
CSD	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^typedef struct CSD {$/;"	s
CTRL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	31;"	d
CTRL0_AEC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	50;"	d
CTRL0_AEC_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	51;"	d
CTRL0_RAW_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	57;"	d
CTRL0_RGB_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	56;"	d
CTRL0_STAT_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	52;"	d
CTRL0_VFIRST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	53;"	d
CTRL0_YUV422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	54;"	d
CTRL0_YUV_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	55;"	d
CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	32;"	d
CTRL1_AWB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	203;"	d
CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	26;"	d
CTRL2_CMX_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	63;"	d
CTRL2_DCW_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	59;"	d
CTRL2_SDE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	60;"	d
CTRL2_UV_ADJ_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	61;"	d
CTRL2_UV_AVG_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	62;"	d
CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	27;"	d
CTRL3_BPC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	65;"	d
CTRL3_WPC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	66;"	d
CTRLI	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	13;"	d
CTRLI_LP_DP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	47;"	d
CTRLI_ROUND	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	48;"	d
CYCLES_400	./libraries/Adafruit_NeoPixel/esp8266.c	32;"	d	file:
CYCLES_400	./libraries/Adafruit_NeoPixel/kendyte_k210.c	22;"	d	file:
CYCLES_400_T0H	./libraries/Adafruit_NeoPixel/esp8266.c	30;"	d	file:
CYCLES_400_T0H	./libraries/Adafruit_NeoPixel/kendyte_k210.c	20;"	d	file:
CYCLES_400_T1H	./libraries/Adafruit_NeoPixel/esp8266.c	31;"	d	file:
CYCLES_400_T1H	./libraries/Adafruit_NeoPixel/kendyte_k210.c	21;"	d	file:
CYCLES_800	./libraries/Adafruit_NeoPixel/esp8266.c	29;"	d	file:
CYCLES_800	./libraries/Adafruit_NeoPixel/kendyte_k210.c	19;"	d	file:
CYCLES_800_T0H	./libraries/Adafruit_NeoPixel/esp8266.c	27;"	d	file:
CYCLES_800_T0H	./libraries/Adafruit_NeoPixel/kendyte_k210.c	17;"	d	file:
CYCLES_800_T1H	./libraries/Adafruit_NeoPixel/esp8266.c	28;"	d	file:
CYCLES_800_T1H	./libraries/Adafruit_NeoPixel/kendyte_k210.c	18;"	d	file:
ChannelUsed	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^ESP32PWM * ESP32PWM::ChannelUsed[NUM_PWM]; \/\/ used to track whether a channel is in service$/;"	m	class:ESP32PWM	file:
ChannelUsed	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static ESP32PWM * ChannelUsed[NUM_PWM]; \/\/ used to track whether a channel is in service$/;"	m	class:ESP32PWM
Checkout adafruit/ci-arduino	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: Checkout adafruit\/ci-arduino$/;"	k
Checkout code	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: Checkout code$/;"	k
Clip8	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^const BYTE Clip8[1024] = {$/;"	v	file:
Color	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  static uint32_t Color(uint8_t r, uint8_t g, uint8_t b) {$/;"	f	class:Adafruit_NeoPixel
Color	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  static uint32_t Color(uint8_t r, uint8_t g, uint8_t b, uint8_t w) {$/;"	f	class:Adafruit_NeoPixel
ColorHSV	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^uint32_t Adafruit_NeoPixel::ColorHSV(uint16_t hue, uint8_t sat, uint8_t val) {$/;"	f	class:Adafruit_NeoPixel
CompileDateTime_h	./libraries/SdFat/src/common/CompileDateTime.h	26;"	d
DATAX0	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAX0 = 0x32; \/\/X-Axis Data 0$/;"	v
DATAX1	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAX1 = 0x33; \/\/X-Axis Data 1$/;"	v
DATAY0	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAY0 = 0x34; \/\/Y-Axis Data 0$/;"	v
DATAY1	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAY1 = 0x35; \/\/Y-Axis Data 1$/;"	v
DATAZ0	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAZ0 = 0x36; \/\/Z-Axis Data 0$/;"	v
DATAZ1	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATAZ1 = 0x37; \/\/Z-Axis Data 1$/;"	v
DATA_DIM16	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^const size_t DATA_DIM16 = (BLOCK_SIZE - 2*sizeof(uint16_t))\/sizeof(uint16_t);$/;"	v
DATA_DIM16	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^const size_t DATA_DIM16 = 254;$/;"	v
DATA_DIM8	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^const size_t DATA_DIM8 = (BLOCK_SIZE - 2*sizeof(uint16_t))\/sizeof(uint8_t);$/;"	v
DATA_DIM8	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^const size_t DATA_DIM8 = 508;$/;"	v
DATA_FORMAT	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t DATA_FORMAT = 0x31;$/;"	v
DATA_READ	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ = SDHC_MIX_CTRL_DTDSEL | SDHC_XFERTYP_DPSEL;$/;"	v
DATA_READ	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ = SDHC_XFERTYP_DTDSEL | SDHC_XFERTYP_DPSEL;$/;"	v
DATA_READ_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_DMA = DATA_READ | SDHC_MIX_CTRL_DMAEN;$/;"	v
DATA_READ_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_DMA = DATA_READ | SDHC_XFERTYP_DMAEN;$/;"	v
DATA_READ_MULTI_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_MULTI_DMA = DATA_READ_DMA | SDHC_MIX_CTRL_MSBSEL |$/;"	v
DATA_READ_MULTI_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_MULTI_DMA = DATA_READ_DMA | SDHC_XFERTYP_MSBSEL |$/;"	v
DATA_READ_MULTI_PGM	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_MULTI_PGM = DATA_READ | SDHC_MIX_CTRL_MSBSEL;$/;"	v
DATA_READ_MULTI_PGM	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_READ_MULTI_PGM = DATA_READ | SDHC_XFERTYP_MSBSEL |$/;"	v
DATA_RES_ACCEPTED	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t DATA_RES_ACCEPTED = 0X05;$/;"	v
DATA_RES_MASK	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t DATA_RES_MASK = 0X1F;$/;"	v
DATA_START_SECTOR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t DATA_START_SECTOR = 0XFE;$/;"	v
DATA_WRITE_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_DMA = SDHC_XFERTYP_DPSEL | SDHC_MIX_CTRL_DMAEN;$/;"	v
DATA_WRITE_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_DMA = SDHC_XFERTYP_DPSEL | SDHC_XFERTYP_DMAEN;$/;"	v
DATA_WRITE_MULTI_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_MULTI_DMA = DATA_WRITE_DMA | SDHC_MIX_CTRL_MSBSEL |$/;"	v
DATA_WRITE_MULTI_DMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_MULTI_DMA = DATA_WRITE_DMA | SDHC_XFERTYP_MSBSEL |$/;"	v
DATA_WRITE_MULTI_PGM	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_MULTI_PGM = SDHC_XFERTYP_DPSEL | SDHC_MIX_CTRL_MSBSEL;$/;"	v
DATA_WRITE_MULTI_PGM	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t DATA_WRITE_MULTI_PGM = SDHC_XFERTYP_DPSEL | SDHC_XFERTYP_MSBSEL |$/;"	v
DBG_FAIL_MACRO	./libraries/SdFat/src/common/DebugMacros.h	51;"	d
DBG_FAIL_MACRO	./libraries/SdFat/src/common/DebugMacros.h	56;"	d
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/ExFatLib/ExFatVolume.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatFile.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	26;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatName.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatPartition.cpp	26;"	d	file:
DBG_FILE	./libraries/SdFat/src/FatLib/FatVolume.cpp	25;"	d	file:
DBG_FILE	./libraries/SdFat/src/common/FsCache.cpp	25;"	d	file:
DBG_HALT_IF	./libraries/SdFat/src/common/DebugMacros.h	53;"	d
DBG_HALT_IF	./libraries/SdFat/src/common/DebugMacros.h	58;"	d
DBG_HALT_MACRO	./libraries/SdFat/src/common/DebugMacros.h	52;"	d
DBG_HALT_MACRO	./libraries/SdFat/src/common/DebugMacros.h	57;"	d
DBG_IRQSTAT	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	219;"	d	file:
DBG_IRQSTAT	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	271;"	d	file:
DBG_PIN_NUM	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	56;"	d
DBG_PIN_NUM	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	58;"	d
DBG_PIN_SET	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	61;"	d
DBG_PIN_SET	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	63;"	d
DBG_PRINTF	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	35;"	d	file:
DBG_PRINTF	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	44;"	d	file:
DBG_PRINT_BUF	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	37;"	d	file:
DBG_PRINT_BUF	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	45;"	d	file:
DBG_TRACE	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	216;"	d	file:
DBG_WARN_IF	./libraries/SdFat/src/common/DebugMacros.h	69;"	d
DBG_WARN_IF	./libraries/SdFat/src/common/DebugMacros.h	72;"	d
DBG_WARN_MACRO	./libraries/SdFat/src/common/DebugMacros.h	68;"	d
DBG_WARN_MACRO	./libraries/SdFat/src/common/DebugMacros.h	71;"	d
DBLV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	235;"	d
DBSTEP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	141;"	d
DCT1D	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	118;"	d	file:
DCT2D	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static void DCT2D(int32 *p) {$/;"	f	namespace:jpge
DCT_DESCALE	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	116;"	d	file:
DCT_MUL	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	117;"	d	file:
DC_CHROMA_CODES	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
DC_LUM_CODES	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
DEBUG	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	32;"	d	file:
DEC	./libraries/SdFat/extras/attic/PrintBasic.h	50;"	d
DEC	./libraries/SdFat/src/common/PrintBasic.h	51;"	d
DECODE_RGB565	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^    DECODE_RGB565,$/;"	e	enum:__anon1	file:
DECODE_RGB888	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^    DECODE_RGB888,$/;"	e	enum:__anon1	file:
DEDICATED_SPI	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^const uint8_t DEDICATED_SPI = 1;$/;"	v
DEFAULT_PULSE_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	99;"	d
DEFAULT_PULSE_WIDTH_TICKS	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	100;"	d
DEFAULT_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	87;"	d
DEFAULT_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	91;"	d
DEFAULT_TIMER_WIDTH_TICKS	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	93;"	d
DEFAULT_uS_HIGH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	74;"	d
DEFAULT_uS_LOW	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	73;"	d
DESTRUCTOR_CLOSES_FILE	./libraries/SdFat/src/SdFatConfig.h	339;"	d
DISABLE_DAC	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static boolean DISABLE_DAC;$/;"	m	class:ESP32PWM
DMA_SDIO	./libraries/SdFat/src/SdCard/SdioCard.h	31;"	d
DM_LNH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	284;"	d
DM_LNH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	157;"	d
DM_LNL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	283;"	d
DM_LNL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	156;"	d
DNSOFF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	289;"	d
DNSTH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	197;"	d
DNSTH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	286;"	d
DPRP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	19;"	d
DRIVE_CAPABILITY	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	95;"	d
DRIVE_CAPABILITY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	95;"	d
DRIVE_CAPABILITY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	15;"	d
DSPAUTO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	327;"	d
DSPAUTO_AWB_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	328;"	d
DSPAUTO_DENOISE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	329;"	d
DSPAUTO_EDGE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	330;"	d
DSPAUTO_SCAL0_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	332;"	d
DSPAUTO_SCAL1_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	333;"	d
DSPAUTO_UV_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	331;"	d
DSP_CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	212;"	d
DSP_CTRL1_BLACK_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	219;"	d
DSP_CTRL1_FIFO_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	213;"	d
DSP_CTRL1_GAMMA_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	218;"	d
DSP_CTRL1_INTRP_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	217;"	d
DSP_CTRL1_MTRX_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	216;"	d
DSP_CTRL1_SDE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	215;"	d
DSP_CTRL1_UV_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	214;"	d
DSP_CTRL1_WHITE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	220;"	d
DSP_CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	222;"	d
DSP_CTRL2_HDCW_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	224;"	d
DSP_CTRL2_HZOOM_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	226;"	d
DSP_CTRL2_VDCW_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	223;"	d
DSP_CTRL2_VZOOM_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	225;"	d
DSP_CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	228;"	d
DSP_CTRL3_CBAR_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	230;"	d
DSP_CTRL3_FIFO_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	231;"	d
DSP_CTRL3_INTRP_PWDN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	234;"	d
DSP_CTRL3_SCAL1_PWDN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	232;"	d
DSP_CTRL3_SCAL2_PWDN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	233;"	d
DSP_CTRL3_SET_CBAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	235;"	d
DSP_CTRL3_UV_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	229;"	d
DSP_CTRL4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	238;"	d
DSP_CTRL4_RAW10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	241;"	d
DSP_CTRL4_RAW8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	240;"	d
DSP_CTRL4_YUV_RGB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	239;"	d
DWORD	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned long	DWORD;$/;"	t
DWORD	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned long	DWORD;$/;"	t
DebugMacros_h	./libraries/SdFat/src/common/DebugMacros.h	26;"	d
DedicatedSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  DedicatedSpiCard() {}$/;"	f	class:DedicatedSpiCard
DedicatedSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^class DedicatedSpiCard : public SharedSpiCard {$/;"	c
DigitalPin	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  DigitalPin() {}$/;"	f	class:DigitalPin
DigitalPin	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^class DigitalPin {$/;"	c
DigitalPin_h	./libraries/SdFat/src/DigitalIO/DigitalPin.h	29;"	d
DirBitmap_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirBitmap_t;$/;"	t	typeref:struct:__anon6
DirFat_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirFat_t;$/;"	t	typeref:struct:__anon4
DirFile_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirFile_t;$/;"	t	typeref:struct:__anon9
DirGeneric_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirGeneric_t;$/;"	t	typeref:struct:__anon1
DirLabel_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirLabel_t;$/;"	t	typeref:struct:__anon8
DirLfn_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirLfn_t;$/;"	t	typeref:struct:__anon5
DirName_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirName_t;$/;"	t	typeref:struct:__anon11
DirPos_t	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^struct DirPos_t {$/;"	s
DirStream_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirStream_t;$/;"	t	typeref:struct:__anon10
DirUpcase_t	./libraries/SdFat/src/common/FsStructs.h	/^} DirUpcase_t;$/;"	t	typeref:struct:__anon7
EDGE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	176;"	d
EDGE0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	287;"	d
EDGE1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	288;"	d
EDGE2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	290;"	d
EDGE3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	291;"	d
EFUSE_RD_REG_BASE	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  EFUSE_RD_REG_BASE = 0x3FF5A000,$/;"	e	enum:__anon5	file:
ENABLE_ARDUINO_FEATURES	./libraries/SdFat/src/SdFatConfig.h	68;"	d
ENABLE_ARDUINO_SERIAL	./libraries/SdFat/src/SdFatConfig.h	70;"	d
ENABLE_ARDUINO_STRING	./libraries/SdFat/src/SdFatConfig.h	72;"	d
ENABLE_DEDICATED_SPI	./libraries/SdFat/src/SdFatConfig.h	119;"	d
ENABLE_DEDICATED_SPI	./libraries/SdFat/src/SdFatConfig.h	122;"	d
ENABLE_EXTENDED_TRANSFER_CLASS	./libraries/SdFat/src/SdFatConfig.h	48;"	d
ENDL_CALLS_FLUSH	./libraries/SdFat/src/SdFatConfig.h	360;"	d
ENFORCE_PINS	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	71;"	d
EOF	./libraries/SdFat/src/iostream/StdioStream.h	88;"	d
ESP32BootROMClass	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^ESP32BootROMClass::ESP32BootROMClass(HardwareSerial &serial, int gpio0Pin,$/;"	f	class:ESP32BootROMClass
ESP32BootROMClass	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^class ESP32BootROMClass {$/;"	c
ESP32PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^ESP32PWM::ESP32PWM() {$/;"	f	class:ESP32PWM
ESP32PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^class ESP32PWM {$/;"	c
ESP32_BOOTROM_H	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	22;"	d
ESP32_DEFAULT_TIMEOUT	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	26;"	d
ESP32_Servo_VERSION	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	95;"	d
ESP32_Servo_h	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	66;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp8266_blinky.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp8266_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/nina_1_7_4_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	2;"	d
ESP_BINARIES_COUNT	./libraries/Adafruit_TestBed/examples/program_esp32_uart_from_sdcard/esp_binaries.h	2;"	d
ESP_BINARIES_H_	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	26;"	d
ESP_BINARIES_H_	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	26;"	d
ESP_CAMERA_ETS_PRINTF	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	34;"	d	file:
ESP_CAMERA_ETS_PRINTF	./libraries/esp32-camera/cam_hal.c	34;"	d	file:
ESP_CAMERA_SUPPORTED	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	78;"	d
ESP_CAMERA_SUPPORTED	./libraries/esp32-camera/include/esp_camera.h	78;"	d
ESP_CHANGE_BAUDRATE	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_CHANGE_BAUDRATE = 0x0F,$/;"	e	enum:__anon4	file:
ESP_CHECKSUM_MAGIC	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_CHECKSUM_MAGIC = 0xEF,$/;"	e	enum:__anon5	file:
ESP_ERASE_FLASH	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_ERASE_FLASH = 0xD0,$/;"	e	enum:__anon4	file:
ESP_ERASE_REGION	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_ERASE_REGION = 0xD1,$/;"	e	enum:__anon4	file:
ESP_ERR_CAMERA_BASE	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	172;"	d
ESP_ERR_CAMERA_BASE	./libraries/esp32-camera/include/esp_camera.h	172;"	d
ESP_ERR_CAMERA_FAILED_TO_SET_FRAME_SIZE	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	174;"	d
ESP_ERR_CAMERA_FAILED_TO_SET_FRAME_SIZE	./libraries/esp32-camera/include/esp_camera.h	174;"	d
ESP_ERR_CAMERA_FAILED_TO_SET_OUT_FORMAT	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	175;"	d
ESP_ERR_CAMERA_FAILED_TO_SET_OUT_FORMAT	./libraries/esp32-camera/include/esp_camera.h	175;"	d
ESP_ERR_CAMERA_NOT_DETECTED	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	173;"	d
ESP_ERR_CAMERA_NOT_DETECTED	./libraries/esp32-camera/include/esp_camera.h	173;"	d
ESP_ERR_CAMERA_NOT_SUPPORTED	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	176;"	d
ESP_ERR_CAMERA_NOT_SUPPORTED	./libraries/esp32-camera/include/esp_camera.h	176;"	d
ESP_FLASH_BEGIN	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_BEGIN = 0x02,$/;"	e	enum:__anon4	file:
ESP_FLASH_DATA	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_DATA = 0x03,$/;"	e	enum:__anon4	file:
ESP_FLASH_DEFL_BEGIN	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_DEFL_BEGIN = 0x10,$/;"	e	enum:__anon4	file:
ESP_FLASH_DEFL_DATA	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_DEFL_DATA = 0x11,$/;"	e	enum:__anon4	file:
ESP_FLASH_DEFL_END	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_DEFL_END = 0x12,$/;"	e	enum:__anon4	file:
ESP_FLASH_ENCRYPT_DATA	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_ENCRYPT_DATA = 0xD4,$/;"	e	enum:__anon4	file:
ESP_FLASH_END	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_FLASH_END = 0x04,$/;"	e	enum:__anon4	file:
ESP_GET_SECURITY_INFO	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_GET_SECURITY_INFO = 0x14,$/;"	e	enum:__anon4	file:
ESP_IMAGE_MAGIC	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_IMAGE_MAGIC = 0xE9,$/;"	e	enum:__anon5	file:
ESP_LED_PIN	./libraries/Flash/flash.h	1;"	d
ESP_MEM_BEGIN	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_MEM_BEGIN = 0x05,$/;"	e	enum:__anon4	file:
ESP_MEM_DATA	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_MEM_DATA = 0x07,$/;"	e	enum:__anon4	file:
ESP_MEM_END	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_MEM_END = 0x06,$/;"	e	enum:__anon4	file:
ESP_RAM_BLOCK	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_RAM_BLOCK = 0x1800,$/;"	e	enum:__anon5	file:
ESP_READ_FLASH	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_READ_FLASH = 0xD2,$/;"	e	enum:__anon4	file:
ESP_READ_FLASH_SLOW	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_READ_FLASH_SLOW = 0x0E, \/\/ ROM only, much slower than the stub flash read$/;"	e	enum:__anon4	file:
ESP_READ_REG	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_READ_REG = 0x0A,$/;"	e	enum:__anon4	file:
ESP_ROM_BAUD	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_ROM_BAUD = 115200,$/;"	e	enum:__anon5	file:
ESP_RUN_USER_CODE	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_RUN_USER_CODE = 0xD3,$/;"	e	enum:__anon4	file:
ESP_SPI_ATTACH	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_SPI_ATTACH = 0x0D,$/;"	e	enum:__anon4	file:
ESP_SPI_FLASH_MD5	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_SPI_FLASH_MD5 = 0x13,$/;"	e	enum:__anon4	file:
ESP_SPI_SET_PARAMS	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_SPI_SET_PARAMS = 0x0B,$/;"	e	enum:__anon4	file:
ESP_SYNC	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_SYNC = 0x08,$/;"	e	enum:__anon4	file:
ESP_UNALIGN_OK	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	28;"	d	file:
ESP_WRITE_REG	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ESP_WRITE_REG = 0x09,$/;"	e	enum:__anon4	file:
EXFAT_ATTRIB_RESERVED	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_ATTRIB_RESERVED  = 0x08;$/;"	v
EXFAT_EOC	./libraries/SdFat/src/common/FsStructs.h	/^const uint32_t EXFAT_EOC = 0XFFFFFFFF;$/;"	v
EXFAT_FLAG_ALWAYS1	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_FLAG_ALWAYS1    = 0x01;$/;"	v
EXFAT_FLAG_CONTIGUOUS	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_FLAG_CONTIGUOUS = 0x02;$/;"	v
EXFAT_MAX_NAME_LENGTH	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_MAX_NAME_LENGTH = 255;$/;"	v
EXFAT_READ_ONLY	./libraries/SdFat/src/ExFatLib/ExFatConfig.h	30;"	d
EXFAT_READ_ONLY	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	37;"	d
EXFAT_TYPE_BITMAP	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_BITMAP = 0X81;$/;"	v
EXFAT_TYPE_END_DIR	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_END_DIR     = 0X00;$/;"	v
EXFAT_TYPE_FILE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_FILE        = 0X85;$/;"	v
EXFAT_TYPE_LABEL	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_LABEL = 0X83;$/;"	v
EXFAT_TYPE_NAME	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_NAME = 0XC1;$/;"	v
EXFAT_TYPE_STREAM	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_STREAM     = 0XC0;$/;"	v
EXFAT_TYPE_UPCASE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_UPCASE = 0X82;$/;"	v
EXFAT_TYPE_USED	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXFAT_TYPE_USED        = 0X80;$/;"	v
EXHCH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	146;"	d
EXHCH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	147;"	d
EXHCL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	147;"	d
EXHCL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	148;"	d
EXP_LIMIT	./libraries/SdFat/src/iostream/istream.cpp	/^int16_t const EXP_LIMIT = 100;$/;"	v
EXTENDED_BOOT_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t EXTENDED_BOOT_SIGNATURE = 0X29;$/;"	v
ExFatBootSector	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct ExFatBootSector {$/;"	s
ExFatConfig_h	./libraries/SdFat/src/ExFatLib/ExFatConfig.h	26;"	d
ExFatFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ExFatFile() {}$/;"	f	class:ExFatFile
ExFatFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ExFatFile(const char* path, oflag_t oflag) {$/;"	f	class:ExFatFile
ExFatFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^class ExFatFile {$/;"	c
ExFatFile_h	./libraries/SdFat/src/ExFatLib/ExFatFile.h	26;"	d
ExFatFormatter	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^class ExFatFormatter {$/;"	c
ExFatFormatter_h	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	26;"	d
ExFatLib_h	./libraries/SdFat/src/ExFatLib/ExFatLib.h	26;"	d
ExFatLogger_h	./libraries/SdFat/examples/ExFatLogger/ExFatLogger.h	4;"	d
ExFatPartition	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  ExFatPartition() {}$/;"	f	class:ExFatPartition
ExFatPartition	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^class ExFatPartition {$/;"	c
ExFatPartition_h	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	26;"	d
ExFatPbs_t	./libraries/SdFat/src/common/FsStructs.h	/^} ExFatPbs_t;$/;"	t	typeref:struct:ExFatBootSector
ExFatVolume	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  ExFatVolume() {}$/;"	f	class:ExFatVolume
ExFatVolume	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^class ExFatVolume : public ExFatPartition {$/;"	c
ExFatVolume_h	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	26;"	d
ExFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^class ExFile : public StreamFile<ExFatFile, uint64_t> {$/;"	c
ExName_t	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^class ExName_t : public FsName {$/;"	c
F	./libraries/SdFat/extras/attic/PrintBasic.h	40;"	d
F	./libraries/SdFat/extras/attic/PrintBasic.h	42;"	d
F	./libraries/SdFat/src/common/PrintBasic.h	40;"	d
F	./libraries/SdFat/src/common/PrintBasic.h	42;"	d
F	./libraries/SdFat/src/common/SysCall.h	52;"	d
FAT12_SUPPORT	./libraries/SdFat/src/SdFatConfig.h	330;"	d
FAT12_SUPPORT	./libraries/SdFat/src/SdFatConfig.h	38;"	d
FAT16_ROOT_ENTRY_COUNT	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^const uint16_t FAT16_ROOT_ENTRY_COUNT = 512;$/;"	v
FAT16_ROOT_SECTOR_COUNT	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^const uint16_t FAT16_ROOT_SECTOR_COUNT =$/;"	v
FAT_ATTRIB_LABEL	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_ATTRIB_LABEL     = 0x08;$/;"	v
FAT_ATTRIB_LONG_NAME	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_ATTRIB_LONG_NAME = 0X0F;$/;"	v
FAT_CASE_LC_BASE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_CASE_LC_BASE = 0X08;$/;"	v
FAT_CASE_LC_EXT	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_CASE_LC_EXT = 0X10;$/;"	v
FAT_DATE	./libraries/SdFat/src/common/FsDateTime.h	32;"	d
FAT_MAX_LFN_LENGTH	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_MAX_LFN_LENGTH = 255;$/;"	v
FAT_NAME_DELETED	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_NAME_DELETED = 0XE5;$/;"	v
FAT_NAME_FREE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_NAME_FREE = 0X00;$/;"	v
FAT_ORDER_LAST_LONG_ENTRY	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FAT_ORDER_LAST_LONG_ENTRY = 0X40;$/;"	v
FAT_TIME	./libraries/SdFat/src/common/FsDateTime.h	35;"	d
FAT_TYPE_EXFAT	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^const uint8_t FAT_TYPE_EXFAT = 64;$/;"	v
FAT_TYPE_FAT12	./libraries/SdFat/src/FatLib/FatPartition.h	/^const uint8_t FAT_TYPE_FAT12 = 12;$/;"	v
FAT_TYPE_FAT16	./libraries/SdFat/src/FatLib/FatPartition.h	/^const uint8_t FAT_TYPE_FAT16 = 16;$/;"	v
FAT_TYPE_FAT32	./libraries/SdFat/src/FatLib/FatPartition.h	/^const uint8_t FAT_TYPE_FAT32 = 32;$/;"	v
FB_GET_TIMEOUT	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	359;"	d	file:
FB_GET_TIMEOUT	./libraries/esp32-camera/esp_camera.c	359;"	d	file:
FIFODLYA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	310;"	d
FIFODLYM	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	309;"	d
FIFO_SDIO	./libraries/SdFat/src/SdCard/SdioCard.h	30;"	d
FIFO_WML	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t FIFO_WML = 16;$/;"	v
FILE_ATTR_CLOSED	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_ATTR_CLOSED = 0;$/;"	m	class:ExFatFile
FILE_ATTR_CLOSED	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_CLOSED = 0;$/;"	m	class:FatFile
FILE_ATTR_DIR	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_ATTR_DIR = FILE_ATTR_SUBDIR | FILE_ATTR_ROOT;$/;"	m	class:ExFatFile
FILE_ATTR_DIR	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_DIR = FILE_ATTR_SUBDIR | FILE_ATTR_ROOT;$/;"	m	class:FatFile
FILE_ATTR_FILE	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_ATTR_FILE = 0X08;$/;"	m	class:ExFatFile
FILE_ATTR_FILE	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_FILE = 0X08;$/;"	m	class:FatFile
FILE_ATTR_ROOT	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_ATTR_ROOT = 0X40;$/;"	m	class:ExFatFile
FILE_ATTR_ROOT	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_ROOT =$/;"	m	class:FatFile
FILE_ATTR_ROOT32	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_ROOT32 = 0X80;$/;"	m	class:FatFile
FILE_ATTR_ROOT_FIXED	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_ROOT_FIXED = 0X40;$/;"	m	class:FatFile
FILE_ATTR_SUBDIR	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_ATTR_SUBDIR = FS_ATTRIB_DIRECTORY;$/;"	m	class:ExFatFile
FILE_ATTR_SUBDIR	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_ATTR_SUBDIR = FS_ATTRIB_DIRECTORY;$/;"	m	class:FatFile
FILE_BASE_NAME	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	5;"	d
FILE_BASE_NAME	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	6;"	d
FILE_BASE_NAME	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	4;"	d
FILE_FLAG_APPEND	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_FLAG_APPEND = 0X08;$/;"	m	class:ExFatFile
FILE_FLAG_APPEND	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_APPEND = 0X08;$/;"	m	class:FatFile
FILE_FLAG_CONTIGUOUS	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_FLAG_CONTIGUOUS  = 0X40;$/;"	m	class:ExFatFile
FILE_FLAG_CONTIGUOUS	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_CONTIGUOUS  = 0X40;$/;"	m	class:FatFile
FILE_FLAG_DIR_DIRTY	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_FLAG_DIR_DIRTY = 0X80;$/;"	m	class:ExFatFile
FILE_FLAG_DIR_DIRTY	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_DIR_DIRTY = 0X80;$/;"	m	class:FatFile
FILE_FLAG_PREALLOCATE	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_PREALLOCATE = 0X20;$/;"	m	class:FatFile
FILE_FLAG_READ	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_FLAG_READ = 0X01;$/;"	m	class:ExFatFile
FILE_FLAG_READ	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_READ = 0X01;$/;"	m	class:FatFile
FILE_FLAG_WRITE	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t FILE_FLAG_WRITE = 0X02;$/;"	m	class:ExFatFile
FILE_FLAG_WRITE	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t FILE_FLAG_WRITE = 0X02;$/;"	m	class:FatFile
FILE_READ	./libraries/SdFat/src/common/ArduinoFiles.h	31;"	d
FILE_WRITE	./libraries/SdFat/src/common/ArduinoFiles.h	35;"	d
FILL	./libraries/SdFat/src/FreeStack.cpp	/^const char FILL = 0x55;$/;"	v
FIXGAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	194;"	d
FLASH_WRITE_SIZE_NOSTUB	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  FLASH_WRITE_SIZE_NOSTUB = 0x400,$/;"	e	enum:__anon5	file:
FLASH_WRITE_SIZE_STUB	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  FLASH_WRITE_SIZE_STUB = 0x4000,$/;"	e	enum:__anon5	file:
FLH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	139;"	d
FLL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	138;"	d
FNAME_FLAG_LC_BASE	./libraries/SdFat/src/FatLib/FatFile.h	/^const uint8_t FNAME_FLAG_LC_BASE = FAT_CASE_LC_BASE;$/;"	v
FNAME_FLAG_LC_EXT	./libraries/SdFat/src/FatLib/FatFile.h	/^const uint8_t FNAME_FLAG_LC_EXT = FAT_CASE_LC_EXT;$/;"	v
FNAME_FLAG_LOST_CHARS	./libraries/SdFat/src/FatLib/FatFile.h	/^const uint8_t FNAME_FLAG_LOST_CHARS = 0X01;$/;"	v
FNAME_FLAG_MIXED_CASE	./libraries/SdFat/src/FatLib/FatFile.h	/^const uint8_t FNAME_FLAG_MIXED_CASE = 0X02;$/;"	v
FNAME_FLAG_NEED_LFN	./libraries/SdFat/src/FatLib/FatFile.h	/^const uint8_t FNAME_FLAG_NEED_LFN =$/;"	v
FORMAT_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	16;"	d
FORMAT_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	16;"	d
FORMAT_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	126;"	d
FORMAT_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	25;"	d
FORMAT_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	25;"	d
FORMAT_CTRL00	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	108;"	d
FRAMESIZE_240X240	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_240X240,  \/\/ 240x240$/;"	e	enum:__anon8
FRAMESIZE_240X240	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_240X240,  \/\/ 240x240$/;"	e	enum:__anon9
FRAMESIZE_96X96	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_96X96,    \/\/ 96x96$/;"	e	enum:__anon8
FRAMESIZE_96X96	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_96X96,    \/\/ 96x96$/;"	e	enum:__anon9
FRAMESIZE_CIF	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_CIF,      \/\/ 400x296$/;"	e	enum:__anon8
FRAMESIZE_CIF	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_CIF,      \/\/ 400x296$/;"	e	enum:__anon9
FRAMESIZE_FHD	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_FHD,      \/\/ 1920x1080$/;"	e	enum:__anon8
FRAMESIZE_FHD	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_FHD,      \/\/ 1920x1080$/;"	e	enum:__anon9
FRAMESIZE_HD	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_HD,       \/\/ 1280x720$/;"	e	enum:__anon8
FRAMESIZE_HD	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_HD,       \/\/ 1280x720$/;"	e	enum:__anon9
FRAMESIZE_HQVGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_HQVGA,    \/\/ 240x176$/;"	e	enum:__anon8
FRAMESIZE_HQVGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_HQVGA,    \/\/ 240x176$/;"	e	enum:__anon9
FRAMESIZE_HVGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_HVGA,     \/\/ 480x320$/;"	e	enum:__anon8
FRAMESIZE_HVGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_HVGA,     \/\/ 480x320$/;"	e	enum:__anon9
FRAMESIZE_INVALID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_INVALID$/;"	e	enum:__anon8
FRAMESIZE_INVALID	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_INVALID$/;"	e	enum:__anon9
FRAMESIZE_P_3MP	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_P_3MP,    \/\/  864x1536$/;"	e	enum:__anon8
FRAMESIZE_P_3MP	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_P_3MP,    \/\/  864x1536$/;"	e	enum:__anon9
FRAMESIZE_P_FHD	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_P_FHD,    \/\/ 1080x1920$/;"	e	enum:__anon8
FRAMESIZE_P_FHD	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_P_FHD,    \/\/ 1080x1920$/;"	e	enum:__anon9
FRAMESIZE_P_HD	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_P_HD,     \/\/  720x1280$/;"	e	enum:__anon8
FRAMESIZE_P_HD	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_P_HD,     \/\/  720x1280$/;"	e	enum:__anon9
FRAMESIZE_QCIF	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QCIF,     \/\/ 176x144$/;"	e	enum:__anon8
FRAMESIZE_QCIF	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QCIF,     \/\/ 176x144$/;"	e	enum:__anon9
FRAMESIZE_QHD	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QHD,      \/\/ 2560x1440$/;"	e	enum:__anon8
FRAMESIZE_QHD	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QHD,      \/\/ 2560x1440$/;"	e	enum:__anon9
FRAMESIZE_QQVGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QQVGA,    \/\/ 160x120$/;"	e	enum:__anon8
FRAMESIZE_QQVGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QQVGA,    \/\/ 160x120$/;"	e	enum:__anon9
FRAMESIZE_QSXGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QSXGA,    \/\/ 2560x1920$/;"	e	enum:__anon8
FRAMESIZE_QSXGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QSXGA,    \/\/ 2560x1920$/;"	e	enum:__anon9
FRAMESIZE_QVGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QVGA,     \/\/ 320x240$/;"	e	enum:__anon8
FRAMESIZE_QVGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QVGA,     \/\/ 320x240$/;"	e	enum:__anon9
FRAMESIZE_QXGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_QXGA,     \/\/ 2048x1536$/;"	e	enum:__anon8
FRAMESIZE_QXGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_QXGA,     \/\/ 2048x1536$/;"	e	enum:__anon9
FRAMESIZE_SVGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_SVGA,     \/\/ 800x600$/;"	e	enum:__anon8
FRAMESIZE_SVGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_SVGA,     \/\/ 800x600$/;"	e	enum:__anon9
FRAMESIZE_SXGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_SXGA,     \/\/ 1280x1024$/;"	e	enum:__anon8
FRAMESIZE_SXGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_SXGA,     \/\/ 1280x1024$/;"	e	enum:__anon9
FRAMESIZE_UXGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_UXGA,     \/\/ 1600x1200$/;"	e	enum:__anon8
FRAMESIZE_UXGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_UXGA,     \/\/ 1600x1200$/;"	e	enum:__anon9
FRAMESIZE_VGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_VGA,      \/\/ 640x480$/;"	e	enum:__anon8
FRAMESIZE_VGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_VGA,      \/\/ 640x480$/;"	e	enum:__anon9
FRAMESIZE_WQXGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_WQXGA,    \/\/ 2560x1600$/;"	e	enum:__anon8
FRAMESIZE_WQXGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_WQXGA,    \/\/ 2560x1600$/;"	e	enum:__anon9
FRAMESIZE_XGA	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    FRAMESIZE_XGA,      \/\/ 1024x768$/;"	e	enum:__anon8
FRAMESIZE_XGA	./libraries/esp32-camera/include/sensor.h	/^    FRAMESIZE_XGA,      \/\/ 1024x768$/;"	e	enum:__anon9
FRAME_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	28;"	d
FRAME_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	28;"	d
FRAME_CTRL01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	100;"	d
FRAME_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	31;"	d
FRAME_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	31;"	d
FRAME_CTRL02	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	103;"	d
FRARL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	129;"	d
FREE_STACK_CPP	./libraries/SdFat/src/FreeStack.cpp	25;"	d	file:
FREQUENCY_OSCILLATOR	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	66;"	d
FREQUENCY_OSCILLATOR	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	66;"	d
FSINFO_LEAD_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint32_t FSINFO_LEAD_SIGNATURE = 0X41615252;$/;"	v
FSINFO_STRUCT_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint32_t FSINFO_STRUCT_SIGNATURE = 0x61417272;$/;"	v
FSINFO_TRAIL_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint32_t FSINFO_TRAIL_SIGNATURE = 0xAA550000;$/;"	v
FS_ALIGN_DIM	./libraries/SdFat/src/FsLib/FsNew.h	42;"	d
FS_ATTRIB_ARCHIVE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_ARCHIVE   = 0x20;$/;"	v
FS_ATTRIB_COPY	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_COPY = FS_ATTRIB_USER_SETTABLE | FS_ATTRIB_DIRECTORY;$/;"	v
FS_ATTRIB_DIRECTORY	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_DIRECTORY = 0x10;$/;"	v
FS_ATTRIB_HIDDEN	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_HIDDEN    = 0x02;$/;"	v
FS_ATTRIB_READ_ONLY	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_READ_ONLY = 0x01;$/;"	v
FS_ATTRIB_SYSTEM	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_SYSTEM    = 0x04;$/;"	v
FS_ATTRIB_USER_SETTABLE	./libraries/SdFat/src/common/FsStructs.h	/^const uint8_t FS_ATTRIB_USER_SETTABLE = FS_ATTRIB_READ_ONLY |$/;"	v
FS_DATE	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint16_t FS_DATE(uint16_t year, uint8_t month, uint8_t day) {$/;"	f
FS_DAY	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint8_t FS_DAY(uint16_t fatDate) {$/;"	f
FS_DEFAULT_DATE	./libraries/SdFat/src/SdFatConfig.h	267;"	d
FS_DEFAULT_TIME	./libraries/SdFat/src/SdFatConfig.h	269;"	d
FS_DIR_SIZE	./libraries/SdFat/src/common/FsStructs.h	/^const size_t FS_DIR_SIZE = 32;$/;"	v
FS_HOUR	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint8_t FS_HOUR(uint16_t fatTime) {$/;"	f
FS_MINUTE	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint8_t FS_MINUTE(uint16_t fatTime) {$/;"	f
FS_MONTH	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint8_t FS_MONTH(uint16_t fatDate) {$/;"	f
FS_SECOND	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint8_t FS_SECOND(uint16_t fatTime) {$/;"	f
FS_SIZE	./libraries/SdFat/src/FsLib/FsNew.h	34;"	d
FS_TIME	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint16_t FS_TIME(uint8_t hour, uint8_t minute, uint8_t second) {$/;"	f
FS_YEAR	./libraries/SdFat/src/common/FsDateTime.h	/^static inline uint16_t FS_YEAR(uint16_t fatDate) {$/;"	f
FatFile	./libraries/SdFat/src/FatLib/FatFile.h	/^  FatFile() {}$/;"	f	class:FatFile
FatFile	./libraries/SdFat/src/FatLib/FatFile.h	/^  FatFile(const char* path, oflag_t oflag) {$/;"	f	class:FatFile
FatFile	./libraries/SdFat/src/FatLib/FatFile.h	/^class FatFile {$/;"	c
FatFileSystem	./libraries/SdFat/src/SdFatConfig.h	50;"	d
FatFile_h	./libraries/SdFat/src/FatLib/FatFile.h	26;"	d
FatFormatter	./libraries/SdFat/src/FatLib/FatFormatter.h	/^class FatFormatter {$/;"	c
FatFormatter_h	./libraries/SdFat/src/FatLib/FatFormatter.h	26;"	d
FatLfn_t	./libraries/SdFat/src/FatLib/FatFile.h	/^class FatLfn_t : public FsName {$/;"	c
FatLib_h	./libraries/SdFat/src/FatLib/FatLib.h	26;"	d
FatName_t	./libraries/SdFat/src/FatLib/FatFile.h	/^typedef FatLfn_t FatName_t;$/;"	t
FatName_t	./libraries/SdFat/src/FatLib/FatFile.h	/^typedef FatSfn_t FatName_t;$/;"	t
FatPartition	./libraries/SdFat/src/FatLib/FatPartition.h	/^  FatPartition() {}$/;"	f	class:FatPartition
FatPartition	./libraries/SdFat/src/FatLib/FatPartition.h	/^class FatPartition {$/;"	c
FatPartition_h	./libraries/SdFat/src/FatLib/FatPartition.h	26;"	d
FatPos_t	./libraries/SdFat/src/FatLib/FatFile.h	/^struct FatPos_t {$/;"	s
FatSfn_t	./libraries/SdFat/src/FatLib/FatFile.h	/^class FatSfn_t {$/;"	c
FatVolume	./libraries/SdFat/src/FatLib/FatVolume.h	/^class FatVolume : public  FatPartition {$/;"	c
FatVolume_h	./libraries/SdFat/src/FatLib/FatVolume.h	26;"	d
File	./libraries/SdFat/src/SdFat.h	/^typedef ExFile File;$/;"	t
File	./libraries/SdFat/src/SdFat.h	/^typedef File32 File;$/;"	t
File	./libraries/SdFat/src/SdFat.h	/^typedef FsFile File;$/;"	t
File32	./libraries/SdFat/src/FatLib/FatFile.h	/^class File32 : public StreamFile<FatFile, uint32_t> {$/;"	c
FillStack	./libraries/SdFat/src/FreeStack.cpp	/^void FillStack() {$/;"	f
FillStack	./libraries/SdFat/src/FreeStack.h	/^inline void FillStack() {}$/;"	f
Flash	./libraries/Flash/flash.h	/^class Flash {$/;"	c
FmtNumber_h	./libraries/SdFat/src/common/FmtNumber.h	26;"	d
FreeStack	./libraries/SdFat/src/FreeStack.h	/^inline int FreeStack() {$/;"	f
FreeStack_h	./libraries/SdFat/src/FreeStack.h	26;"	d
FsApiConstants_h	./libraries/SdFat/src/common/FsApiConstants.h	26;"	d
FsBaseFile	./libraries/SdFat/src/FsLib/FsFile.cpp	/^FsBaseFile::FsBaseFile(const FsBaseFile& from) {$/;"	f	class:FsBaseFile
FsBaseFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  FsBaseFile() {}$/;"	f	class:FsBaseFile
FsBaseFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  FsBaseFile(const char* path, oflag_t oflag) {$/;"	f	class:FsBaseFile
FsBaseFile	./libraries/SdFat/src/FsLib/FsFile.h	/^class FsBaseFile {$/;"	c
FsBlockDevice	./libraries/SdFat/src/common/FsBlockDevice.h	/^typedef FsBlockDeviceInterface FsBlockDevice;$/;"	t
FsBlockDevice	./libraries/SdFat/src/common/FsBlockDevice.h	/^typedef SdCard FsBlockDevice;$/;"	t
FsBlockDeviceInterface	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^class FsBlockDeviceInterface {$/;"	c
FsBlockDeviceInterface_h	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	30;"	d
FsBlockDevice_h	./libraries/SdFat/src/common/FsBlockDevice.h	26;"	d
FsCache	./libraries/SdFat/src/common/FsCache.h	/^class FsCache {$/;"	c
FsCache_h	./libraries/SdFat/src/common/FsCache.h	26;"	d
FsDateTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^namespace FsDateTime {$/;"	n	file:
FsDateTime	./libraries/SdFat/src/common/FsDateTime.h	/^namespace FsDateTime {$/;"	n
FsDateTime_h	./libraries/SdFat/src/common/FsDateTime.h	26;"	d
FsFile	./libraries/SdFat/src/FsLib/FsFile.h	/^class FsFile : public StreamFile<FsBaseFile, uint64_t> {$/;"	c
FsFile_h	./libraries/SdFat/src/FsLib/FsFile.h	26;"	d
FsFormatter	./libraries/SdFat/src/FsLib/FsFormatter.h	/^class FsFormatter {$/;"	c
FsFormatter_h	./libraries/SdFat/src/FsLib/FsFormatter.h	26;"	d
FsInfoSector	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct FsInfoSector {$/;"	s
FsInfo_t	./libraries/SdFat/src/common/FsStructs.h	/^} FsInfo_t;$/;"	t	typeref:struct:FsInfoSector
FsLib_h	./libraries/SdFat/src/FsLib/FsLib.h	26;"	d
FsName	./libraries/SdFat/src/common/FsName.h	/^class FsName {$/;"	c
FsName_h	./libraries/SdFat/src/common/FsName.h	26;"	d
FsNew_h	./libraries/SdFat/src/FsLib/FsNew.h	26;"	d
FsStructs_h	./libraries/SdFat/src/common/FsStructs.h	26;"	d
FsUtf	./libraries/SdFat/src/common/FsUtf.cpp	/^namespace FsUtf {$/;"	n	file:
FsUtf	./libraries/SdFat/src/common/FsUtf.h	/^namespace FsUtf {$/;"	n
FsUtf_h	./libraries/SdFat/src/common/FsUtf.h	26;"	d
FsVolume	./libraries/SdFat/src/FsLib/FsVolume.h	/^  FsVolume() {}$/;"	f	class:FsVolume
FsVolume	./libraries/SdFat/src/FsLib/FsVolume.h	/^class FsVolume {$/;"	c
FsVolume_h	./libraries/SdFat/src/FsLib/FsVolume.h	26;"	d
GAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	104;"	d
GAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	9;"	d
GAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	10;"	d
GAINCEILING_128X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_128X,$/;"	e	enum:__anon11
GAINCEILING_128X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_128X,$/;"	e	enum:__anon12
GAINCEILING_16X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_16X,$/;"	e	enum:__anon11
GAINCEILING_16X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_16X,$/;"	e	enum:__anon12
GAINCEILING_2X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_2X,$/;"	e	enum:__anon11
GAINCEILING_2X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_2X,$/;"	e	enum:__anon12
GAINCEILING_32X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_32X,$/;"	e	enum:__anon11
GAINCEILING_32X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_32X,$/;"	e	enum:__anon12
GAINCEILING_4X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_4X,$/;"	e	enum:__anon11
GAINCEILING_4X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_4X,$/;"	e	enum:__anon12
GAINCEILING_64X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_64X,$/;"	e	enum:__anon11
GAINCEILING_64X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_64X,$/;"	e	enum:__anon12
GAINCEILING_8X	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GAINCEILING_8X,$/;"	e	enum:__anon11
GAINCEILING_8X	./libraries/esp32-camera/include/sensor.h	/^    GAINCEILING_8X,$/;"	e	enum:__anon12
GAM1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	256;"	d
GAM1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	270;"	d
GAM10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	265;"	d
GAM10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	279;"	d
GAM11	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	266;"	d
GAM11	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	280;"	d
GAM12	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	267;"	d
GAM12	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	281;"	d
GAM13	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	268;"	d
GAM13	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	282;"	d
GAM14	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	269;"	d
GAM14	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	283;"	d
GAM15	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	270;"	d
GAM15	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	284;"	d
GAM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	257;"	d
GAM2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	271;"	d
GAM3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	258;"	d
GAM3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	272;"	d
GAM4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	259;"	d
GAM4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	273;"	d
GAM5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	260;"	d
GAM5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	274;"	d
GAM6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	261;"	d
GAM6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	275;"	d
GAM7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	262;"	d
GAM7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	276;"	d
GAM8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	263;"	d
GAM8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	277;"	d
GAM9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	264;"	d
GAM9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	278;"	d
GAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	15;"	d
GAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	15;"	d
GC0308_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC0308_PID = 0x9b,$/;"	e	enum:__anon4
GC0308_PID	./libraries/esp32-camera/include/sensor.h	/^    GC0308_PID = 0x9b,$/;"	e	enum:__anon5
GC0308_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC0308_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon6
GC0308_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    GC0308_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon7
GC032A_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC032A_PID = 0x232a,$/;"	e	enum:__anon4
GC032A_PID	./libraries/esp32-camera/include/sensor.h	/^    GC032A_PID = 0x232a,$/;"	e	enum:__anon5
GC032A_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC032A_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon6
GC032A_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    GC032A_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon7
GC2145_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC2145_PID = 0x2145,$/;"	e	enum:__anon4
GC2145_PID	./libraries/esp32-camera/include/sensor.h	/^    GC2145_PID = 0x2145,$/;"	e	enum:__anon5
GC2145_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    GC2145_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon6
GC2145_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    GC2145_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon7
GFIX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	232;"	d
GGAIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	233;"	d
GPIO_PIN	./libraries/SdFat/src/DigitalIO/DigitalPin.h	41;"	d
GPIO_PIN_INTR_NEGEDGE	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	43;"	d	file:
GPIO_PIN_INTR_NEGEDGE	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	30;"	d	file:
GPIO_PIN_INTR_POSEDGE	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	42;"	d	file:
GPIO_PIN_INTR_POSEDGE	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	29;"	d	file:
GREEN	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	13;"	d
GREEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	13;"	d
GbBIAS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	144;"	d
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/AvrDevelopersGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/BobuinoGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/LeonardoGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/MegaGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/SleepingBeautyGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/Standard1284GpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/Teensy2GpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/Teensy2ppGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap	./libraries/SdFat/src/DigitalIO/boards/UnoGpioPinMap.h	/^static const GpioPinMap_t GpioPinMap[] = {$/;"	v
GpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/GpioPinMap.h	21;"	d
GpioPinMap_t	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^struct GpioPinMap_t {$/;"	s
H1V1	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    enum subsampling_t { Y_ONLY = 0, H1V1 = 1, H2V1 = 2, H2V2 = 3 };$/;"	e	enum:jpge::subsampling_t
H2V1	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    enum subsampling_t { Y_ONLY = 0, H1V1 = 1, H2V1 = 2, H2V2 = 3 };$/;"	e	enum:jpge::subsampling_t
H2V2	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    enum subsampling_t { Y_ONLY = 0, H1V1 = 1, H2V1 = 2, H2V2 = 3 };$/;"	e	enum:jpge::subsampling_t
H8	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	33;"	d	file:
H8	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	32;"	d	file:
H8	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	33;"	d	file:
H8	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	32;"	d	file:
HAECC1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	298;"	d
HAECC2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	299;"	d
HAECC3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	309;"	d
HAECC4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	310;"	d
HAECC5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	311;"	d
HAECC6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	312;"	d
HAECC7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	314;"	d
HAECC_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	315;"	d
HAS_ESP_IDF_4	./libraries/Adafruit_NeoPixel/esp.c	26;"	d	file:
HAS_ESP_IDF_5	./libraries/Adafruit_NeoPixel/esp.c	29;"	d	file:
HAS_INCLUDE_FS_H	./libraries/SdFat/src/SdFat.h	451;"	d
HAS_SDIO_CLASS	./libraries/SdFat/src/SdFatConfig.h	421;"	d
HAS_SDIO_CLASS	./libraries/SdFat/src/SdFatConfig.h	424;"	d
HAS_SDIO_CLASS	./libraries/SdFat/src/SdFatConfig.h	447;"	d
HAS_UNUSED_STACK	./libraries/SdFat/src/FreeStack.h	35;"	d
HAS_UNUSED_STACK	./libraries/SdFat/src/FreeStack.h	48;"	d
HAS_UNUSED_STACK	./libraries/SdFat/src/FreeStack.h	55;"	d
HAS_UNUSED_STACK	./libraries/SdFat/src/FreeStack.h	62;"	d
HAS_UNUSED_STACK	./libraries/SdFat/src/FreeStack.h	90;"	d
HEDY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	134;"	d
HEX	./libraries/SdFat/extras/attic/PrintBasic.h	51;"	d
HEX	./libraries/SdFat/src/common/PrintBasic.h	52;"	d
HIGH	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	36;"	d
HISTO_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	151;"	d
HISTO_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	150;"	d
HOUTSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	146;"	d
HREF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	154;"	d
HREF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	155;"	d
HREF_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	39;"	d	file:
HREF_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	60;"	d	file:
HREF_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	69;"	d	file:
HREF_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	91;"	d	file:
HSDY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	133;"	d
HSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	14;"	d
HSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	128;"	d
HSIZE8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	29;"	d
HSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	119;"	d
HSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	120;"	d
HSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	127;"	d
HSTOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	120;"	d
HSTOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	121;"	d
HSYEN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	153;"	d
HSYST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	152;"	d
HUECOS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	323;"	d
HUESIN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	324;"	d
I2C_CONFIG	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	11;"	d
I2C_DEVICE_ID	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	16;"	d
I2C_MASTER_FREQ_HZ	./libraries/esp32-camera-2.0.8/test/test_camera.c	112;"	d	file:
I2C_MASTER_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	111;"	d	file:
I2C_MASTER_SCL_IO	./libraries/esp32-camera-2.0.8/test/test_camera.c	109;"	d	file:
I2C_MASTER_SDA_IO	./libraries/esp32-camera-2.0.8/test/test_camera.c	110;"	d	file:
I2S_ISR_DISABLE	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	54;"	d	file:
I2S_ISR_DISABLE	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	38;"	d	file:
I2S_ISR_ENABLE	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	53;"	d	file:
I2S_ISR_ENABLE	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	37;"	d	file:
IDLE_STATE	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  static const uint8_t IDLE_STATE = 0;$/;"	m	class:SharedSpiCard
IDLE_STATE	./libraries/SdFat/src/SdCard/SdioCard.h	/^  static const uint8_t IDLE_STATE = 0;$/;"	m	class:SdioCard
IMAGE_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	34;"	d
IMAGE_MODE_HREF_VSYNC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	78;"	d
IMAGE_MODE_JPEG_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	74;"	d
IMAGE_MODE_LBYTE_FIRST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	79;"	d
IMAGE_MODE_RAW10	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	76;"	d
IMAGE_MODE_RGB565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	77;"	d
IMAGE_MODE_Y8_DVP_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	73;"	d
IMAGE_MODE_YUV422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	75;"	d
INCLUDE_SDIOS	./libraries/SdFat/src/SdFatConfig.h	322;"	d
INPUT	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	42;"	d
INT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef int				INT;$/;"	t
INT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef int				INT;$/;"	t
IOMUXC_SW_PAD_CTL_PAD_DSE	./libraries/SdFat/src/SdCard/SdioTeensy.h	274;"	d
IOMUXC_SW_PAD_CTL_PAD_DSE_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	275;"	d
IOMUXC_SW_PAD_CTL_PAD_HYS	./libraries/SdFat/src/SdCard/SdioTeensy.h	270;"	d
IOMUXC_SW_PAD_CTL_PAD_PKE	./libraries/SdFat/src/SdCard/SdioTeensy.h	268;"	d
IOMUXC_SW_PAD_CTL_PAD_PUE	./libraries/SdFat/src/SdCard/SdioTeensy.h	269;"	d
IOMUXC_SW_PAD_CTL_PAD_PUS	./libraries/SdFat/src/SdCard/SdioTeensy.h	272;"	d
IOMUXC_SW_PAD_CTL_PAD_PUS_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	273;"	d
IOMUXC_SW_PAD_CTL_PAD_SPEED	./libraries/SdFat/src/SdCard/SdioTeensy.h	271;"	d
IOMUXC_SW_PAD_CTL_PAD_SRE	./libraries/SdFat/src/SdCard/SdioTeensy.h	267;"	d
IPSF	./libraries/esp32-camera-2.0.8/target/tjpgd.c	47;"	d	file:
IROM_MAP_END	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  IROM_MAP_END = 0x40300000,$/;"	e	enum:__anon5	file:
IROM_MAP_START	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  IROM_MAP_START = 0x40200000,$/;"	e	enum:__anon5	file:
IRQ_SDHC	./libraries/SdFat/src/SdCard/SdioTeensy.h	257;"	d
ISP_CONTROL_01	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	131;"	d
ISP_CONTROL_01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	131;"	d
ISP_CONTROL_01	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	121;"	d
ISP_DIV_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	15;"	d
ISP_DIV_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	18;"	d
Install Libraries for building examples	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: Install Libraries for building examples$/;"	k
Ipsf	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^const WORD Ipsf[64] = {	\/* See also aa_idct.png *\/$/;"	v	file:
JDEC	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^struct JDEC {$/;"	s
JDEC	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef struct JDEC JDEC;$/;"	t	typeref:struct:JDEC
JDEC	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^struct JDEC {$/;"	s
JDEC	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef struct JDEC JDEC;$/;"	t	typeref:struct:JDEC
JDR_FMT1	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_FMT1,	\/* 6: Data format error (may be damaged data) *\/$/;"	e	enum:__anon29
JDR_FMT1	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_FMT1,	\/* 6: Data format error (may be damaged data) *\/$/;"	e	enum:__anon27
JDR_FMT2	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_FMT2,	\/* 7: Right format but not supported *\/$/;"	e	enum:__anon29
JDR_FMT2	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_FMT2,	\/* 7: Right format but not supported *\/$/;"	e	enum:__anon27
JDR_FMT3	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_FMT3	\/* 8: Not supported JPEG standard *\/$/;"	e	enum:__anon29
JDR_FMT3	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_FMT3	\/* 8: Not supported JPEG standard *\/$/;"	e	enum:__anon27
JDR_INP	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_INP,	\/* 2: Device error or wrong termination of input stream *\/$/;"	e	enum:__anon29
JDR_INP	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_INP,	\/* 2: Device error or wrong termination of input stream *\/$/;"	e	enum:__anon27
JDR_INTR	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_INTR,	\/* 1: Interrupted by output function *\/	$/;"	e	enum:__anon29
JDR_INTR	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_INTR,	\/* 1: Interrupted by output function *\/	$/;"	e	enum:__anon27
JDR_MEM1	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_MEM1,	\/* 3: Insufficient memory pool for the image *\/$/;"	e	enum:__anon29
JDR_MEM1	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_MEM1,	\/* 3: Insufficient memory pool for the image *\/$/;"	e	enum:__anon27
JDR_MEM2	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_MEM2,	\/* 4: Insufficient stream input buffer *\/$/;"	e	enum:__anon29
JDR_MEM2	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_MEM2,	\/* 4: Insufficient stream input buffer *\/$/;"	e	enum:__anon27
JDR_OK	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_OK = 0,	\/* 0: Succeeded *\/$/;"	e	enum:__anon29
JDR_OK	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_OK = 0,	\/* 0: Succeeded *\/$/;"	e	enum:__anon27
JDR_PAR	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	JDR_PAR,	\/* 5: Parameter error *\/$/;"	e	enum:__anon29
JDR_PAR	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	JDR_PAR,	\/* 5: Parameter error *\/$/;"	e	enum:__anon27
JD_FORMAT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	10;"	d
JD_FORMAT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	10;"	d
JD_SZBUF	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	9;"	d
JD_SZBUF	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	9;"	d
JD_TBLCLIP	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	12;"	d
JD_TBLCLIP	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	12;"	d
JD_USE_SCALE	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	11;"	d
JD_USE_SCALE	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	11;"	d
JPEG_ENCODER_H	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	5;"	d
JPEG_EOI_MARKER	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static const uint16_t JPEG_EOI_MARKER = 0xD9FF;  \/\/ written in little-endian for esp32$/;"	v	file:
JPEG_EOI_MARKER	./libraries/esp32-camera/cam_hal.c	/^static const uint16_t JPEG_EOI_MARKER = 0xD9FF;  \/\/ written in little-endian for esp32$/;"	v	file:
JPEG_SOI_MARKER	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static const uint32_t JPEG_SOI_MARKER = 0xFFD8FF;  \/\/ written in little-endian for esp32$/;"	v	file:
JPEG_SOI_MARKER	./libraries/esp32-camera/cam_hal.c	/^static const uint32_t JPEG_SOI_MARKER = 0xFFD8FF;  \/\/ written in little-endian for esp32$/;"	v	file:
JPGE_MAX	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	22;"	d	file:
JPGE_MIN	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	23;"	d	file:
JPGE_OUT_BUF_SIZE	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            enum { JPGE_OUT_BUF_SIZE = 512 };$/;"	e	enum:jpge::jpeg_encoder::__anon2
JPG_SCALE_2X	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^    JPG_SCALE_2X,$/;"	e	enum:__anon3
JPG_SCALE_4X	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^    JPG_SCALE_4X,$/;"	e	enum:__anon3
JPG_SCALE_8X	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^    JPG_SCALE_8X,$/;"	e	enum:__anon3
JPG_SCALE_MAX	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^    JPG_SCALE_MAX = JPG_SCALE_8X$/;"	e	enum:__anon3
JPG_SCALE_NONE	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^    JPG_SCALE_NONE,$/;"	e	enum:__anon3
JRECT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^} JRECT;$/;"	t	typeref:struct:__anon30
JRECT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^} JRECT;$/;"	t	typeref:struct:__anon28
JRESULT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^} JRESULT;$/;"	t	typeref:enum:__anon29
JRESULT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^} JRESULT;$/;"	t	typeref:enum:__anon27
KENDRYTE_K210	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	240;"	d	file:
KENDRYTE_K210	./libraries/Adafruit_NeoPixel/kendyte_k210.c	5;"	d	file:
L8	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	34;"	d	file:
L8	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	33;"	d	file:
L8	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	34;"	d	file:
L8	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	33;"	d	file:
LAEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	135;"	d
LAEC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	134;"	d
LCC1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	223;"	d
LCC2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	225;"	d
LCC3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	226;"	d
LCC4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	227;"	d
LCC5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	228;"	d
LCC6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	285;"	d
LCC7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	286;"	d
LCD_CAM_DMA_NODE_BUFFER_MAX_SIZE	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	76;"	d
LCD_error	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::LCD_error(const char *errmsg1,$/;"	f	class:Adafruit_TestBed_Brains
LCD_info	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::LCD_info(const char *msg1, const char *msg2) {$/;"	f	class:Adafruit_TestBed_Brains
LCD_printf	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::LCD_printf(const char format[], ...) {$/;"	f	class:Adafruit_TestBed_Brains
LCD_printf	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::LCD_printf(uint8_t linenum, const char format[],$/;"	f	class:Adafruit_TestBed_Brains
LCD_printf_error	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::LCD_printf_error(const char format[], ...) {$/;"	f	class:Adafruit_TestBed_Brains
LCD_semaphore	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^volatile bool LCD_semaphore = false;$/;"	v
LC_COEF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	189;"	d
LC_COEFB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	191;"	d
LC_COEFR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	192;"	d
LC_CTR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	182;"	d
LC_CTR_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	186;"	d
LC_CTR_RGB_COMP_1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	183;"	d
LC_CTR_RGB_COMP_3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	184;"	d
LC_RADI	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	190;"	d
LC_XC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	187;"	d
LC_YC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	188;"	d
LDB_WORD	./libraries/esp32-camera-2.0.8/target/tjpgd.c	758;"	d	file:
LIBRARIES_ESP32SERVO_SRC_ESP32PWM_H_	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	9;"	d
LITTLETOBIG	./libraries/esp32-camera-2.0.8/driver/sccb.c	24;"	d	file:
LITTLETOBIG	./libraries/esp32-camera/sccb.c	24;"	d	file:
LONG	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef long			LONG;$/;"	t
LONG	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef long			LONG;$/;"	t
LOOKUP_DIM	./libraries/SdFat/src/common/upcase.cpp	/^const size_t LOOKUP_DIM = sizeof(lookupTable)\/sizeof(pair16_t);$/;"	v
LOW	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	39;"	d
LS_A	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t LS_A = 1;$/;"	v
LS_DATE	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t LS_DATE = 2;$/;"	v
LS_R	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t LS_R = 8;$/;"	v
LS_SIZE	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t LS_SIZE = 4;$/;"	v
LUMHTH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	153;"	d
LUMLTH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	154;"	d
LeonardoGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/LeonardoGpioPinMap.h	2;"	d
Log	./libraries/Logging/logging.h	/^class Log {$/;"	c
MAINTAIN_FREE_CLUSTER_COUNT	./libraries/SdFat/src/SdFatConfig.h	250;"	d
MAKE_REG_GET	./libraries/SdFat/src/SdCard/SdioTeensy.h	8;"	d
MAKE_REG_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	7;"	d
MAKE_REG_SET	./libraries/SdFat/src/SdCard/SdioTeensy.h	9;"	d
MANU	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	230;"	d
MANV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	231;"	d
MAP_DIM	./libraries/SdFat/src/common/upcase.cpp	/^const size_t MAP_DIM = sizeof(mapTable)\/sizeof(map16_t);$/;"	v
MAXIMUM_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	86;"	d
MAXIMUM_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	90;"	d
MAX_BLKCNT	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t MAX_BLKCNT = 0XFFFF;$/;"	v
MAX_HUFF_CODESIZE	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
MAX_HUFF_SYMBOLS	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { DC_LUM_CODES = 12, AC_LUM_CODES = 256, DC_CHROMA_CODES = 12, AC_CHROMA_CODES = 256, MAX_HUFF_SYMBOLS = 257, MAX_HUFF_CODESIZE = 32 };$/;"	e	enum:jpge::__anon2	file:
MAX_PREC	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const size_t MAX_PREC = sizeof(powTen)\/sizeof(powTen[0]);$/;"	v	file:
MAX_PULSE_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	98;"	d
MAX_SERVOS	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	104;"	d
MBR_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint16_t MBR_SIGNATURE = 0xAA55;$/;"	v
MC_AH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	41;"	d
MC_AL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	40;"	d
MC_BIST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	39;"	d
MC_BIST_12KB_MASK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	91;"	d
MC_BIST_12KB_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	90;"	d
MC_BIST_512KB_MASK	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	93;"	d
MC_BIST_512KB_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	92;"	d
MC_BIST_BOOT_ROM_SEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	89;"	d
MC_BIST_BUSY_BIT_R	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	94;"	d
MC_BIST_LAUNCH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	96;"	d
MC_BIST_MC_RES_ONE_SH_W	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	95;"	d
MC_BIST_RESET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	88;"	d
MC_D	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	42;"	d
MIDH	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t MIDH;$/;"	m	struct:__anon14
MIDH	./libraries/esp32-camera/include/sensor.h	/^    uint8_t MIDH;$/;"	m	struct:__anon15
MIDL	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t MIDL;$/;"	m	struct:__anon14
MIDL	./libraries/esp32-camera/include/sensor.h	/^    uint8_t MIDL;$/;"	m	struct:__anon15
MINIMUM_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	85;"	d
MINIMUM_TIMER_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	89;"	d
MINIMUM_UPCASE_SKIP	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint16_t MINIMUM_UPCASE_SKIP = 512;$/;"	v
MIN_2X_BAUD	./libraries/SdFat/src/MinimumSerial.cpp	/^const uint16_t MIN_2X_BAUD = F_CPU\/(4*(2*0XFFF + 1)) + 1;$/;"	v
MIN_PULSE_WIDTH	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	97;"	d
MISO_LEVEL	./libraries/SdFat/src/DigitalIO/SoftSPI.h	38;"	d
MISO_MODE	./libraries/SdFat/src/DigitalIO/SoftSPI.h	36;"	d
MODE1_AI	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	54;"	d
MODE1_AI	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	54;"	d
MODE1_ALLCAL	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	49;"	d
MODE1_ALLCAL	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	49;"	d
MODE1_EXTCLK	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	55;"	d
MODE1_EXTCLK	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	55;"	d
MODE1_RESTART	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	56;"	d
MODE1_RESTART	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	56;"	d
MODE1_SLEEP	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	53;"	d
MODE1_SLEEP	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	53;"	d
MODE1_SUB1	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	52;"	d
MODE1_SUB1	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	52;"	d
MODE1_SUB2	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	51;"	d
MODE1_SUB2	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	51;"	d
MODE1_SUB3	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	50;"	d
MODE1_SUB3	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	50;"	d
MODE2_INVRT	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	63;"	d
MODE2_INVRT	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	63;"	d
MODE2_OCH	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	62;"	d
MODE2_OCH	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	62;"	d
MODE2_OUTDRV	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	61;"	d
MODE2_OUTDRV	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	61;"	d
MODE2_OUTNE_0	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	58;"	d
MODE2_OUTNE_0	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	58;"	d
MODE2_OUTNE_1	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	59;"	d
MODE2_OUTNE_1	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	59;"	d
MODE_CPHA	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  bool MODE_CPHA(uint8_t mode) {return (mode & 1) != 0;}$/;"	f	class:SoftSPI
MODE_CPOL	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  bool MODE_CPOL(uint8_t mode) {return (mode & 2) != 0;}$/;"	f	class:SoftSPI
MOSI_MODE	./libraries/SdFat/src/DigitalIO/SoftSPI.h	40;"	d
MS_SP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	36;"	d
MTX1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	202;"	d
MTX1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	292;"	d
MTX2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	203;"	d
MTX2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	293;"	d
MTX3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	204;"	d
MTX3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	294;"	d
MTX4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	205;"	d
MTX4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	295;"	d
MTX5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	206;"	d
MTX5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	296;"	d
MTX6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	207;"	d
MTX6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	297;"	d
MTXS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	211;"	d
MTX_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	299;"	d
MTX_CTRL_DBL_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	300;"	d
MVFP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	128;"	d
MVFP_FLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	130;"	d
MVFP_MIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	129;"	d
MVFP_SET_FLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	133;"	d
MVFP_SET_MIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	132;"	d
MVFP_SUN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	131;"	d
M_APP0	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_DHT	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_DQT	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_EOI	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_SOF0	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_SOI	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
M_SOS	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { M_SOF0 = 0xC0, M_DHT = 0xC4, M_SOI = 0xD8, M_EOI = 0xD9, M_SOS = 0xDA, M_DQT = 0xDB, M_APP0 = 0xE0 };$/;"	e	enum:jpge::__anon1	file:
MbrPart_t	./libraries/SdFat/src/common/FsStructs.h	/^} MbrPart_t;$/;"	t	typeref:struct:mbrPartition
MbrSector_t	./libraries/SdFat/src/common/FsStructs.h	/^} MbrSector_t;$/;"	t	typeref:struct:masterBootRecordSector
MegaGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/MegaGpioPinMap.h	2;"	d
MinimumSerial	./libraries/SdFat/src/MinimumSerial.h	/^class MinimumSerial : public print_t {$/;"	c
MinimumSerial_h	./libraries/SdFat/src/MinimumSerial.h	30;"	d
NACK_VAL	./libraries/esp32-camera-2.0.8/driver/sccb.c	39;"	d	file:
NACK_VAL	./libraries/esp32-camera/sccb.c	39;"	d	file:
NEO_BGR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	96;"	d
NEO_BGRW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	126;"	d
NEO_BGWR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	125;"	d
NEO_BRG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	95;"	d
NEO_BRGW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	124;"	d
NEO_BRWG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	123;"	d
NEO_BWGR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	122;"	d
NEO_BWRG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	121;"	d
NEO_GBR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	94;"	d
NEO_GBRW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	119;"	d
NEO_GBWR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	118;"	d
NEO_GRB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	93;"	d
NEO_GRBW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	117;"	d
NEO_GRWB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	116;"	d
NEO_GWBR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	115;"	d
NEO_GWRB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	114;"	d
NEO_KHZ400	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	138;"	d
NEO_KHZ800	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	136;"	d
NEO_RBG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	92;"	d
NEO_RBGW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	112;"	d
NEO_RBWG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	111;"	d
NEO_RGB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	91;"	d
NEO_RGBW	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	110;"	d
NEO_RGWB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	109;"	d
NEO_RWBG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	108;"	d
NEO_RWGB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	107;"	d
NEO_WBGR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	105;"	d
NEO_WBRG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	104;"	d
NEO_WGBR	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	103;"	d
NEO_WGRB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	102;"	d
NEO_WRBG	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	101;"	d
NEO_WRGB	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	100;"	d
NEW_ALIGN_DIM	./libraries/SdFat/src/FsLib/FsNew.h	38;"	d
NINA_W102_1_7_4	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/nina_1_7_4_binaries.h	/^const esp32_zipfile_t NINA_W102_1_7_4 = {$/;"	v
NINA_W102_1_7_5	./libraries/Adafruit_TestBed/examples/program_esp32_uart_from_sdcard/esp_binaries.h	/^const esp32_zipfile_t NINA_W102_1_7_5 = {$/;"	v
NO_CAMERA_LEDC_CHANNEL	./libraries/esp32-camera-2.0.8/target/xclk.c	16;"	d	file:
NT99141_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    NT99141_PID = 0x1410,$/;"	e	enum:__anon4
NT99141_PID	./libraries/esp32-camera/include/sensor.h	/^    NT99141_PID = 0x1410,$/;"	e	enum:__anon5
NT99141_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    NT99141_SCCB_ADDR  = 0x2A,\/\/ 0x54 >> 1$/;"	e	enum:__anon6
NT99141_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    NT99141_SCCB_ADDR  = 0x2A,\/\/ 0x54 >> 1$/;"	e	enum:__anon7
NT_CNTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	307;"	d
NULL	./libraries/SdFat/src/iostream/StdioStream.h	92;"	d
NUM_AE_LEVELS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	470;"	d
NUM_BRIGHTNESS_LEVELS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	419;"	d
NUM_CONTRAST_LEVELS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	429;"	d
NUM_PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	13;"	d
NUM_PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	15;"	d
NUM_PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	17;"	d
NUM_SATURATION_LEVELS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	439;"	d
NUM_SPECIAL_EFFECTS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	449;"	d
NUM_WB_MODES	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	461;"	d
OCT	./libraries/SdFat/extras/attic/PrintBasic.h	49;"	d
OCT	./libraries/SdFat/src/common/PrintBasic.h	50;"	d
OFF_B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	162;"	d
OFF_GB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	164;"	d
OFF_GR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	165;"	d
OFF_R	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	163;"	d
OFON	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	161;"	d
OUTPUT	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	45;"	d
OV2640_MODE_CIF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^    OV2640_MODE_UXGA, OV2640_MODE_SVGA, OV2640_MODE_CIF, OV2640_MODE_MAX$/;"	e	enum:__anon12
OV2640_MODE_MAX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^    OV2640_MODE_UXGA, OV2640_MODE_SVGA, OV2640_MODE_CIF, OV2640_MODE_MAX$/;"	e	enum:__anon12
OV2640_MODE_SVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^    OV2640_MODE_UXGA, OV2640_MODE_SVGA, OV2640_MODE_CIF, OV2640_MODE_MAX$/;"	e	enum:__anon12
OV2640_MODE_UXGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^    OV2640_MODE_UXGA, OV2640_MODE_SVGA, OV2640_MODE_CIF, OV2640_MODE_MAX$/;"	e	enum:__anon12
OV2640_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV2640_PID = 0x26,$/;"	e	enum:__anon4
OV2640_PID	./libraries/esp32-camera/include/sensor.h	/^    OV2640_PID = 0x26,$/;"	e	enum:__anon5
OV2640_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV2640_SCCB_ADDR   = 0x30,\/\/ 0x60 >> 1$/;"	e	enum:__anon6
OV2640_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    OV2640_SCCB_ADDR   = 0x30,\/\/ 0x60 >> 1$/;"	e	enum:__anon7
OV3660_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV3660_PID = 0x3660,$/;"	e	enum:__anon4
OV3660_PID	./libraries/esp32-camera/include/sensor.h	/^    OV3660_PID = 0x3660,$/;"	e	enum:__anon5
OV3660_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV3660_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon6
OV3660_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    OV3660_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon7
OV5640_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV5640_PID = 0x5640,$/;"	e	enum:__anon4
OV5640_PID	./libraries/esp32-camera/include/sensor.h	/^    OV5640_PID = 0x5640,$/;"	e	enum:__anon5
OV5640_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV5640_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon6
OV5640_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    OV5640_SCCB_ADDR   = 0x3C,\/\/ 0x78 >> 1$/;"	e	enum:__anon7
OV7670_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV7670_PID = 0x76,$/;"	e	enum:__anon4
OV7670_PID	./libraries/esp32-camera/include/sensor.h	/^    OV7670_PID = 0x76,$/;"	e	enum:__anon5
OV7670_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV7670_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon6
OV7670_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    OV7670_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon7
OV7725_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV7725_PID = 0x77,$/;"	e	enum:__anon4
OV7725_PID	./libraries/esp32-camera/include/sensor.h	/^    OV7725_PID = 0x77,$/;"	e	enum:__anon5
OV7725_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV7725_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon6
OV7725_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    OV7725_SCCB_ADDR   = 0x21,\/\/ 0x42 >> 1$/;"	e	enum:__anon7
OV9650_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    OV9650_PID = 0x96,$/;"	e	enum:__anon4
OV9650_PID	./libraries/esp32-camera/include/sensor.h	/^    OV9650_PID = 0x96,$/;"	e	enum:__anon5
O_ACCMODE	./libraries/SdFat/src/common/FsApiConstants.h	56;"	d
O_APPEND	./libraries/SdFat/src/common/FsApiConstants.h	50;"	d
O_AT_END	./libraries/SdFat/src/common/FsApiConstants.h	43;"	d
O_AT_END	./libraries/SdFat/src/common/FsApiConstants.h	49;"	d
O_CREAT	./libraries/SdFat/src/common/FsApiConstants.h	51;"	d
O_EXCL	./libraries/SdFat/src/common/FsApiConstants.h	53;"	d
O_RDONLY	./libraries/SdFat/src/common/FsApiConstants.h	46;"	d
O_RDWR	./libraries/SdFat/src/common/FsApiConstants.h	48;"	d
O_READ	./libraries/SdFat/src/common/FsApiConstants.h	60;"	d
O_SYNC	./libraries/SdFat/src/common/FsApiConstants.h	54;"	d
O_TRUNC	./libraries/SdFat/src/common/FsApiConstants.h	52;"	d
O_WRITE	./libraries/SdFat/src/common/FsApiConstants.h	61;"	d
O_WRONLY	./libraries/SdFat/src/common/FsApiConstants.h	47;"	d
P0_AAAA_ENABLE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	51;"	d
P0_ANALOG_MODE1	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	41;"	d
P0_ANALOG_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	42;"	d
P0_BLOCK_ENABLE_1	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	50;"	d
P0_BYPASS_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	69;"	d
P0_CISCTL_MODE1	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	48;"	d
P0_COLUMN_START_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	39;"	d
P0_COLUMN_START_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	40;"	d
P0_COL_START_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	34;"	d
P0_COL_START_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	35;"	d
P0_CONTRAST_CENTER	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	70;"	d
P0_CROP_ENABLE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	72;"	d
P0_DEBUG_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	55;"	d
P0_DEBUG_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	70;"	d
P0_DEBUG_MODE3	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	71;"	d
P0_EXPOSURE_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	31;"	d
P0_EXPOSURE_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	26;"	d
P0_EXPOSURE_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	32;"	d
P0_EXPOSURE_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	27;"	d
P0_FIXED_CB	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	72;"	d
P0_FIXED_CR	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	73;"	d
P0_FRAME_START	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	66;"	d
P0_GAIN_CODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	54;"	d
P0_GLOBAL_SATURATION	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	66;"	d
P0_HB_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	33;"	d
P0_HB_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	28;"	d
P0_HB_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	34;"	d
P0_HB_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	29;"	d
P0_LUMA_CONTRAST	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	69;"	d
P0_LUMA_OFFSET	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	71;"	d
P0_MODULE_GATING	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	68;"	d
P0_OUTPUT_FORMAT	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	45;"	d
P0_OUT_WIN_HEIGHT_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	61;"	d
P0_OUT_WIN_HEIGHT_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	77;"	d
P0_OUT_WIN_HEIGHT_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	62;"	d
P0_OUT_WIN_HEIGHT_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	78;"	d
P0_OUT_WIN_WIDTH_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	63;"	d
P0_OUT_WIN_WIDTH_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	79;"	d
P0_OUT_WIN_WIDTH_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	64;"	d
P0_OUT_WIN_WIDTH_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	80;"	d
P0_OUT_WIN_X1_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	59;"	d
P0_OUT_WIN_X1_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	75;"	d
P0_OUT_WIN_X1_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	60;"	d
P0_OUT_WIN_X1_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	76;"	d
P0_OUT_WIN_Y1_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	57;"	d
P0_OUT_WIN_Y1_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	73;"	d
P0_OUT_WIN_Y1_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	58;"	d
P0_OUT_WIN_Y1_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	74;"	d
P0_ROW_START_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	37;"	d
P0_ROW_START_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	32;"	d
P0_ROW_START_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	38;"	d
P0_ROW_START_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	33;"	d
P0_SATURATION_CB	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	67;"	d
P0_SATURATION_CR	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	68;"	d
P0_SH_DELAY	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	45;"	d
P0_SPECIAL_EFFECT	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	52;"	d
P0_SPECIAL_EFFECT	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	44;"	d
P0_SUBSAMPLE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	81;"	d
P0_SUBSAMPLE_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	82;"	d
P0_SYNC_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	53;"	d
P0_SYNC_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	67;"	d
P0_VB_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	35;"	d
P0_VB_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	30;"	d
P0_VB_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	36;"	d
P0_VB_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	31;"	d
P0_VS_ET	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	47;"	d
P0_VS_ST	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	46;"	d
P0_WINDOW_HEIGHT_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	41;"	d
P0_WINDOW_HEIGHT_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	42;"	d
P0_WINDOW_WIDTH_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	43;"	d
P0_WINDOW_WIDTH_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	44;"	d
P0_WIN_HEIGHT_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	37;"	d
P0_WIN_HEIGHT_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	38;"	d
P0_WIN_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	56;"	d
P0_WIN_WIDTH_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	39;"	d
P0_WIN_WIDTH_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	40;"	d
P3_IMAGE_HEIGHT_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	79;"	d
P3_IMAGE_HEIGHT_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	78;"	d
P3_IMAGE_WIDTH_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	77;"	d
P3_IMAGE_WIDTH_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	76;"	d
PAD_VB_HIZ_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	9;"	d
PBR_SIGNATURE	./libraries/SdFat/src/common/FsStructs.h	/^const uint16_t PBR_SIGNATURE = 0xAA55;$/;"	v
PCA9685_ALLCALLADR	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	35;"	d
PCA9685_ALLCALLADR	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	35;"	d
PCA9685_ALLLED_OFF_H	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	44;"	d
PCA9685_ALLLED_OFF_H	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	44;"	d
PCA9685_ALLLED_OFF_L	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	43;"	d
PCA9685_ALLLED_OFF_L	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	43;"	d
PCA9685_ALLLED_ON_H	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	42;"	d
PCA9685_ALLLED_ON_H	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	42;"	d
PCA9685_ALLLED_ON_L	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	41;"	d
PCA9685_ALLLED_ON_L	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	41;"	d
PCA9685_I2C_ADDRESS	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	65;"	d
PCA9685_I2C_ADDRESS	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	65;"	d
PCA9685_LED0_OFF_H	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	39;"	d
PCA9685_LED0_OFF_H	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	39;"	d
PCA9685_LED0_OFF_L	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	38;"	d
PCA9685_LED0_OFF_L	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	38;"	d
PCA9685_LED0_ON_H	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	37;"	d
PCA9685_LED0_ON_H	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	37;"	d
PCA9685_LED0_ON_L	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	36;"	d
PCA9685_LED0_ON_L	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	36;"	d
PCA9685_MODE1	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	30;"	d
PCA9685_MODE1	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	30;"	d
PCA9685_MODE2	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	31;"	d
PCA9685_MODE2	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	31;"	d
PCA9685_PRESCALE	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	45;"	d
PCA9685_PRESCALE	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	45;"	d
PCA9685_PRESCALE_MAX	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	69;"	d
PCA9685_PRESCALE_MAX	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	69;"	d
PCA9685_PRESCALE_MIN	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	68;"	d
PCA9685_PRESCALE_MIN	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	68;"	d
PCA9685_SUBADR1	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	32;"	d
PCA9685_SUBADR1	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	32;"	d
PCA9685_SUBADR2	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	33;"	d
PCA9685_SUBADR2	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	33;"	d
PCA9685_SUBADR3	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	34;"	d
PCA9685_SUBADR3	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	34;"	d
PCA9685_TESTMODE	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	46;"	d
PCA9685_TESTMODE	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	46;"	d
PCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	40;"	d	file:
PCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	61;"	d	file:
PCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	70;"	d	file:
PCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	92;"	d	file:
PCLK_RATIO	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	158;"	d
PCLK_RATIO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	158;"	d
PCLK_RATIO	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	97;"	d
PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint16_t PID;$/;"	m	struct:__anon14
PID	./libraries/esp32-camera/include/sensor.h	/^    uint16_t PID;$/;"	m	struct:__anon15
PIN_NUM_DIM	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^const size_t PIN_NUM_DIM = BLOCK_SIZE - 3*sizeof(uint32_t) - 2*sizeof(uint8_t);$/;"	v
PIXFORMAT_GRAYSCALE	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_GRAYSCALE, \/\/ 1BPP\/GRAYSCALE$/;"	e	enum:__anon7
PIXFORMAT_GRAYSCALE	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_GRAYSCALE, \/\/ 1BPP\/GRAYSCALE$/;"	e	enum:__anon8
PIXFORMAT_JPEG	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_JPEG,      \/\/ JPEG\/COMPRESSED$/;"	e	enum:__anon7
PIXFORMAT_JPEG	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_JPEG,      \/\/ JPEG\/COMPRESSED$/;"	e	enum:__anon8
PIXFORMAT_RAW	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_RAW,       \/\/ RAW$/;"	e	enum:__anon7
PIXFORMAT_RAW	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_RAW,       \/\/ RAW$/;"	e	enum:__anon8
PIXFORMAT_RGB444	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_RGB444,    \/\/ 3BP2P\/RGB444$/;"	e	enum:__anon7
PIXFORMAT_RGB444	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_RGB444,    \/\/ 3BP2P\/RGB444$/;"	e	enum:__anon8
PIXFORMAT_RGB555	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_RGB555,    \/\/ 3BP2P\/RGB555$/;"	e	enum:__anon7
PIXFORMAT_RGB555	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_RGB555,    \/\/ 3BP2P\/RGB555$/;"	e	enum:__anon8
PIXFORMAT_RGB565	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_RGB565,    \/\/ 2BPP\/RGB565$/;"	e	enum:__anon7
PIXFORMAT_RGB565	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_RGB565,    \/\/ 2BPP\/RGB565$/;"	e	enum:__anon8
PIXFORMAT_RGB888	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_RGB888,    \/\/ 3BPP\/RGB888$/;"	e	enum:__anon7
PIXFORMAT_RGB888	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_RGB888,    \/\/ 3BPP\/RGB888$/;"	e	enum:__anon8
PIXFORMAT_YUV420	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_YUV420,    \/\/ 1.5BPP\/YUV420$/;"	e	enum:__anon7
PIXFORMAT_YUV420	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_YUV420,    \/\/ 1.5BPP\/YUV420$/;"	e	enum:__anon8
PIXFORMAT_YUV422	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    PIXFORMAT_YUV422,    \/\/ 2BPP\/YUV422$/;"	e	enum:__anon7
PIXFORMAT_YUV422	./libraries/esp32-camera/include/sensor.h	/^    PIXFORMAT_YUV422,    \/\/ 2BPP\/YUV422$/;"	e	enum:__anon8
PLL_MODE1	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	12;"	d
PLL_MODE1	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	9;"	d
PLL_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	13;"	d
PLL_MODE2	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	10;"	d
POWER_CTL	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^const uint8_t POWER_CTL = 0x2D;  \/\/Power Control Register$/;"	v
PRE_ISP_TEST_SETTING_1	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	36;"	d
PRE_ISP_TEST_SETTING_1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	36;"	d
PRE_ISP_TEST_SETTING_1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	135;"	d
PRINTF_USE_FLOAT	./libraries/SdFat/extras/attic/PrintTemplates.h	36;"	d
PRINT_FORMAT_PROGRESS	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	40;"	d	file:
PRINT_FORMAT_PROGRESS	./libraries/SdFat/src/FatLib/FatFormatter.cpp	39;"	d	file:
PROGMEM	./libraries/SdFat/src/FatLib/FatFile.h	59;"	d
PROGMEM	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^static const uint16_t crctab[] PROGMEM = {$/;"	v	file:
PROGMEM	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const float m[] PROGMEM = {1e-1, 1e-2, 1e-4, 1e-8, 1e-16, 1e-32};$/;"	v	file:
PROGMEM	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const float p[] PROGMEM = {1e+1, 1e+2, 1e+4, 1e+8, 1e+16, 1e+32};$/;"	v	file:
PSHFT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	124;"	d
PSHFT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	131;"	d
PSTR	./libraries/SdFat/src/FatLib/FatFile.h	47;"	d
PSTR	./libraries/SdFat/src/iostream/ostream.cpp	28;"	d	file:
PURPLE	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	16;"	d
PWDN_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	24;"	d	file:
PWDN_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	45;"	d	file:
PWDN_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	65;"	d	file:
PWDN_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	87;"	d	file:
PWMCount	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^int ESP32PWM::PWMCount = -1;              \/\/ the total number of attached servos$/;"	m	class:ESP32PWM	file:
PWMCount	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static int PWMCount;              \/\/ the total number of attached pwm$/;"	m	class:ESP32PWM
PWM_BASE_INDEX	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	20;"	d
P_CMD	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	43;"	d
P_STATUS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	44;"	d
PbsFat_t	./libraries/SdFat/src/common/FsStructs.h	/^} PbsFat_t;$/;"	t	typeref:struct:partitionBootSectorFat
PrintBasic	./libraries/SdFat/extras/attic/PrintBasic.h	/^  PrintBasic() : m_error(0) {}$/;"	f	class:PrintBasic
PrintBasic	./libraries/SdFat/extras/attic/PrintBasic.h	/^class PrintBasic {$/;"	c
PrintBasic	./libraries/SdFat/src/common/PrintBasic.h	/^  PrintBasic() : m_error(0) {}$/;"	f	class:PrintBasic
PrintBasic	./libraries/SdFat/src/common/PrintBasic.h	/^class PrintBasic {$/;"	c
PrintBasic_h	./libraries/SdFat/extras/attic/PrintBasic.h	26;"	d
PrintBasic_h	./libraries/SdFat/src/common/PrintBasic.h	26;"	d
PrintFile	./libraries/SdFat/src/common/ArduinoFiles.h	/^class PrintFile : public print_t, public BaseFile {$/;"	c
PrintTemplates_h	./libraries/SdFat/extras/attic/PrintTemplates.h	26;"	d
QS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	12;"	d
R1_IDLE_STATE	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t R1_IDLE_STATE = 0X01;$/;"	v
R1_ILLEGAL_COMMAND	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t R1_ILLEGAL_COMMAND = 0X04;$/;"	v
R1_READY_STATE	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t R1_READY_STATE = 0X00;$/;"	v
RAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	17;"	d
RAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	16;"	d
RAW_ROOT	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	434;"	d	file:
RBIAS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	148;"	d
READ_BIT	./libraries/esp32-camera-2.0.8/driver/sccb.c	35;"	d	file:
READ_BIT	./libraries/esp32-camera/sccb.c	35;"	d	file:
READ_ERROR	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t READ_ERROR  = 0X2;$/;"	m	class:ExFatFile
READ_ERROR	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t READ_ERROR  = 0X2;$/;"	m	class:FatFile
READ_STATE	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  static const uint8_t READ_STATE = 1;$/;"	m	class:SharedSpiCard
READ_STATE	./libraries/SdFat/src/SdCard/SdioCard.h	/^  static const uint8_t READ_STATE = 1;$/;"	m	class:SdioCard
RED	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	11;"	d
RED	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	11;"	d
RED	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	12;"	d
REFRESH_CPS	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int REFRESH_CPS = 50;$/;"	m	class:Servo
REFRESH_USEC	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	102;"	d
REG04	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	106;"	d
REG04_DEFAULT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	153;"	d
REG04_HFLIP_IMG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	154;"	d
REG04_HREF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	157;"	d
REG04_SET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	158;"	d
REG04_VFLIP_IMG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	155;"	d
REG04_VREF_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	156;"	d
REG08	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	107;"	d
REG16	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	125;"	d
REG16_BIT_SHIFT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	126;"	d
REG28	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	145;"	d
REG2A	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	128;"	d
REG32	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	135;"	d
REG32_CIF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	209;"	d
REG32_SVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	208;"	d
REG32_UXGA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	207;"	d
REG45	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	137;"	d
REG4B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	196;"	d
REG5D	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	146;"	d
REG5E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	147;"	d
REG5F	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	148;"	d
REG60	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	149;"	d
REG74	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	247;"	d
REG75	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	248;"	d
REG76	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	249;"	d
REG77	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	250;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_settings.h	5;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_settings.h	11;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_settings.h	5;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	16;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	23;"	d
REGLIST_TAIL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	23;"	d
REG_DELAY	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	74;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_settings.h	4;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/gc0308_settings.h	6;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_settings.h	10;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_settings.h	4;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	15;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	22;"	d
REG_DLY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	22;"	d
REG_MIDH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	123;"	d
REG_MIDH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	125;"	d
REG_MIDH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	132;"	d
REG_MIDL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	124;"	d
REG_MIDL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	126;"	d
REG_MIDL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	133;"	d
REG_NULL	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	73;"	d
REG_PID	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	109;"	d
REG_PID	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	26;"	d
REG_PID	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	26;"	d
REG_VER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	110;"	d
REG_VER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	27;"	d
REG_VER	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	27;"	d
RESET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	35;"	d
RESET_CIF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	86;"	d
RESET_DVP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	84;"	d
RESET_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	25;"	d	file:
RESET_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	46;"	d	file:
RESET_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	66;"	d	file:
RESET_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	88;"	d	file:
RESET_IPU	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	85;"	d
RESET_JPEG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	83;"	d
RESET_MICROC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	81;"	d
RESET_RELATED	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_regs.h	9;"	d
RESET_RELATED	./libraries/esp32-camera-2.0.8/sensors/private_include/gc0308_regs.h	7;"	d
RESET_RELATED	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	19;"	d
RESET_RELATED	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	13;"	d
RESET_SCCB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	82;"	d
RGB444	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	275;"	d
RGB565_TO_YUV422	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    RGB565_TO_YUV422,$/;"	e	enum:__anon18
RGB565_TO_YUV422	./libraries/esp32-camera/include/esp_camera.h	/^    RGB565_TO_YUV422,$/;"	e	enum:__anon19
RGB_to_Y	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static void RGB_to_Y(uint8* pDst, const uint8 *pSrc, int num_pixels) {$/;"	f	namespace:jpge
RGB_to_YCC	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static void RGB_to_YCC(uint8* pDst, const uint8 *pSrc, int num_pixels) {$/;"	f	namespace:jpge
RMT_LL_HW_BASE	./libraries/Adafruit_NeoPixel/esp.c	98;"	d	file:
ROM_INVALID_RECV_MSG	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  ROM_INVALID_RECV_MSG = 0x05, \/\/ response if an invalid message is received$/;"	e	enum:__anon4	file:
ROOT_CLUSTER	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint32_t ROOT_CLUSTER = 4;$/;"	v
ROW_BITS	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    enum { CONST_BITS = 13, ROW_BITS = 2 };$/;"	e	enum:jpge::__anon3	file:
RSVD_16	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	118;"	d
RSVD_29	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	145;"	d
RSVD_35	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	157;"	d
RSVD_36	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	158;"	d
RSVD_49	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	193;"	d
RSVD_4A	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	194;"	d
RSVD_4D	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	199;"	d
RSVD_4E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	200;"	d
RSVD_59	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	213;"	d
RSVD_5A	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	214;"	d
RSVD_5B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	215;"	d
RSVD_5C	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	216;"	d
RSVD_5D	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	217;"	d
RSVD_5E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	218;"	d
RSVD_5F	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	219;"	d
RSVD_60	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	220;"	d
RSVD_61	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	221;"	d
RSVD_78	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	252;"	d
RSVD_79	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	253;"	d
RSVD_8A	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	272;"	d
RSVD_8B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	273;"	d
RSVD_8D	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	277;"	d
RSVD_8E	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	278;"	d
RSVD_8F	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	279;"	d
RSVD_90	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	280;"	d
RSVD_91	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	281;"	d
RSVD_96	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	288;"	d
RSVD_97	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	289;"	d
RSVD_98	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	290;"	d
RSVD_99	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	291;"	d
RSVD_9A	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	292;"	d
RSVD_9B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	293;"	d
RSVD_9C	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	294;"	d
RSVD_A1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	301;"	d
RSVD_A3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	305;"	d
RSVD_B0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	323;"	d
RSVD_B2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	325;"	d
RSVD_B6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	329;"	d
RSVD_B7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	330;"	d
RSVD_B8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	331;"	d
RSVD_B9	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	332;"	d
RSVD_BA	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	333;"	d
RSVD_BB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	334;"	d
RSVD_BC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	335;"	d
RSVD_BD	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	336;"	d
RSVD_C2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	343;"	d
RSVD_C3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	344;"	d
RSVD_C4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	345;"	d
RSVD_C5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	346;"	d
RSVD_C6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	347;"	d
RSVD_C7	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	348;"	d
RSVD_C8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	349;"	d
R_BYPASS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	11;"	d
R_BYPASS_DSP_BYPAS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	71;"	d
R_BYPASS_DSP_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	70;"	d
R_DVP_SP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	33;"	d
R_DVP_SP_AUTO_MODE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	68;"	d
RingBuf	./libraries/SdFat/src/RingBuf.h	/^  RingBuf() {}$/;"	f	class:RingBuf
RingBuf	./libraries/SdFat/src/RingBuf.h	/^class RingBuf : public Print {$/;"	c
RingBuf_h	./libraries/SdFat/src/RingBuf.h	26;"	d
Run pre-commit	./libraries/Adafruit_TestBed/.github/workflows/githubci.yml	/^    - name: Run pre-commit$/;"	k
SAM3X_DMA_TIMEOUT	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	32;"	d	file:
SATCTR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	351;"	d
SC030IOT_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC030IOT_PID = 0x9a46,$/;"	e	enum:__anon4
SC030IOT_PID	./libraries/esp32-camera/include/sensor.h	/^    SC030IOT_PID = 0x9a46,$/;"	e	enum:__anon5
SC030IOT_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC030IOT_SCCB_ADDR = 0x68,\/\/ 0xd0 >> 1$/;"	e	enum:__anon6
SC030IOT_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    SC030IOT_SCCB_ADDR = 0x68,\/\/ 0xd0 >> 1$/;"	e	enum:__anon7
SC030_MAX_FRAME_HIGH	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	41;"	d	file:
SC030_MAX_FRAME_WIDTH	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	40;"	d	file:
SC030_SENSOR_ID_HIGH_REG	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	38;"	d	file:
SC030_SENSOR_ID_LOW_REG	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	39;"	d	file:
SC031GS_GAIN_CTRL_COARSE_REG	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	42;"	d	file:
SC031GS_GAIN_CTRL_FINE_REG	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	43;"	d	file:
SC031GS_LED_STROBE_ENABLE_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	71;"	d
SC031GS_MAX_FRAME_HIGH	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	41;"	d	file:
SC031GS_MAX_FRAME_WIDTH	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	40;"	d	file:
SC031GS_OUTPUT_WINDOW_HIGH_H_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	69;"	d
SC031GS_OUTPUT_WINDOW_HIGH_L_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	70;"	d
SC031GS_OUTPUT_WINDOW_START_X_H_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	63;"	d
SC031GS_OUTPUT_WINDOW_START_X_L_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	64;"	d
SC031GS_OUTPUT_WINDOW_START_Y_H_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	65;"	d
SC031GS_OUTPUT_WINDOW_START_Y_L_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	66;"	d
SC031GS_OUTPUT_WINDOW_WIDTH_H_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	67;"	d
SC031GS_OUTPUT_WINDOW_WIDTH_L_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	68;"	d
SC031GS_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC031GS_PID = 0x0031,$/;"	e	enum:__anon4
SC031GS_PID	./libraries/esp32-camera/include/sensor.h	/^    SC031GS_PID = 0x0031,$/;"	e	enum:__anon5
SC031GS_PIDH_MAGIC	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	45;"	d	file:
SC031GS_PIDL_MAGIC	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	46;"	d	file:
SC031GS_PID_HIGH_REG	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	39;"	d	file:
SC031GS_PID_LOW_REG	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	38;"	d	file:
SC031GS_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC031GS_SCCB_ADDR  = 0x30,$/;"	e	enum:__anon6
SC031GS_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    SC031GS_SCCB_ADDR  = 0x30,$/;"	e	enum:__anon7
SC101IOT_PID	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC101IOT_PID = 0xda4a,$/;"	e	enum:__anon4
SC101IOT_PID	./libraries/esp32-camera/include/sensor.h	/^    SC101IOT_PID = 0xda4a,$/;"	e	enum:__anon5
SC101IOT_SCCB_ADDR	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    SC101IOT_SCCB_ADDR = 0x68,\/\/ 0xd0 >> 1$/;"	e	enum:__anon6
SC101IOT_SCCB_ADDR	./libraries/esp32-camera/include/sensor.h	/^    SC101IOT_SCCB_ADDR = 0x68,\/\/ 0xd0 >> 1$/;"	e	enum:__anon7
SC101_MAX_FRAME_HIGH	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	41;"	d	file:
SC101_MAX_FRAME_WIDTH	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	40;"	d	file:
SC101_SENSOR_ID_HIGH_REG	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	38;"	d	file:
SC101_SENSOR_ID_LOW_REG	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	39;"	d	file:
SCAL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	306;"	d
SCAL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	307;"	d
SCAL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	308;"	d
SCALE_CTRL_1	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	135;"	d
SCALE_CTRL_1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	135;"	d
SCALE_CTRL_1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	154;"	d
SCALE_CTRL_2	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	152;"	d
SCALE_CTRL_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	152;"	d
SCALE_CTRL_2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	171;"	d
SCALE_CTRL_3	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	153;"	d
SCALE_CTRL_3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	153;"	d
SCALE_CTRL_3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	172;"	d
SCALE_CTRL_4	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	154;"	d
SCALE_CTRL_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	154;"	d
SCALE_CTRL_4	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	173;"	d
SCALE_CTRL_5	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	155;"	d
SCALE_CTRL_5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	155;"	d
SCALE_CTRL_5	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	174;"	d
SCALE_CTRL_6	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	156;"	d
SCALE_CTRL_6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	156;"	d
SCALE_CTRL_6	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	175;"	d
SCALING_DCWCTR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	245;"	d
SCALING_PCLK_DELAY	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	303;"	d
SCALING_PCLK_DIV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	246;"	d
SCALING_XSC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	241;"	d
SCALING_XSC_CBAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	242;"	d
SCALING_YSC	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	243;"	d
SCALING_YSC_CBAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	244;"	d
SCCB_Deinit	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Deinit(void)$/;"	f
SCCB_Deinit	./libraries/esp32-camera/sccb.c	/^int SCCB_Deinit(void)$/;"	f
SCCB_FREQ	./libraries/esp32-camera-2.0.8/driver/sccb.c	33;"	d	file:
SCCB_FREQ	./libraries/esp32-camera/sccb.c	33;"	d	file:
SCCB_I2C_PORT_DEFAULT	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^const int SCCB_I2C_PORT_DEFAULT = 0;$/;"	v
SCCB_I2C_PORT_DEFAULT	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^const int SCCB_I2C_PORT_DEFAULT = 1;$/;"	v
SCCB_I2C_PORT_DEFAULT	./libraries/esp32-camera/sccb.c	/^const int SCCB_I2C_PORT_DEFAULT = 0;$/;"	v
SCCB_I2C_PORT_DEFAULT	./libraries/esp32-camera/sccb.c	/^const int SCCB_I2C_PORT_DEFAULT = 1;$/;"	v
SCCB_Init	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Init(int pin_sda, int pin_scl)$/;"	f
SCCB_Init	./libraries/esp32-camera/sccb.c	/^int SCCB_Init(int pin_sda, int pin_scl)$/;"	f
SCCB_Probe	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^uint8_t SCCB_Probe(void)$/;"	f
SCCB_Probe	./libraries/esp32-camera/sccb.c	/^uint8_t SCCB_Probe(void)$/;"	f
SCCB_Read	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^uint8_t SCCB_Read(uint8_t slv_addr, uint8_t reg)$/;"	f
SCCB_Read	./libraries/esp32-camera/sccb.c	/^uint8_t SCCB_Read(uint8_t slv_addr, uint8_t reg)$/;"	f
SCCB_Read16	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^uint8_t SCCB_Read16(uint8_t slv_addr, uint16_t reg)$/;"	f
SCCB_Read16	./libraries/esp32-camera/sccb.c	/^uint8_t SCCB_Read16(uint8_t slv_addr, uint16_t reg)$/;"	f
SCCB_Read_Addr16_Val16	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^uint16_t SCCB_Read_Addr16_Val16(uint8_t slv_addr, uint16_t reg)$/;"	f
SCCB_Read_Addr16_Val16	./libraries/esp32-camera/sccb.c	/^uint16_t SCCB_Read_Addr16_Val16(uint8_t slv_addr, uint16_t reg)$/;"	f
SCCB_Use_Port	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Use_Port(int i2c_num) { \/\/ sccb use an already initialized I2C port$/;"	f
SCCB_Use_Port	./libraries/esp32-camera/sccb.c	/^int SCCB_Use_Port(int i2c_num) { \/\/ sccb use an already initialized I2C port$/;"	f
SCCB_Write	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Write(uint8_t slv_addr, uint8_t reg, uint8_t data)$/;"	f
SCCB_Write	./libraries/esp32-camera/sccb.c	/^int SCCB_Write(uint8_t slv_addr, uint8_t reg, uint8_t data)$/;"	f
SCCB_Write16	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Write16(uint8_t slv_addr, uint16_t reg, uint8_t data)$/;"	f
SCCB_Write16	./libraries/esp32-camera/sccb.c	/^int SCCB_Write16(uint8_t slv_addr, uint16_t reg, uint8_t data)$/;"	f
SCCB_Write_Addr16_Val16	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^int SCCB_Write_Addr16_Val16(uint8_t slv_addr, uint16_t reg, uint16_t data)$/;"	f
SCCB_Write_Addr16_Val16	./libraries/esp32-camera/sccb.c	/^int SCCB_Write_Addr16_Val16(uint8_t slv_addr, uint16_t reg, uint16_t data)$/;"	f
SCK_MODE	./libraries/SdFat/src/DigitalIO/SoftSPI.h	42;"	d
SCR	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^typedef struct SCR {$/;"	s
SC_PLLS_CTRL0	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	168;"	d
SC_PLLS_CTRL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	168;"	d
SC_PLLS_CTRL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	21;"	d
SC_PLLS_CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	169;"	d
SC_PLLS_CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	169;"	d
SC_PLLS_CTRL1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	22;"	d
SC_PLLS_CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	170;"	d
SC_PLLS_CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	170;"	d
SC_PLLS_CTRL2	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	23;"	d
SC_PLLS_CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	172;"	d
SC_PLLS_CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	172;"	d
SC_PLLS_CTRL3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	25;"	d
SD	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  SdFat SD;$/;"	m	class:Adafruit_TestBed_Brains
SDCARD_MISO_PIN	./libraries/SdFat/src/SdFatConfig.h	416;"	d
SDCARD_MOSI_PIN	./libraries/SdFat/src/SdFatConfig.h	417;"	d
SDCARD_SCK_PIN	./libraries/SdFat/src/SdFatConfig.h	418;"	d
SDCARD_SPI	./libraries/SdFat/src/SdFatConfig.h	415;"	d
SDCARD_SS_PIN	./libraries/SdFat/src/SdFatConfig.h	419;"	d
SDE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	312;"	d
SDE_CONT_BRIGHT_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	317;"	d
SDE_GRAYSCALE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	314;"	d
SDE_HUE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	319;"	d
SDE_NEGATIVE_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	313;"	d
SDE_SATURATION_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	318;"	d
SDE_U_FIXED_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	316;"	d
SDE_V_FIXED_EN	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	315;"	d
SDFAT_FILE_TYPE	./libraries/SdFat/src/SdFatConfig.h	39;"	d
SDFAT_FILE_TYPE	./libraries/SdFat/src/SdFatConfig.h	93;"	d
SDFAT_FILE_TYPE	./libraries/SdFat/src/SdFatConfig.h	96;"	d
SDHC_AC12ERR	./libraries/SdFat/src/SdCard/SdioTeensy.h	246;"	d
SDHC_AC12ERR_AC12CE	./libraries/SdFat/src/SdCard/SdioTeensy.h	155;"	d
SDHC_AC12ERR_AC12EBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	156;"	d
SDHC_AC12ERR_AC12IE	./libraries/SdFat/src/SdCard/SdioTeensy.h	154;"	d
SDHC_AC12ERR_AC12NE	./libraries/SdFat/src/SdCard/SdioTeensy.h	158;"	d
SDHC_AC12ERR_AC12TOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	157;"	d
SDHC_AC12ERR_CNIBAC12E	./libraries/SdFat/src/SdCard/SdioTeensy.h	153;"	d
SDHC_AC12ERR_EXEC_TUNING	./libraries/SdFat/src/SdCard/SdioTeensy.h	152;"	d
SDHC_AC12ERR_SMPLCLK_SEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	151;"	d
SDHC_ADMAES	./libraries/SdFat/src/SdCard/SdioTeensy.h	251;"	d
SDHC_ADMAES_ADMADCE	./libraries/SdFat/src/SdCard/SdioTeensy.h	210;"	d
SDHC_ADMAES_ADMAES_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	212;"	d
SDHC_ADMAES_ADMALME	./libraries/SdFat/src/SdCard/SdioTeensy.h	211;"	d
SDHC_ADSADDR	./libraries/SdFat/src/SdCard/SdioTeensy.h	252;"	d
SDHC_BLKATTR	./libraries/SdFat/src/SdCard/SdioTeensy.h	232;"	d
SDHC_BLKATTR_BLKCNT	./libraries/SdFat/src/SdCard/SdioTeensy.h	14;"	d
SDHC_BLKATTR_BLKCNT_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	13;"	d
SDHC_BLKATTR_BLKSIZE	./libraries/SdFat/src/SdCard/SdioTeensy.h	12;"	d
SDHC_BLKATTR_BLKSIZE_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	11;"	d
SDHC_CMDARG	./libraries/SdFat/src/SdCard/SdioTeensy.h	233;"	d
SDHC_CMDRSP0	./libraries/SdFat/src/SdCard/SdioTeensy.h	235;"	d
SDHC_CMDRSP1	./libraries/SdFat/src/SdCard/SdioTeensy.h	236;"	d
SDHC_CMDRSP2	./libraries/SdFat/src/SdCard/SdioTeensy.h	237;"	d
SDHC_CMDRSP3	./libraries/SdFat/src/SdCard/SdioTeensy.h	238;"	d
SDHC_DATPORT	./libraries/SdFat/src/SdCard/SdioTeensy.h	239;"	d
SDHC_DSADDR	./libraries/SdFat/src/SdCard/SdioTeensy.h	231;"	d
SDHC_FEVT	./libraries/SdFat/src/SdCard/SdioTeensy.h	250;"	d
SDHC_FEVT_AC12CE	./libraries/SdFat/src/SdCard/SdioTeensy.h	206;"	d
SDHC_FEVT_AC12E	./libraries/SdFat/src/SdCard/SdioTeensy.h	195;"	d
SDHC_FEVT_AC12EBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	205;"	d
SDHC_FEVT_AC12IE	./libraries/SdFat/src/SdCard/SdioTeensy.h	204;"	d
SDHC_FEVT_AC12NE	./libraries/SdFat/src/SdCard/SdioTeensy.h	208;"	d
SDHC_FEVT_AC12TOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	207;"	d
SDHC_FEVT_CCE	./libraries/SdFat/src/SdCard/SdioTeensy.h	201;"	d
SDHC_FEVT_CEBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	200;"	d
SDHC_FEVT_CIE	./libraries/SdFat/src/SdCard/SdioTeensy.h	199;"	d
SDHC_FEVT_CINT	./libraries/SdFat/src/SdCard/SdioTeensy.h	193;"	d
SDHC_FEVT_CNIBAC12E	./libraries/SdFat/src/SdCard/SdioTeensy.h	203;"	d
SDHC_FEVT_CTOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	202;"	d
SDHC_FEVT_DCE	./libraries/SdFat/src/SdCard/SdioTeensy.h	197;"	d
SDHC_FEVT_DEBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	196;"	d
SDHC_FEVT_DMAE	./libraries/SdFat/src/SdCard/SdioTeensy.h	194;"	d
SDHC_FEVT_DTOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	198;"	d
SDHC_HTCAPBLT	./libraries/SdFat/src/SdCard/SdioTeensy.h	247;"	d
SDHC_HTCAPBLT_ADMAS	./libraries/SdFat/src/SdCard/SdioTeensy.h	166;"	d
SDHC_HTCAPBLT_DMAS	./libraries/SdFat/src/SdCard/SdioTeensy.h	164;"	d
SDHC_HTCAPBLT_HSS	./libraries/SdFat/src/SdCard/SdioTeensy.h	165;"	d
SDHC_HTCAPBLT_MBL_VAL	./libraries/SdFat/src/SdCard/SdioTeensy.h	167;"	d
SDHC_HTCAPBLT_RETUN_MODE	./libraries/SdFat/src/SdCard/SdioTeensy.h	168;"	d
SDHC_HTCAPBLT_SRS	./libraries/SdFat/src/SdCard/SdioTeensy.h	163;"	d
SDHC_HTCAPBLT_TIME_RETUN	./libraries/SdFat/src/SdCard/SdioTeensy.h	170;"	d
SDHC_HTCAPBLT_TUNE_SDR50	./libraries/SdFat/src/SdCard/SdioTeensy.h	169;"	d
SDHC_HTCAPBLT_VS18	./libraries/SdFat/src/SdCard/SdioTeensy.h	160;"	d
SDHC_HTCAPBLT_VS30	./libraries/SdFat/src/SdCard/SdioTeensy.h	161;"	d
SDHC_HTCAPBLT_VS33	./libraries/SdFat/src/SdCard/SdioTeensy.h	162;"	d
SDHC_IRQSIGEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	245;"	d
SDHC_IRQSIGEN_AC12EIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	131;"	d
SDHC_IRQSIGEN_BGEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	147;"	d
SDHC_IRQSIGEN_BRRIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	144;"	d
SDHC_IRQSIGEN_BWRIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	145;"	d
SDHC_IRQSIGEN_CCEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	137;"	d
SDHC_IRQSIGEN_CCIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	149;"	d
SDHC_IRQSIGEN_CEBEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	136;"	d
SDHC_IRQSIGEN_CIEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	135;"	d
SDHC_IRQSIGEN_CINSIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	143;"	d
SDHC_IRQSIGEN_CINTIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	141;"	d
SDHC_IRQSIGEN_CRMIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	142;"	d
SDHC_IRQSIGEN_CTOEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	138;"	d
SDHC_IRQSIGEN_DCEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	133;"	d
SDHC_IRQSIGEN_DEBEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	132;"	d
SDHC_IRQSIGEN_DINTIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	146;"	d
SDHC_IRQSIGEN_DMAEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	129;"	d
SDHC_IRQSIGEN_DTOEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	134;"	d
SDHC_IRQSIGEN_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_IRQSIGEN_MASK =$/;"	v
SDHC_IRQSIGEN_RTEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	140;"	d
SDHC_IRQSIGEN_TCIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	148;"	d
SDHC_IRQSIGEN_TNEIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	130;"	d
SDHC_IRQSIGEN_TPIEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	139;"	d
SDHC_IRQSTAT	./libraries/SdFat/src/SdCard/SdioTeensy.h	243;"	d
SDHC_IRQSTATEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	244;"	d
SDHC_IRQSTATEN_AC12ESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	109;"	d
SDHC_IRQSTATEN_BGESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	125;"	d
SDHC_IRQSTATEN_BRRSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	122;"	d
SDHC_IRQSTATEN_BWRSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	123;"	d
SDHC_IRQSTATEN_CCESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	115;"	d
SDHC_IRQSTATEN_CCSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	127;"	d
SDHC_IRQSTATEN_CEBESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	114;"	d
SDHC_IRQSTATEN_CIESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	113;"	d
SDHC_IRQSTATEN_CINSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	121;"	d
SDHC_IRQSTATEN_CINTSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	119;"	d
SDHC_IRQSTATEN_CRMSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	120;"	d
SDHC_IRQSTATEN_CTOESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	116;"	d
SDHC_IRQSTATEN_DCESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	111;"	d
SDHC_IRQSTATEN_DEBESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	110;"	d
SDHC_IRQSTATEN_DINTSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	124;"	d
SDHC_IRQSTATEN_DMAESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	107;"	d
SDHC_IRQSTATEN_DTOESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	112;"	d
SDHC_IRQSTATEN_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_IRQSTATEN_MASK =$/;"	v
SDHC_IRQSTATEN_RTESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	118;"	d
SDHC_IRQSTATEN_TCSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	126;"	d
SDHC_IRQSTATEN_TNESEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	108;"	d
SDHC_IRQSTATEN_TPSEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	117;"	d
SDHC_IRQSTAT_AC12E	./libraries/SdFat/src/SdCard/SdioTeensy.h	87;"	d
SDHC_IRQSTAT_BGE	./libraries/SdFat/src/SdCard/SdioTeensy.h	103;"	d
SDHC_IRQSTAT_BRR	./libraries/SdFat/src/SdCard/SdioTeensy.h	100;"	d
SDHC_IRQSTAT_BWR	./libraries/SdFat/src/SdCard/SdioTeensy.h	101;"	d
SDHC_IRQSTAT_CC	./libraries/SdFat/src/SdCard/SdioTeensy.h	105;"	d
SDHC_IRQSTAT_CCE	./libraries/SdFat/src/SdCard/SdioTeensy.h	93;"	d
SDHC_IRQSTAT_CEBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	92;"	d
SDHC_IRQSTAT_CIE	./libraries/SdFat/src/SdCard/SdioTeensy.h	91;"	d
SDHC_IRQSTAT_CINS	./libraries/SdFat/src/SdCard/SdioTeensy.h	99;"	d
SDHC_IRQSTAT_CINT	./libraries/SdFat/src/SdCard/SdioTeensy.h	97;"	d
SDHC_IRQSTAT_CMD_ERROR	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_IRQSTAT_CMD_ERROR =$/;"	v
SDHC_IRQSTAT_CRM	./libraries/SdFat/src/SdCard/SdioTeensy.h	98;"	d
SDHC_IRQSTAT_CTOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	94;"	d
SDHC_IRQSTAT_DATA_ERROR	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_IRQSTAT_DATA_ERROR =$/;"	v
SDHC_IRQSTAT_DCE	./libraries/SdFat/src/SdCard/SdioTeensy.h	89;"	d
SDHC_IRQSTAT_DEBE	./libraries/SdFat/src/SdCard/SdioTeensy.h	88;"	d
SDHC_IRQSTAT_DINT	./libraries/SdFat/src/SdCard/SdioTeensy.h	102;"	d
SDHC_IRQSTAT_DMAE	./libraries/SdFat/src/SdCard/SdioTeensy.h	85;"	d
SDHC_IRQSTAT_DTOE	./libraries/SdFat/src/SdCard/SdioTeensy.h	90;"	d
SDHC_IRQSTAT_ERROR	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_IRQSTAT_ERROR =$/;"	v
SDHC_IRQSTAT_RTE	./libraries/SdFat/src/SdCard/SdioTeensy.h	96;"	d
SDHC_IRQSTAT_TC	./libraries/SdFat/src/SdCard/SdioTeensy.h	104;"	d
SDHC_IRQSTAT_TNE	./libraries/SdFat/src/SdCard/SdioTeensy.h	86;"	d
SDHC_IRQSTAT_TP	./libraries/SdFat/src/SdCard/SdioTeensy.h	95;"	d
SDHC_MAX_CLKFS	./libraries/SdFat/src/SdCard/SdioTeensy.h	260;"	d
SDHC_MAX_DVS	./libraries/SdFat/src/SdCard/SdioTeensy.h	259;"	d
SDHC_MIX_CTRL	./libraries/SdFat/src/SdCard/SdioTeensy.h	249;"	d
SDHC_MIX_CTRL_AC12EN	./libraries/SdFat/src/SdCard/SdioTeensy.h	186;"	d
SDHC_MIX_CTRL_AC23EN	./libraries/SdFat/src/SdCard/SdioTeensy.h	191;"	d
SDHC_MIX_CTRL_BCEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	185;"	d
SDHC_MIX_CTRL_DDR_EN	./libraries/SdFat/src/SdCard/SdioTeensy.h	187;"	d
SDHC_MIX_CTRL_DMAEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	184;"	d
SDHC_MIX_CTRL_DTDSEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	188;"	d
SDHC_MIX_CTRL_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^const uint32_t SDHC_MIX_CTRL_MASK = SDHC_MIX_CTRL_DMAEN | SDHC_MIX_CTRL_BCEN |$/;"	v
SDHC_MIX_CTRL_MSBSEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	189;"	d
SDHC_MIX_CTRL_NIBBLE_POS	./libraries/SdFat/src/SdCard/SdioTeensy.h	190;"	d
SDHC_MMCBOOT	./libraries/SdFat/src/SdCard/SdioTeensy.h	254;"	d
SDHC_MMCBOOT_AUTOSABGEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	215;"	d
SDHC_MMCBOOT_BOOTACK	./libraries/SdFat/src/SdCard/SdioTeensy.h	218;"	d
SDHC_MMCBOOT_BOOTBLKCNT	./libraries/SdFat/src/SdCard/SdioTeensy.h	214;"	d
SDHC_MMCBOOT_BOOTEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	216;"	d
SDHC_MMCBOOT_BOOTMODE	./libraries/SdFat/src/SdCard/SdioTeensy.h	217;"	d
SDHC_MMCBOOT_DTOCVACK	./libraries/SdFat/src/SdCard/SdioTeensy.h	219;"	d
SDHC_PREV_CLKFS	./libraries/SdFat/src/SdCard/SdioTeensy.h	262;"	d
SDHC_PREV_DVS	./libraries/SdFat/src/SdCard/SdioTeensy.h	261;"	d
SDHC_PROCTL	./libraries/SdFat/src/SdCard/SdioTeensy.h	241;"	d
SDHC_PROCTL_CDSS	./libraries/SdFat/src/SdCard/SdioTeensy.h	59;"	d
SDHC_PROCTL_CDTL	./libraries/SdFat/src/SdCard/SdioTeensy.h	60;"	d
SDHC_PROCTL_CREQ	./libraries/SdFat/src/SdCard/SdioTeensy.h	56;"	d
SDHC_PROCTL_D3CD	./libraries/SdFat/src/SdCard/SdioTeensy.h	63;"	d
SDHC_PROCTL_DMAS	./libraries/SdFat/src/SdCard/SdioTeensy.h	58;"	d
SDHC_PROCTL_DTW	./libraries/SdFat/src/SdCard/SdioTeensy.h	64;"	d
SDHC_PROCTL_DTW_4BIT	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	33;"	d	file:
SDHC_PROCTL_DTW_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	65;"	d
SDHC_PROCTL_EMODE	./libraries/SdFat/src/SdCard/SdioTeensy.h	61;"	d
SDHC_PROCTL_EMODE_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	62;"	d
SDHC_PROCTL_IABG	./libraries/SdFat/src/SdCard/SdioTeensy.h	54;"	d
SDHC_PROCTL_LCTL	./libraries/SdFat/src/SdCard/SdioTeensy.h	66;"	d
SDHC_PROCTL_RD_DONE_NOBLK	./libraries/SdFat/src/SdCard/SdioTeensy.h	53;"	d
SDHC_PROCTL_RWCTL	./libraries/SdFat/src/SdCard/SdioTeensy.h	55;"	d
SDHC_PROCTL_SABGREQ	./libraries/SdFat/src/SdCard/SdioTeensy.h	57;"	d
SDHC_PROCTL_WECINS	./libraries/SdFat/src/SdCard/SdioTeensy.h	51;"	d
SDHC_PROCTL_WECINT	./libraries/SdFat/src/SdCard/SdioTeensy.h	52;"	d
SDHC_PROCTL_WECRM	./libraries/SdFat/src/SdCard/SdioTeensy.h	50;"	d
SDHC_PROTCT_BURST_LENEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	49;"	d
SDHC_PROTCT_NONEXACT_BLKRD	./libraries/SdFat/src/SdCard/SdioTeensy.h	48;"	d
SDHC_PRSSTAT	./libraries/SdFat/src/SdCard/SdioTeensy.h	240;"	d
SDHC_PRSSTAT_BREN	./libraries/SdFat/src/SdCard/SdioTeensy.h	35;"	d
SDHC_PRSSTAT_BWEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	36;"	d
SDHC_PRSSTAT_CDIHB	./libraries/SdFat/src/SdCard/SdioTeensy.h	45;"	d
SDHC_PRSSTAT_CDPL	./libraries/SdFat/src/SdCard/SdioTeensy.h	31;"	d
SDHC_PRSSTAT_CIHB	./libraries/SdFat/src/SdCard/SdioTeensy.h	46;"	d
SDHC_PRSSTAT_CINS	./libraries/SdFat/src/SdCard/SdioTeensy.h	32;"	d
SDHC_PRSSTAT_CLSL	./libraries/SdFat/src/SdCard/SdioTeensy.h	29;"	d
SDHC_PRSSTAT_DLA	./libraries/SdFat/src/SdCard/SdioTeensy.h	44;"	d
SDHC_PRSSTAT_DLSL_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	28;"	d
SDHC_PRSSTAT_HCKOFF	./libraries/SdFat/src/SdCard/SdioTeensy.h	41;"	d
SDHC_PRSSTAT_IPGOFF	./libraries/SdFat/src/SdCard/SdioTeensy.h	42;"	d
SDHC_PRSSTAT_PEROFF	./libraries/SdFat/src/SdCard/SdioTeensy.h	40;"	d
SDHC_PRSSTAT_RTA	./libraries/SdFat/src/SdCard/SdioTeensy.h	37;"	d
SDHC_PRSSTAT_RTR	./libraries/SdFat/src/SdCard/SdioTeensy.h	34;"	d
SDHC_PRSSTAT_SDOFF	./libraries/SdFat/src/SdCard/SdioTeensy.h	39;"	d
SDHC_PRSSTAT_SDSTB	./libraries/SdFat/src/SdCard/SdioTeensy.h	43;"	d
SDHC_PRSSTAT_TSCD	./libraries/SdFat/src/SdCard/SdioTeensy.h	33;"	d
SDHC_PRSSTAT_WPSPL	./libraries/SdFat/src/SdCard/SdioTeensy.h	30;"	d
SDHC_PRSSTAT_WTA	./libraries/SdFat/src/SdCard/SdioTeensy.h	38;"	d
SDHC_SYSCTL	./libraries/SdFat/src/SdCard/SdioTeensy.h	242;"	d
SDHC_SYSCTL_DTOCV	./libraries/SdFat/src/SdCard/SdioTeensy.h	73;"	d
SDHC_SYSCTL_DTOCV_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	74;"	d
SDHC_SYSCTL_DVS	./libraries/SdFat/src/SdCard/SdioTeensy.h	77;"	d
SDHC_SYSCTL_DVS_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	78;"	d
SDHC_SYSCTL_HCKEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	82;"	d
SDHC_SYSCTL_INITA	./libraries/SdFat/src/SdCard/SdioTeensy.h	69;"	d
SDHC_SYSCTL_IPGEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	83;"	d
SDHC_SYSCTL_PEREN	./libraries/SdFat/src/SdCard/SdioTeensy.h	81;"	d
SDHC_SYSCTL_RSTA	./libraries/SdFat/src/SdCard/SdioTeensy.h	72;"	d
SDHC_SYSCTL_RSTC	./libraries/SdFat/src/SdCard/SdioTeensy.h	71;"	d
SDHC_SYSCTL_RSTD	./libraries/SdFat/src/SdCard/SdioTeensy.h	70;"	d
SDHC_SYSCTL_RSTT	./libraries/SdFat/src/SdCard/SdioTeensy.h	68;"	d
SDHC_SYSCTL_SDCLKEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	80;"	d
SDHC_SYSCTL_SDCLKFS	./libraries/SdFat/src/SdCard/SdioTeensy.h	75;"	d
SDHC_SYSCTL_SDCLKFS_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	76;"	d
SDHC_VENDOR	./libraries/SdFat/src/SdCard/SdioTeensy.h	253;"	d
SDHC_VENDOR2	./libraries/SdFat/src/SdCard/SdioTeensy.h	255;"	d
SDHC_WML	./libraries/SdFat/src/SdCard/SdioTeensy.h	248;"	d
SDHC_WML_RDWML	./libraries/SdFat/src/SdCard/SdioTeensy.h	181;"	d
SDHC_WML_RD_BRSTLEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	177;"	d
SDHC_WML_RD_BRSTLEN_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	173;"	d
SDHC_WML_RD_WML	./libraries/SdFat/src/SdCard/SdioTeensy.h	179;"	d
SDHC_WML_RD_WML_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	175;"	d
SDHC_WML_WRWML	./libraries/SdFat/src/SdCard/SdioTeensy.h	180;"	d
SDHC_WML_WR_BRSTLEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	176;"	d
SDHC_WML_WR_BRSTLEN_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	172;"	d
SDHC_WML_WR_WML	./libraries/SdFat/src/SdCard/SdioTeensy.h	178;"	d
SDHC_WML_WR_WML_MASK	./libraries/SdFat/src/SdCard/SdioTeensy.h	174;"	d
SDHC_XFERTYP	./libraries/SdFat/src/SdCard/SdioTeensy.h	234;"	d
SDHC_XFERTYP_AC12EN	./libraries/SdFat/src/SdCard/SdioTeensy.h	24;"	d
SDHC_XFERTYP_BCEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	25;"	d
SDHC_XFERTYP_CCCEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	20;"	d
SDHC_XFERTYP_CICEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	19;"	d
SDHC_XFERTYP_CMDINX	./libraries/SdFat/src/SdCard/SdioTeensy.h	16;"	d
SDHC_XFERTYP_CMDTYP	./libraries/SdFat/src/SdCard/SdioTeensy.h	17;"	d
SDHC_XFERTYP_DMAEN	./libraries/SdFat/src/SdCard/SdioTeensy.h	26;"	d
SDHC_XFERTYP_DPSEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	18;"	d
SDHC_XFERTYP_DTDSEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	23;"	d
SDHC_XFERTYP_MSBSEL	./libraries/SdFat/src/SdCard/SdioTeensy.h	22;"	d
SDHC_XFERTYP_RSPTYP	./libraries/SdFat/src/SdCard/SdioTeensy.h	21;"	d
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	27;"	d	file:
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	28;"	d	file:
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	37;"	d	file:
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	38;"	d	file:
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	94;"	d
SD_CARD_ERROR	./libraries/SdFat/src/SdCard/SdCardInfo.h	96;"	d
SD_CARD_ERROR_UNKNOWN	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  SD_CARD_ERROR_UNKNOWN$/;"	e	enum:__anon3
SD_CARD_TYPE_SD1	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t SD_CARD_TYPE_SD1  = 1;$/;"	v
SD_CARD_TYPE_SD2	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t SD_CARD_TYPE_SD2  = 2;$/;"	v
SD_CARD_TYPE_SDHC	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t SD_CARD_TYPE_SDHC = 3;$/;"	v
SD_CHIP_SELECT_MODE	./libraries/SdFat/src/SdFatConfig.h	196;"	d
SD_CMD0_RETRY	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t SD_CMD0_RETRY = 10;$/;"	v
SD_CMD_TIMEOUT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint16_t SD_CMD_TIMEOUT = 300;$/;"	v
SD_CONFIG	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  SdSpiConfig SD_CONFIG = SdSpiConfig(17, SHARED_SPI, SD_SCK_MHZ(16));$/;"	m	class:Adafruit_TestBed_Brains
SD_ERASE_TIMEOUT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint16_t SD_ERASE_TIMEOUT = 10000;$/;"	v
SD_ERROR_CODE_LIST	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  SD_ERROR_CODE_LIST$/;"	e	enum:__anon3
SD_ERROR_CODE_LIST	./libraries/SdFat/src/SdCard/SdCardInfo.h	46;"	d
SD_FAT_VERSION	./libraries/SdFat/src/SdFat.h	41;"	d
SD_FAT_VERSION_STR	./libraries/SdFat/src/SdFat.h	43;"	d
SD_HAS_CUSTOM_SPI	./libraries/SdFat/src/SdFatConfig.h	439;"	d
SD_HAS_CUSTOM_SPI	./libraries/SdFat/src/SdFatConfig.h	442;"	d
SD_INIT_TIMEOUT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint16_t SD_INIT_TIMEOUT = 2000;$/;"	v
SD_MAX_INIT_RATE_KHZ	./libraries/SdFat/src/SdFatConfig.h	155;"	d
SD_READ_TIMEOUT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint16_t SD_READ_TIMEOUT = 300;$/;"	v
SD_SCK_HZ	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	65;"	d
SD_SCK_MHZ	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	67;"	d
SD_SPI_DMA_TransferComplete_Callback	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^static void SD_SPI_DMA_TransferComplete_Callback() {$/;"	f	file:
SD_USE_CUSTOM_SPI	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	33;"	d
SD_WRITE_TIMEOUT	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint16_t SD_WRITE_TIMEOUT = 600;$/;"	v
SD_begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::SD_begin(uint32_t max_clock) {$/;"	f	class:Adafruit_TestBed_Brains
SD_detected	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::SD_detected(void) {$/;"	f	class:Adafruit_TestBed_Brains
SECTORS_PER_MB	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^const uint16_t SECTORS_PER_MB = 0X100000\/BYTES_PER_SECTOR;$/;"	v
SECTOR_MASK	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint16_t SECTOR_MASK = BYTES_PER_SECTOR - 1;$/;"	v
SEEK_CUR	./libraries/SdFat/src/iostream/StdioStream.h	96;"	d
SEEK_END	./libraries/SdFat/src/iostream/StdioStream.h	100;"	d
SEEK_SET	./libraries/SdFat/src/iostream/StdioStream.h	104;"	d
SENSOR_ID_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_regs.h	7;"	d
SENSOR_ID_HIGH	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	7;"	d
SENSOR_ID_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_regs.h	8;"	d
SENSOR_ID_LOW	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	8;"	d
SET_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	352;"	d
SET_REG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	334;"	d
SET_REG_BITS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	99;"	d	file:
SET_REG_BITS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	106;"	d	file:
SET_REG_BITS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	98;"	d	file:
SET_REG_BITS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	106;"	d	file:
SFN_OPEN_USES_CHKSUM	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	30;"	d	file:
SHARED_SPI	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^const uint8_t SHARED_SPI = 0;$/;"	v
SHORT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef short			SHORT;$/;"	t
SHORT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef short			SHORT;$/;"	t
SIGN_BIT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	325;"	d
SIOC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	28;"	d	file:
SIOC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	49;"	d	file:
SIOC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	74;"	d	file:
SIOC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	96;"	d	file:
SIOD_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	27;"	d	file:
SIOD_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	48;"	d	file:
SIOD_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	73;"	d	file:
SIOD_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	95;"	d	file:
SIZEL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	28;"	d
SLOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	255;"	d
SLOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	285;"	d
SM_0A00_0B00	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^    SM_0A00_0B00 = 3,$/;"	e	enum:__anon10	file:
SM_0A0B_0B0C	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^    SM_0A0B_0B0C = 0,$/;"	e	enum:__anon10	file:
SM_0A0B_0C0D	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^    SM_0A0B_0C0D = 1,$/;"	e	enum:__anon10	file:
SOC_GDMA_PAIRS_PER_GROUP	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	39;"	d	file:
SPIClass	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef uint8_t SPIClass;$/;"	t
SPIClass	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t SPIClass;$/;"	t
SPI_ASSERT_ACTIVE	./libraries/SdFat/src/SdCard/SdSpiCard.h	40;"	d
SPI_ASSERT_ACTIVE	./libraries/SdFat/src/SdCard/SdSpiCard.h	45;"	d
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = SPI_LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	45;"	d
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = SPI_LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	45;"	d
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = SPI_MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	44;"	d
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = SPI_MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	44;"	d
SPI_CHIP_SEL	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	34;"	d	file:
SPI_DIV3_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	72;"	d
SPI_DIV6_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	76;"	d
SPI_DMAC_RX_CH	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	36;"	d	file:
SPI_DMAC_TX_CH	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	38;"	d	file:
SPI_DMA_TransferCompleted	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^static volatile bool SPI_DMA_TransferCompleted = false;$/;"	v	file:
SPI_DRIVER_SELECT	./libraries/SdFat/src/SdFatConfig.h	140;"	d
SPI_EIGHTH_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	80;"	d
SPI_FULL_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	70;"	d
SPI_HALF_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	74;"	d
SPI_MODE0	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon1
SPI_MODE0	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon4
SPI_MODE1	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon1
SPI_MODE1	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon4
SPI_MODE2	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon1
SPI_MODE2	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon4
SPI_QUARTER_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	78;"	d
SPI_RX_IDX	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	42;"	d	file:
SPI_SIXTEENTH_SPEED	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	82;"	d
SPI_TX_IDX	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	40;"	d	file:
SS_CTRL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	38;"	d
SS_ID	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	37;"	d
STOP_TRAN_TOKEN	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t STOP_TRAN_TOKEN = 0XFD;$/;"	v
STREAM_BUF_SIZE	./libraries/SdFat/src/iostream/StdioStream.h	/^const uint8_t STREAM_BUF_SIZE = 64;$/;"	v
STR_B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	322;"	d
STR_G	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	321;"	d
STR_OPT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	319;"	d
STR_R	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	320;"	d
SUPPORT_JPEG	./libraries/esp32-camera-2.0.8/target/tjpgd.c	23;"	d	file:
SYNC_OUTPUT	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	10;"	d
SYSTEM_CTROL0	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	8;"	d
SYSTEM_CTROL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	8;"	d
SYSTEM_CTROL0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	8;"	d
S_EOF	./libraries/SdFat/src/iostream/StdioStream.h	/^  static const uint8_t S_EOF = 0x10;  \/\/ found EOF$/;"	m	class:StdioStream
S_ERR	./libraries/SdFat/src/iostream/StdioStream.h	/^  static const uint8_t S_ERR = 0x20;  \/\/ found error$/;"	m	class:StdioStream
S_SRD	./libraries/SdFat/src/iostream/StdioStream.h	/^  static const uint8_t S_SRD = 0x01;  \/\/ OK to read$/;"	m	class:StdioStream
S_SRW	./libraries/SdFat/src/iostream/StdioStream.h	/^  static const uint8_t S_SRW = 0x04;  \/\/ open for reading & writing$/;"	m	class:StdioStream
S_SWR	./libraries/SdFat/src/iostream/StdioStream.h	/^  static const uint8_t S_SWR = 0x02;  \/\/ OK to write$/;"	m	class:StdioStream
SdBase	./libraries/SdFat/src/SdFat.h	/^class SdBase : public Vol {$/;"	c
SdBaseFile	./libraries/SdFat/src/SdFat.h	/^typedef ExFatFile SdBaseFile;$/;"	t
SdBaseFile	./libraries/SdFat/src/SdFat.h	/^typedef FatFile SdBaseFile;$/;"	t
SdBaseFile	./libraries/SdFat/src/SdFat.h	/^typedef FsBaseFile SdBaseFile;$/;"	t
SdCard	./libraries/SdFat/src/SdCard/SdCard.h	/^typedef SdCardInterface SdCard;$/;"	t
SdCard	./libraries/SdFat/src/SdCard/SdCard.h	/^typedef SdSpiCard SdCard;$/;"	t
SdCardFactory	./libraries/SdFat/src/SdCard/SdCard.h	/^class SdCardFactory {$/;"	c
SdCardInfo_h	./libraries/SdFat/src/SdCard/SdCardInfo.h	26;"	d
SdCardInterface	./libraries/SdFat/src/SdCard/SdCardInterface.h	/^class SdCardInterface : public FsBlockDeviceInterface {$/;"	c
SdCardInterface_h	./libraries/SdFat/src/SdCard/SdCardInterface.h	26;"	d
SdCard_h	./libraries/SdFat/src/SdCard/SdCard.h	26;"	d
SdCsPin_t	./libraries/SdFat/src/SdFatConfig.h	/^typedef uint8_t SdCsPin_t;$/;"	t
SdExFat	./libraries/SdFat/src/SdFat.h	/^class SdExFat : public SdBase<ExFatVolume, ExFatFormatter> {$/;"	c
SdFat	./libraries/SdFat/src/SdFat.h	/^typedef SdExFat SdFat;$/;"	t
SdFat	./libraries/SdFat/src/SdFat.h	/^typedef SdFat32 SdFat;$/;"	t
SdFat	./libraries/SdFat/src/SdFat.h	/^typedef SdFs SdFat;$/;"	t
SdFat32	./libraries/SdFat/src/SdFat.h	/^class SdFat32 : public SdBase<FatVolume, FatFormatter> {$/;"	c
SdFatConfig_h	./libraries/SdFat/src/SdFatConfig.h	30;"	d
SdFatEX	./libraries/SdFat/src/SdFatConfig.h	51;"	d
SdFat_h	./libraries/SdFat/src/SdFat.h	26;"	d
SdFile	./libraries/SdFat/src/SdFat.h	/^  SdFile() {}$/;"	f	class:SdFile
SdFile	./libraries/SdFat/src/SdFat.h	/^  SdFile(const char* path, oflag_t oflag) {$/;"	f	class:SdFile
SdFile	./libraries/SdFat/src/SdFat.h	/^class SdFile : public PrintFile<SdBaseFile> {$/;"	c
SdFs	./libraries/SdFat/src/SdFat.h	/^class SdFs : public SdBase<FsVolume, FsFormatter> {$/;"	c
SdSpiArduinoDriver	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	/^class SdSpiArduinoDriver {$/;"	c
SdSpiArduinoDriver_h	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	30;"	d
SdSpiAvr_h	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	26;"	d
SdSpiBareUnoDriver_h	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	26;"	d
SdSpiBaseClass	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	/^class SdSpiBaseClass {$/;"	c
SdSpiBaseClass_h	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	30;"	d
SdSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^typedef DedicatedSpiCard SdSpiCard;$/;"	t
SdSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^typedef SharedSpiCard SdSpiCard;$/;"	t
SdSpiCard_h	./libraries/SdFat/src/SdCard/SdSpiCard.h	30;"	d
SdSpiConfig	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  SdSpiConfig(SdCsPin_t cs, uint8_t opt) : csPin(cs), options(opt) {}$/;"	f	class:SdSpiConfig
SdSpiConfig	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  SdSpiConfig(SdCsPin_t cs, uint8_t opt, uint32_t maxSpeed) :$/;"	f	class:SdSpiConfig
SdSpiConfig	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  SdSpiConfig(SdCsPin_t cs, uint8_t opt, uint32_t maxSpeed, SpiPort_t* port) :$/;"	f	class:SdSpiConfig
SdSpiConfig	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  explicit SdSpiConfig(SdCsPin_t cs) : csPin(cs) {}$/;"	f	class:SdSpiConfig
SdSpiConfig	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^class SdSpiConfig {$/;"	c
SdSpiDriver	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	/^typedef SdSpiArduinoDriver SdSpiDriver;$/;"	t
SdSpiDriver	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^typedef SdSpiBaseClass SdSpiDriver;$/;"	t
SdSpiDriver	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^typedef SdSpiSoftDriver SdSpiDriver;$/;"	t
SdSpiDriverBareUno	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^class SdSpiDriverBareUno {$/;"	c
SdSpiDriver_h	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	30;"	d
SdSpiLibDriver_h	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	30;"	d
SdSpiSoftDriver	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^class SdSpiSoftDriver {$/;"	c
SdSpiSoftDriver_h	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	30;"	d
SdStatus	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^typedef struct SdStatus {$/;"	s
SdStatus_t	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^} SdStatus_t;$/;"	t	typeref:struct:SdStatus
SdioCard	./libraries/SdFat/src/SdCard/SdioCard.h	/^class SdioCard : public SdCardInterface {$/;"	c
SdioCard_h	./libraries/SdFat/src/SdCard/SdioCard.h	26;"	d
SdioConfig	./libraries/SdFat/src/SdCard/SdioCard.h	/^  SdioConfig() {}$/;"	f	class:SdioConfig
SdioConfig	./libraries/SdFat/src/SdCard/SdioCard.h	/^  explicit SdioConfig(uint8_t opt) : m_options(opt) {}$/;"	f	class:SdioConfig
SdioConfig	./libraries/SdFat/src/SdCard/SdioCard.h	/^class SdioConfig {$/;"	c
SdioTeensy_h	./libraries/SdFat/src/SdCard/SdioTeensy.h	2;"	d
Servo	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^class Servo {$/;"	c
Setup Python	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: Setup Python$/;"	k
SharedSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  SharedSpiCard() {}$/;"	f	class:SharedSpiCard
SharedSpiCard	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^class SharedSpiCard : public SdCardInterface {$/;"	c
SleepingBeautyGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/SleepingBeautyGpioPinMap.h	2;"	d
SoftSPI	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^class SoftSPI {$/;"	c
SoftSPI_h	./libraries/SdFat/src/DigitalIO/SoftSPI.h	29;"	d
SoftSpiDriver	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^class SoftSpiDriver : public SdSpiSoftDriver {$/;"	c
SpiPort_t	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^typedef SPIClass SpiPort_t;$/;"	t
SpiPort_t	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^typedef SdSpiBaseClass SpiPort_t;$/;"	t
SpiPort_t	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^typedef SdSpiSoftDriver SpiPort_t;$/;"	t
SpiPort_t	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^typedef void*  SpiPort_t;$/;"	t
Standard1284GpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/Standard1284GpioPinMap.h	2;"	d
StdioStream	./libraries/SdFat/src/iostream/StdioStream.h	/^  StdioStream() {}$/;"	f	class:StdioStream
StdioStream	./libraries/SdFat/src/iostream/StdioStream.h	/^class StdioStream : private StreamBaseFile {$/;"	c
StdioStream_h	./libraries/SdFat/src/iostream/StdioStream.h	26;"	d
StreamBaseClass	./libraries/SdFat/src/iostream/fstream.h	/^class StreamBaseClass : protected StreamBaseFile, virtual public ios {$/;"	c
StreamBaseFile	./libraries/SdFat/src/iostream/ios.h	/^typedef ExFatFile StreamBaseFile;$/;"	t
StreamBaseFile	./libraries/SdFat/src/iostream/ios.h	/^typedef FatFile StreamBaseFile;$/;"	t
StreamBaseFile	./libraries/SdFat/src/iostream/ios.h	/^typedef FsBaseFile StreamBaseFile;$/;"	t
StreamBasic	./libraries/SdFat/extras/attic/PrintBasic.h	/^class StreamBasic : public PrintBasic {$/;"	c
StreamBasic	./libraries/SdFat/src/common/PrintBasic.h	/^class StreamBasic : public PrintBasic {$/;"	c
StreamFile	./libraries/SdFat/src/common/ArduinoFiles.h	/^  StreamFile() {}$/;"	f	class:StreamFile
StreamFile	./libraries/SdFat/src/common/ArduinoFiles.h	/^class StreamFile : public stream_t, public BaseFile {$/;"	c
SysCall_h	./libraries/SdFat/src/common/SysCall.h	30;"	d
TABLE_MEM	./libraries/SdFat/src/common/upcase.cpp	/^static const map16_t mapTable[] TABLE_MEM = {$/;"	v	file:
TABLE_MEM	./libraries/SdFat/src/common/upcase.cpp	/^static const pair16_t lookupTable[] TABLE_MEM = {$/;"	v	file:
TABLE_MEM	./libraries/SdFat/src/common/upcase.cpp	29;"	d	file:
TABLE_MEM	./libraries/SdFat/src/common/upcase.cpp	33;"	d	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^static const char* TAG = "esp_jpg_decode";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	35;"	d	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static const char* TAG = "to_bmp";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	27;"	d	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^static const char* TAG = "to_jpg";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	26;"	d	file:
TAG	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static const char *TAG = "cam_hal";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static const char *TAG = "camera";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	75;"	d	file:
TAG	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^static const char* TAG = "sccb";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	/^static const char *TAG = "example:take_picture";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static const char *TAG = "bf20a6";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static const char* TAG = "bf3005";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static const char *TAG = "gc0308";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static const char *TAG = "gc032a";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static const char *TAG = "gc2145";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static const char *TAG = "NT99141";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static const char* TAG = "ov2640";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static const char *TAG = "ov3660";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static const char *TAG = "ov5640";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static const char* TAG = "ov7760";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static const char* TAG = "ov7725";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static const char* TAG = "sc030";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static const char* TAG = "sc031gs";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static const char* TAG = "sc101";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static const char *TAG = "esp32 ll_cam";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^static const char *TAG = "s2 ll_cam";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static const char *TAG = "s3 ll_cam";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/target/xclk.c	/^static const char* TAG = "camera_xclk";$/;"	v	file:
TAG	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static const char *TAG = "test camera";$/;"	v	file:
TAG	./libraries/esp32-camera/cam_hal.c	/^static const char *TAG = "cam_hal";$/;"	v	file:
TAG	./libraries/esp32-camera/esp_camera.c	/^static const char *TAG = "camera";$/;"	v	file:
TAG	./libraries/esp32-camera/esp_camera.c	75;"	d	file:
TAG	./libraries/esp32-camera/sccb.c	/^static const char* TAG = "sccb";$/;"	v	file:
TB	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^Adafruit_TestBed TB;$/;"	v
TEAL	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	15;"	d
TEST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	20;"	d
TEST_COLOR_BAR	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	203;"	d
TEST_COLOR_BAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	203;"	d
TEST_COLOR_BAR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	205;"	d
TGT_B	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	177;"	d
TGT_GB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	179;"	d
TGT_GR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	180;"	d
TGT_R	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	178;"	d
THL_DLT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	327;"	d
THL_ST	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	326;"	d
TIMING_TC_REG20	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	73;"	d
TIMING_TC_REG20	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	73;"	d
TIMING_TC_REG20	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	85;"	d
TIMING_TC_REG20_VFLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	208;"	d
TIMING_TC_REG20_VFLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	208;"	d
TIMING_TC_REG20_VFLIP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	210;"	d
TIMING_TC_REG21	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	78;"	d
TIMING_TC_REG21	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	78;"	d
TIMING_TC_REG21	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	90;"	d
TIMING_TC_REG21_HMIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	209;"	d
TIMING_TC_REG21_HMIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	209;"	d
TIMING_TC_REG21_HMIRROR	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	211;"	d
TSLB	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	162;"	d
T_ACCESS	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t T_ACCESS = 1;$/;"	v
T_CREATE	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t T_CREATE = 2;$/;"	v
T_WRITE	./libraries/SdFat/src/common/FsApiConstants.h	/^const uint8_t T_WRITE = 4;$/;"	v
Teensy2GpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/Teensy2GpioPinMap.h	2;"	d
Teensypp2GpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/Teensy2ppGpioPinMap.h	2;"	d
Timeout	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  Timeout() {}$/;"	f	class:Timeout
Timeout	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  explicit Timeout(uint16_t ms) {set(ms);}$/;"	f	class:Timeout
Timeout	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^class Timeout {$/;"	c	file:
UART_CLKDIV_MASK	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  UART_CLKDIV_MASK = 0xFFFFF,$/;"	e	enum:__anon5	file:
UART_DATE_REG_ADDR	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  UART_DATE_REG_ADDR = 0x60000078,$/;"	e	enum:__anon5	file:
UCHAR	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned char	UCHAR;$/;"	t
UCHAR	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned char	UCHAR;$/;"	t
UFIX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	203;"	d
UINT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned int	UINT;$/;"	t
UINT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned int	UINT;$/;"	t
ULONG	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned long	ULONG;$/;"	t
ULONG	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned long	ULONG;$/;"	t
UNGETC_BUF_SIZE	./libraries/SdFat/src/iostream/StdioStream.h	/^const uint8_t UNGETC_BUF_SIZE = 2;$/;"	v
UNO_MISO	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	84;"	d
UNO_MOSI	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	83;"	d
UNO_SCK	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	85;"	d
UNO_SS	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	82;"	d
UPCASE_CLUSTER	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^const uint32_t UPCASE_CLUSTER = 3;$/;"	v
USABLE_ESP32_PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	21;"	d
USAT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	321;"	d
USBHOST_RHPORT	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	35;"	d	file:
USBH_BlockDev	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  Adafruit_USBH_MSC_BlockDevice USBH_BlockDev;$/;"	m	class:Adafruit_TestBed_Brains
USBH_FS	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  FatVolume USBH_FS;$/;"	m	class:Adafruit_TestBed_Brains
USBHost	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  Adafruit_USBH_Host USBHost;$/;"	m	class:Adafruit_TestBed_Brains
USB_JTAG_SERIAL_PID	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^  USB_JTAG_SERIAL_PID = 0x1001$/;"	e	enum:__anon5	file:
USE_BLOCK_DEVICE_INTERFACE	./libraries/SdFat/src/SdFatConfig.h	180;"	d
USE_BLOCK_DEVICE_INTERFACE	./libraries/SdFat/src/SdFatConfig.h	37;"	d
USE_BLOCK_TRANSFER	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	27;"	d	file:
USE_DBG_MACROS	./libraries/SdFat/src/common/DebugMacros.h	30;"	d
USE_DEBUG_MODE	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	217;"	d	file:
USE_EXFAT_BITMAP_CACHE	./libraries/SdFat/src/SdFatConfig.h	391;"	d
USE_EXFAT_BITMAP_CACHE	./libraries/SdFat/src/SdFatConfig.h	393;"	d
USE_FAT_FILE_FLAG_CONTIGUOUS	./libraries/SdFat/src/SdFatConfig.h	105;"	d
USE_FCNTL_H	./libraries/SdFat/src/SdFatConfig.h	303;"	d
USE_FCNTL_H	./libraries/SdFat/src/SdFatConfig.h	306;"	d
USE_FCNTL_H	./libraries/SdFat/src/SdFatConfig.h	309;"	d
USE_FCNTL_H	./libraries/SdFat/src/SdFatConfig.h	311;"	d
USE_FCNTL_H	./libraries/SdFat/src/SdFatConfig.h	313;"	d
USE_FMT_BASE10	./libraries/SdFat/src/common/FmtNumber.cpp	27;"	d	file:
USE_LBA_TO_CHS	./libraries/SdFat/src/FatLib/FatFormatter.cpp	27;"	d	file:
USE_LONG_FILE_NAMES	./libraries/SdFat/src/SdFatConfig.h	222;"	d
USE_MULTI_SECTOR_IO	./libraries/SdFat/src/SdFatConfig.h	402;"	d
USE_MULTI_SECTOR_IO	./libraries/SdFat/src/SdFatConfig.h	404;"	d
USE_SAM3X_BUS_MATRIX_FIX	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	30;"	d	file:
USE_SAM3X_DMAC	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	28;"	d	file:
USE_SD_CRC	./libraries/SdFat/src/SdFatConfig.h	293;"	d
USE_SEPARATE_FAT_CACHE	./libraries/SdFat/src/SdFatConfig.h	380;"	d
USE_SEPARATE_FAT_CACHE	./libraries/SdFat/src/SdFatConfig.h	382;"	d
USE_SHARED_SPI	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	5;"	d
USE_SIMPLE_LITTLE_ENDIAN	./libraries/SdFat/src/SdFatConfig.h	369;"	d
USE_SIMPLE_LITTLE_ENDIAN	./libraries/SdFat/src/SdFatConfig.h	371;"	d
USE_SPI_ARRAY_TRANSFER	./libraries/SdFat/src/SdFatConfig.h	149;"	d
USE_SPI_ARRAY_TRANSFER	./libraries/SdFat/src/SdFatConfig.h	40;"	d
USE_STIMMER	./libraries/SdFat/src/common/FmtNumber.cpp	32;"	d	file:
USE_STM32_DMA	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	30;"	d	file:
USE_STM32_DMA	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	32;"	d	file:
USE_UTF8_LONG_NAMES	./libraries/SdFat/src/SdFatConfig.h	237;"	d
USE_UTF8_LONG_NAMES	./libraries/SdFat/src/SdFatConfig.h	44;"	d
USHORT	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned short	USHORT;$/;"	t
USHORT	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned short	USHORT;$/;"	t
UVADJ0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	304;"	d
UVADJ1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	305;"	d
UnoGpioPinMap_h	./libraries/SdFat/src/DigitalIO/boards/UnoGpioPinMap.h	2;"	d
UnusedStack	./libraries/SdFat/src/FreeStack.cpp	/^int UnusedStack() {$/;"	f
UnusedStack	./libraries/SdFat/src/FreeStack.h	/^inline int UnusedStack() {return 0;}$/;"	f
UserTypes_h	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	2;"	d
UserTypes_h	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	2;"	d
UserTypes_h	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	2;"	d
VER	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t VER;$/;"	m	struct:__anon14
VER	./libraries/esp32-camera/include/sensor.h	/^    uint8_t VER;$/;"	m	struct:__anon15
VERIFY	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	48;"	d	file:
VFIFO_CTRL0C	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	159;"	d
VFIFO_CTRL0C	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	159;"	d
VFIFO_CTRL0C	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	177;"	d
VFIFO_X_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	163;"	d
VFIFO_X_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	163;"	d
VFIFO_X_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	181;"	d
VFIFO_X_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	164;"	d
VFIFO_X_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	164;"	d
VFIFO_X_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	182;"	d
VFIFO_Y_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	165;"	d
VFIFO_Y_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	165;"	d
VFIFO_Y_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	183;"	d
VFIFO_Y_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	166;"	d
VFIFO_Y_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	166;"	d
VFIFO_Y_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	184;"	d
VFIX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	204;"	d
VHYX	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	18;"	d
VOUTSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	149;"	d
VPT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	142;"	d
VPT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	144;"	d
VREF	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	12;"	d
VSAT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	322;"	d
VSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	15;"	d
VSIZE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	130;"	d
VSIZE8	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	30;"	d
VSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	121;"	d
VSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	122;"	d
VSTART	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	129;"	d
VSTOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	122;"	d
VSTOP	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	123;"	d
VSYNC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	38;"	d	file:
VSYNC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	59;"	d	file:
VSYNC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	68;"	d	file:
VSYNC_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	90;"	d	file:
VV	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	127;"	d
VV_AGC_TH_SET	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	205;"	d
WCHAR	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned short	WCHAR;$/;"	t
WCHAR	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned short	WCHAR;$/;"	t
WHITE	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	17;"	d
WORD	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^typedef unsigned short	WORD;$/;"	t
WORD	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^typedef unsigned short	WORD;$/;"	t
WRITE_BIT	./libraries/esp32-camera-2.0.8/driver/sccb.c	34;"	d	file:
WRITE_BIT	./libraries/esp32-camera/sccb.c	34;"	d	file:
WRITE_ERROR	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  static const uint8_t WRITE_ERROR = 0X1;$/;"	m	class:ExFatFile
WRITE_ERROR	./libraries/SdFat/src/FatLib/FatFile.h	/^  static const uint8_t WRITE_ERROR = 0X1;$/;"	m	class:FatFile
WRITE_MULTIPLE_TOKEN	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^const uint8_t WRITE_MULTIPLE_TOKEN = 0XFC;$/;"	v
WRITE_REGS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	97;"	d	file:
WRITE_REGS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	104;"	d	file:
WRITE_REGS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	96;"	d	file:
WRITE_REGS_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	104;"	d	file:
WRITE_REG_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	98;"	d	file:
WRITE_REG_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	105;"	d	file:
WRITE_REG_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	97;"	d	file:
WRITE_REG_OR_RETURN	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	105;"	d	file:
WRITE_STATE	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  static const uint8_t WRITE_STATE = 2;$/;"	m	class:SharedSpiCard
WRITE_STATE	./libraries/SdFat/src/SdCard/SdioCard.h	/^  static const uint8_t WRITE_STATE = 2;$/;"	m	class:SdioCard
WS2811_T0H_NS	./libraries/Adafruit_NeoPixel/esp.c	82;"	d	file:
WS2811_T0L_NS	./libraries/Adafruit_NeoPixel/esp.c	83;"	d	file:
WS2811_T1H_NS	./libraries/Adafruit_NeoPixel/esp.c	84;"	d	file:
WS2811_T1L_NS	./libraries/Adafruit_NeoPixel/esp.c	85;"	d	file:
WS2812_T0H_NS	./libraries/Adafruit_NeoPixel/esp.c	77;"	d	file:
WS2812_T0L_NS	./libraries/Adafruit_NeoPixel/esp.c	78;"	d	file:
WS2812_T1H_NS	./libraries/Adafruit_NeoPixel/esp.c	79;"	d	file:
WS2812_T1L_NS	./libraries/Adafruit_NeoPixel/esp.c	80;"	d	file:
Wheel	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^uint32_t Adafruit_TestBed::Wheel(byte WheelPos) {$/;"	f	class:Adafruit_TestBed
WiFiAccessPoint_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const esp32_zipfile_t WiFiAccessPoint_ino = {$/;"	v
WiFiAccessPoint_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const esp32_zipfile_t WiFiAccessPoint_ino_bootloader = {$/;"	v
WiFiAccessPoint_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const esp32_zipfile_t WiFiAccessPoint_ino_partitions = {$/;"	v
XCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	26;"	d	file:
XCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	47;"	d	file:
XCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	71;"	d	file:
XCLK_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	93;"	d	file:
XOFFL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	16;"	d
X_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	106;"	d
X_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	106;"	d
X_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	59;"	d
X_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	107;"	d
X_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	107;"	d
X_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	60;"	d
X_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	102;"	d
X_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	102;"	d
X_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	55;"	d
X_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	103;"	d
X_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	103;"	d
X_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	56;"	d
X_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	123;"	d
X_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	123;"	d
X_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	76;"	d
X_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	119;"	d
X_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	119;"	d
X_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	72;"	d
X_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	120;"	d
X_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	120;"	d
X_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	73;"	d
X_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	111;"	d
X_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	111;"	d
X_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	64;"	d
X_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	112;"	d
X_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	112;"	d
X_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	65;"	d
X_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	115;"	d
X_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	115;"	d
X_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	68;"	d
X_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	116;"	d
X_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	116;"	d
X_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	69;"	d
Y2_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	105;"	d	file:
Y2_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	37;"	d	file:
Y2_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	58;"	d	file:
Y2_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	83;"	d	file:
Y3_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	104;"	d	file:
Y3_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	36;"	d	file:
Y3_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	57;"	d	file:
Y3_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	82;"	d	file:
Y4_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	103;"	d	file:
Y4_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	35;"	d	file:
Y4_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	56;"	d	file:
Y4_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	81;"	d	file:
Y5_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	102;"	d	file:
Y5_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	34;"	d	file:
Y5_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	55;"	d	file:
Y5_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	80;"	d	file:
Y6_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	101;"	d	file:
Y6_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	33;"	d	file:
Y6_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	54;"	d	file:
Y6_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	79;"	d	file:
Y7_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	100;"	d	file:
Y7_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	32;"	d	file:
Y7_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	53;"	d	file:
Y7_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	78;"	d	file:
Y8_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	31;"	d	file:
Y8_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	52;"	d	file:
Y8_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	77;"	d	file:
Y8_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	99;"	d	file:
Y9_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	30;"	d	file:
Y9_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	51;"	d	file:
Y9_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	76;"	d	file:
Y9_GPIO_NUM	./libraries/esp32-camera-2.0.8/test/test_camera.c	98;"	d	file:
YAVE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	151;"	d
YAVE	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	152;"	d
YAVG	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	132;"	d
YB	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
YELLOW	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	12;"	d
YG	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
YOFFL	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	17;"	d
YR	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    const int YR = 19595, YG = 38470, YB = 7471, CB_R = -11059, CB_G = -21709, CB_B = 32768, CR_R = 32768, CR_G = -27439, CR_B = -5329;$/;"	m	namespace:jpge	file:
YUV422_TO_RGB565	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    YUV422_TO_RGB565,$/;"	e	enum:__anon18
YUV422_TO_RGB565	./libraries/esp32-camera/include/esp_camera.h	/^    YUV422_TO_RGB565,$/;"	e	enum:__anon19
YUV422_TO_YUV420	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    YUV422_TO_YUV420$/;"	e	enum:__anon18
YUV422_TO_YUV420	./libraries/esp32-camera/include/esp_camera.h	/^    YUV422_TO_YUV420$/;"	e	enum:__anon19
YUYV_CONSTRAIN	./libraries/esp32-camera-2.0.8/conversions/yuv.c	285;"	d	file:
Y_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	108;"	d
Y_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	108;"	d
Y_ADDR_END_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	61;"	d
Y_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	109;"	d
Y_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	109;"	d
Y_ADDR_END_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	62;"	d
Y_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	104;"	d
Y_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	104;"	d
Y_ADDR_ST_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	57;"	d
Y_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	105;"	d
Y_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	105;"	d
Y_ADDR_ST_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	58;"	d
Y_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	125;"	d
Y_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	125;"	d
Y_INCREMENT	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	78;"	d
Y_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	121;"	d
Y_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	121;"	d
Y_OFFSET_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	74;"	d
Y_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	122;"	d
Y_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	122;"	d
Y_OFFSET_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	75;"	d
Y_ONLY	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    enum subsampling_t { Y_ONLY = 0, H1V1 = 1, H2V1 = 2, H2V2 = 3 };$/;"	e	enum:jpge::subsampling_t
Y_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	113;"	d
Y_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	113;"	d
Y_OUTPUT_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	66;"	d
Y_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	114;"	d
Y_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	114;"	d
Y_OUTPUT_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	67;"	d
Y_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	117;"	d
Y_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	117;"	d
Y_TOTAL_SIZE_H	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	70;"	d
Y_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	118;"	d
Y_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	118;"	d
Y_TOTAL_SIZE_L	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	71;"	d
Y_to_YCC	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static void Y_to_YCC(uint8* pDst, const uint8* pSrc, int num_pixels) {$/;"	f	namespace:jpge
ZIG	./libraries/esp32-camera-2.0.8/target/tjpgd.c	30;"	d	file:
ZMHH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	23;"	d
ZMOH	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	22;"	d
ZMOW	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	21;"	d
ZOOMS	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	141;"	d
Zig	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^const BYTE Zig[64] = {	\/* Zigzag-order to raster-order conversion table *\/$/;"	v	file:
_ADAFRUIT_I2C_REGISTER_H_	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CRegister.h	2;"	d
_ADAFRUIT_I2C_REGISTER_H_	./libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	2;"	d
_ADAFRUIT_PWMServoDriver_H	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	24;"	d
_ADAFRUIT_PWMServoDriver_H	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	24;"	d
_Adafruit_BusIO_SPIRegType	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^typedef enum _Adafruit_BusIO_SPIRegType {$/;"	g
_Adafruit_BusIO_SPIRegType	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^typedef enum _Adafruit_BusIO_SPIRegType {$/;"	g
_BLE_SERIAL_H_	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	2;"	d
_BLE_SERIAL_H_	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	2;"	d
_BitOrder	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^typedef enum _BitOrder {$/;"	g
_BitOrder	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef enum _BitOrder {$/;"	g
_Blink_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_bootloader_gz[10149] = {$/;"	v
_Blink_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_bootloader_gz[10148] = {$/;"	v
_Blink_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_bootloader_gz[10149] = {$/;"	v
_Blink_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_bootloader_gz[10148] = {$/;"	v
_Blink_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_gz[121182] = {$/;"	v
_Blink_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_gz[135964] = {$/;"	v
_Blink_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp8266_blinky.h	/^const uint8_t _Blink_ino_gz[195757] = {$/;"	v
_Blink_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_gz[121182] = {$/;"	v
_Blink_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_gz[135964] = {$/;"	v
_Blink_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_partitions_gz[146] = {$/;"	v
_Blink_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_partitions_gz[146] = {$/;"	v
_Blink_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _Blink_ino_partitions_gz[146] = {$/;"	v
_Blink_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _Blink_ino_partitions_gz[146] = {$/;"	v
_CONVERSIONS_YUV_H_	./libraries/esp32-camera-2.0.8/conversions/private_include/yuv.h	15;"	d
_ESP_JPG_DECODE_H_	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	15;"	d
_GC0308_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/gc0308_settings.h	2;"	d
_GC032A_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_settings.h	2;"	d
_IMG_CONVERTERS_H_	./libraries/esp32-camera-2.0.8/conversions/include/img_converters.h	15;"	d
_LCD_PRINTF	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	600;"	d	file:
_NINA_W102_1_7_4_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/nina_1_7_4_binaries.h	/^const uint8_t _NINA_W102_1_7_4_gz[633594] = {$/;"	v
_NT99141_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	2;"	d
_NeoPixelGammaTable	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^static const uint8_t PROGMEM _NeoPixelGammaTable[256] = {$/;"	v
_NeoPixelSineTable	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^static const uint8_t PROGMEM _NeoPixelSineTable[256] = {$/;"	v
_OV2640_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	15;"	d
_OV3660_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	2;"	d
_OV5640_SETTINGS_H_	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	2;"	d
_SPI_MODE4	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon1
_SPI_MODE4	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon4
_TJPGDEC	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	5;"	d
_TJPGDEC	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	5;"	d
_WiFiAccessPoint_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const uint8_t _WiFiAccessPoint_ino_bootloader_gz[13017] = {$/;"	v
_WiFiAccessPoint_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const uint8_t _WiFiAccessPoint_ino_gz[470388] = {$/;"	v
_WiFiAccessPoint_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const uint8_t _WiFiAccessPoint_ino_partitions_gz[146] = {$/;"	v
__BF20A6_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6.h	3;"	d
__BF20A6_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_regs.h	5;"	d
__BF3005_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/bf3005.h	10;"	d
__GC0308_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/gc0308_regs.h	5;"	d
__GC032A_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a.h	7;"	d
__GC032A_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_regs.h	5;"	d
__GC2145_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145.h	3;"	d
__GC2145_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_regs.h	5;"	d
__NT99141_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141.h	10;"	d
__NT99141_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_regs.h	5;"	d
__OV2640_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640.h	10;"	d
__OV3660_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660.h	10;"	d
__OV3660_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_regs.h	5;"	d
__OV5640_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640.h	3;"	d
__OV5640_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_regs.h	5;"	d
__OV7670_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670.h	10;"	d
__OV7670_REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7670_regs.h	8;"	d
__OV7725_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725.h	10;"	d
__REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/bf3005_regs.h	9;"	d
__REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	9;"	d
__REG_REGS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/ov7725_regs.h	9;"	d
__SC030GS_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs.h	7;"	d
__SC030IOT_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/sc030iot.h	7;"	d
__SC101IOT_H__	./libraries/esp32-camera-2.0.8/sensors/private_include/sc101iot.h	7;"	d
__SCCB_H__	./libraries/esp32-camera-2.0.8/driver/private_include/sccb.h	10;"	d
__SCCB_H__	./libraries/esp32-camera/private_include/sccb.h	10;"	d
__SENSOR_H__	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	10;"	d
__SENSOR_H__	./libraries/esp32-camera/include/sensor.h	10;"	d
_addr	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^  uint8_t _addr;$/;"	m	class:Adafruit_I2CDevice
_addr	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  uint8_t _addr;$/;"	m	class:Adafruit_I2CDevice
_address	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint16_t _address;$/;"	m	class:Adafruit_BusIO_Register
_address	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint16_t _address;$/;"	m	class:Adafruit_BusIO_Register
_addrwidth	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_addrwidth	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_begun	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_I2CDevice
_begun	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_SPIDevice
_begun	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_I2CDevice
_begun	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_SPIDevice
_bits	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits
_bits	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_boot_app0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const uint8_t _boot_app0_gz[47] = {$/;"	v
_buffer	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _buffer[4]; \/\/ we won't support anything larger than uint32 for$/;"	m	class:Adafruit_BusIO_Register
_buffer	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _buffer[4]; \/\/ we won't support anything larger than uint32 for$/;"	m	class:Adafruit_BusIO_Register
_byteorder	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_byteorder	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_cached	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint32_t _cached = 0;$/;"	m	class:Adafruit_BusIO_Register
_cached	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint32_t _cached = 0;$/;"	m	class:Adafruit_BusIO_Register
_chip_detect	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t _chip_detect;$/;"	m	class:ESP32BootROMClass
_cs	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_cs	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_dataMode	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  uint8_t _dataMode;$/;"	m	class:Adafruit_SPIDevice
_dataMode	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint8_t _dataMode;$/;"	m	class:Adafruit_SPIDevice
_dataOrder	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIOBitOrder _dataOrder;$/;"	m	class:Adafruit_SPIDevice
_dataOrder	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIOBitOrder _dataOrder;$/;"	m	class:Adafruit_SPIDevice
_esp32_chip_detect	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  uint32_t _esp32_chip_detect;$/;"	m	class:Adafruit_TestBed
_esp32_flash_defl	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  bool _esp32_flash_defl;$/;"	m	class:Adafruit_TestBed
_esp32_programFlashDefl_impl	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^Adafruit_TestBed::_esp32_programFlashDefl_impl(const esp32_zipfile_t *zfile,$/;"	f	class:Adafruit_TestBed
_esp32s2_feather_test_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_bootloader_gz[13894] = {$/;"	v
_esp32s2_feather_test_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_bootloader_gz[13894] = {$/;"	v
_esp32s2_feather_test_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_gz[164598] = {$/;"	v
_esp32s2_feather_test_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_gz[164598] = {$/;"	v
_esp32s2_feather_test_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_partitions_gz[136] = {$/;"	v
_esp32s2_feather_test_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _esp32s2_feather_test_ino_partitions_gz[136] = {$/;"	v
_esp32s3_feather_test_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_bootloader_gz[14339] = {$/;"	v
_esp32s3_feather_test_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_bootloader_gz[14339] = {$/;"	v
_esp32s3_feather_test_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_gz[156987] = {$/;"	v
_esp32s3_feather_test_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_gz[156987] = {$/;"	v
_esp32s3_feather_test_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_partitions_gz[136] = {$/;"	v
_esp32s3_feather_test_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _esp32s3_feather_test_ino_partitions_gz[136] = {$/;"	v
_esp32s3_in_reset	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  bool _esp32s3_in_reset;$/;"	m	class:Adafruit_TestBed
_esp8266_blink_io0_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp8266_binaries.h	/^const uint8_t _esp8266_blink_io0_gz[195724] = {$/;"	v
_feather_esp32v2_blinky_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const uint8_t _feather_esp32v2_blinky_bootloader_gz[12167] = {$/;"	v
_feather_esp32v2_blinky_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const uint8_t _feather_esp32v2_blinky_gz[152100] = {$/;"	v
_feather_esp32v2_blinky_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const uint8_t _feather_esp32v2_blinky_partitions_gz[146] = {$/;"	v
_flashSequenceNumber	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t _flashSequenceNumber;$/;"	m	class:ESP32BootROMClass
_flushed	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    unsigned long _flushed;$/;"	m	class:BLESerial
_flushed	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    unsigned long _flushed;$/;"	m	class:BLESerial
_freq	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  uint32_t _freq;$/;"	m	class:Adafruit_SPIDevice
_freq	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint32_t _freq;$/;"	m	class:Adafruit_SPIDevice
_getCycleCount	./libraries/Adafruit_NeoPixel/esp8266.c	/^static inline uint32_t _getCycleCount(void) {$/;"	f	file:
_gpio0Pin	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  int _gpio0Pin;$/;"	m	class:ESP32BootROMClass
_i2c	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	/^  TwoWire *_i2c;$/;"	m	class:Adafruit_PWMServoDriver
_i2c	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	/^  TwoWire *_i2c;$/;"	m	class:Adafruit_PWMServoDriver
_i2caddr	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	/^  uint8_t _i2caddr;$/;"	m	class:Adafruit_PWMServoDriver
_i2caddr	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	/^  uint8_t _i2caddr;$/;"	m	class:Adafruit_PWMServoDriver
_i2cdevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  Adafruit_I2CDevice *_i2cdevice;$/;"	m	class:Adafruit_BusIO_Register
_i2cdevice	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_I2CDevice *_i2cdevice;$/;"	m	class:Adafruit_BusIO_Register
_inited	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  bool _inited;$/;"	m	class:Adafruit_TestBed_Brains
_instance	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^BLESerial* BLESerial::_instance = NULL;$/;"	m	class:BLESerial	file:
_instance	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    static BLESerial* _instance;$/;"	m	class:BLESerial
_instance	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^BLESerial* BLESerial::_instance = NULL;$/;"	m	class:BLESerial	file:
_instance	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    static BLESerial* _instance;$/;"	m	class:BLESerial
_jpg_read	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^static unsigned int _jpg_read(JDEC *decoder, uint8_t *buf, unsigned int len)$/;"	f	file:
_jpg_read	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static unsigned int _jpg_read(void * arg, size_t index, uint8_t *buf, size_t len)$/;"	f	file:
_jpg_write	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^static unsigned int _jpg_write(JDEC *decoder, void *bitmap, JRECT *rect)$/;"	f	file:
_lcd_line	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  uint8_t _lcd_line;$/;"	m	class:Adafruit_TestBed_Brains
_ledcSetupTimerFreq	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::_ledcSetupTimerFreq(uint8_t chan, double freq,$/;"	f	class:ESP32PWM
_malloc	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static void *_malloc(size_t size)$/;"	f	file:
_malloc	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^static void *_malloc(size_t size)$/;"	f	file:
_maxBufferSize	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^  size_t _maxBufferSize;$/;"	m	class:Adafruit_I2CDevice
_maxBufferSize	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t _maxBufferSize;$/;"	m	class:Adafruit_I2CDevice
_miso	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_miso	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_mosi	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_mosi	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_oscillator_freq	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	/^  uint32_t _oscillator_freq;$/;"	m	class:Adafruit_PWMServoDriver
_oscillator_freq	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	/^  uint32_t _oscillator_freq;$/;"	m	class:Adafruit_PWMServoDriver
_read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::_read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice
_read	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::_read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice
_received	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::_received(BLECentral& \/*central*\/, BLECharacteristic& rxCharacteristic) {$/;"	f	class:BLESerial
_received	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::_received(const uint8_t* data, size_t size) {$/;"	f	class:BLESerial
_received	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::_received(BLECentral& \/*central*\/, BLECharacteristic& rxCharacteristic) {$/;"	f	class:BLESerial
_received	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::_received(const uint8_t* data, size_t size) {$/;"	f	class:BLESerial
_register	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_Register *_register;$/;"	m	class:Adafruit_BusIO_RegisterBits
_register	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_Register *_register;$/;"	m	class:Adafruit_BusIO_RegisterBits
_resetnPin	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  int _resetnPin;$/;"	m	class:ESP32BootROMClass
_rgb565_write	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static bool _rgb565_write(void * arg, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t *data)$/;"	f	file:
_rgb_write	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static bool _rgb_write(void * arg, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t *data)$/;"	f	file:
_rom_8266_running	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  bool _rom_8266_running;$/;"	m	class:ESP32BootROMClass
_rxBuffer	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    uint8_t _rxBuffer[BLE_ATTRIBUTE_MAX_VALUE_LENGTH];$/;"	m	class:BLESerial
_rxBuffer	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    uint8_t _rxBuffer[BLE_ATTRIBUTE_MAX_VALUE_LENGTH];$/;"	m	class:BLESerial
_rxCharacteristic	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLECharacteristic _rxCharacteristic = BLECharacteristic("6E400002-B5A3-F393-E0A9-E50E24DCCA9E", BLEWriteWithoutResponse, BLE_ATTRIBUTE_MAX_VALUE_LENGTH);$/;"	m	class:BLESerial
_rxCharacteristic	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLECharacteristic _rxCharacteristic = BLECharacteristic("6E400002-B5A3-F393-E0A9-E50E24DCCA9E", BLEWriteWithoutResponse, BLE_ATTRIBUTE_MAX_VALUE_LENGTH);$/;"	m	class:BLESerial
_rxHead	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    size_t _rxHead;$/;"	m	class:BLESerial
_rxHead	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    size_t _rxHead;$/;"	m	class:BLESerial
_rxNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLEDescriptor _rxNameDescriptor = BLEDescriptor("2901", "RX - Receive Data (Write)");$/;"	m	class:BLESerial
_rxNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLEDescriptor _rxNameDescriptor = BLEDescriptor("2901", "RX - Receive Data (Write)");$/;"	m	class:BLESerial
_rxTail	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    size_t _rxTail;$/;"	m	class:BLESerial
_rxTail	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    size_t _rxTail;$/;"	m	class:BLESerial
_sck	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_sck	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice
_sd_cs_pin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _sd_cs_pin;$/;"	m	class:Adafruit_TestBed_Brains
_sd_detect_pin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _sd_detect_pin;$/;"	m	class:Adafruit_TestBed_Brains
_selftest_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_bootloader_gz[13881] = {$/;"	v
_selftest_ino_bootloader_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_bootloader_gz[13881] = {$/;"	v
_selftest_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_gz[169165] = {$/;"	v
_selftest_ino_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_gz[169165] = {$/;"	v
_selftest_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_partitions_gz[136] = {$/;"	v
_selftest_ino_partitions_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _selftest_ino_partitions_gz[136] = {$/;"	v
_sensor	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^typedef struct _sensor {$/;"	s
_sensor	./libraries/esp32-camera/include/sensor.h	/^typedef struct _sensor {$/;"	s
_serial	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  HardwareSerial *_serial;$/;"	m	class:ESP32BootROMClass
_set_pll	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div){return -1;}$/;"	f	file:
_set_pll	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div)$/;"	f	file:
_set_pll	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div)$/;"	f	file:
_set_pll	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div)$/;"	f	file:
_set_pll	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div)$/;"	f	file:
_set_pll	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int _set_pll(sensor_t *sensor, int bypass, int multiplier, int sys_div, int root_2x, int pre_div, int seld5, int pclk_manual, int pclk_div){return -1;}$/;"	f	file:
_shift	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits
_shift	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits
_spi	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPIClass *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spi	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  uint8_t *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spi	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPIClass *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spi	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint8_t *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spiSetting	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  SPISettings *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spiSetting	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  uint8_t *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spiSetting	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPISettings *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spiSetting	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint8_t *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice
_spidevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  Adafruit_SPIDevice *_spidevice;$/;"	m	class:Adafruit_BusIO_Register
_spidevice	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_SPIDevice *_spidevice;$/;"	m	class:Adafruit_BusIO_Register
_spiregtype	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_SPIRegType _spiregtype;$/;"	m	class:Adafruit_BusIO_Register
_spiregtype	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_SPIRegType _spiregtype;$/;"	m	class:Adafruit_BusIO_Register
_stub_esp32_data	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32_data[4] = {$/;"	v
_stub_esp32_text	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32_text[3432] = {$/;"	v
_stub_esp32s2_data	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32s2_data[4] = {$/;"	v
_stub_esp32s2_text	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32s2_text[4136] = {$/;"	v
_stub_esp32s3_data	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32s3_data[4] = {$/;"	v
_stub_esp32s3_text	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp32s3_text[4836] = {$/;"	v
_stub_esp8266_data	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp8266_data[768] = {$/;"	v
_stub_esp8266_text	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const uint8_t _stub_esp8266_text[8240] = {$/;"	v
_stub_running	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  bool _stub_running;$/;"	m	class:ESP32BootROMClass
_supports_encrypted_flash	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  bool _supports_encrypted_flash;$/;"	m	class:ESP32BootROMClass
_target_swdclk	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _target_swdclk;$/;"	m	class:Adafruit_TestBed_Brains
_target_swdio	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _target_swdio;$/;"	m	class:Adafruit_TestBed_Brains
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _tinyuf2_gz[98789] = {$/;"	v
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _tinyuf2_gz[106755] = {$/;"	v
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _tinyuf2_gz[80774] = {$/;"	v
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const uint8_t _tinyuf2_gz[98789] = {$/;"	v
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const uint8_t _tinyuf2_gz[106755] = {$/;"	v
_tinyuf2_gz	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const uint8_t _tinyuf2_gz[80774] = {$/;"	v
_txBuffer	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    uint8_t _txBuffer[BLE_ATTRIBUTE_MAX_VALUE_LENGTH];$/;"	m	class:BLESerial
_txBuffer	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    uint8_t _txBuffer[BLE_ATTRIBUTE_MAX_VALUE_LENGTH];$/;"	m	class:BLESerial
_txCharacteristic	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLECharacteristic _txCharacteristic = BLECharacteristic("6E400003-B5A3-F393-E0A9-E50E24DCCA9E", BLENotify, BLE_ATTRIBUTE_MAX_VALUE_LENGTH);$/;"	m	class:BLESerial
_txCharacteristic	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLECharacteristic _txCharacteristic = BLECharacteristic("6E400003-B5A3-F393-E0A9-E50E24DCCA9E", BLENotify, BLE_ATTRIBUTE_MAX_VALUE_LENGTH);$/;"	m	class:BLESerial
_txCount	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    size_t _txCount;$/;"	m	class:BLESerial
_txCount	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    size_t _txCount;$/;"	m	class:BLESerial
_txNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLEDescriptor _txNameDescriptor = BLEDescriptor("2901", "TX - Transfer Data (Notify)");$/;"	m	class:BLESerial
_txNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLEDescriptor _txNameDescriptor = BLEDescriptor("2901", "TX - Transfer Data (Notify)");$/;"	m	class:BLESerial
_uartNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLEDescriptor _uartNameDescriptor = BLEDescriptor("2901", "UART");$/;"	m	class:BLESerial
_uartNameDescriptor	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLEDescriptor _uartNameDescriptor = BLEDescriptor("2901", "UART");$/;"	m	class:BLESerial
_uartService	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.h	/^    BLEService _uartService = BLEService("6E400001-B5A3-F393-E0A9-E50E24DCCA9E");$/;"	m	class:BLESerial
_uartService	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.h	/^    BLEService _uartService = BLEService("6E400001-B5A3-F393-E0A9-E50E24DCCA9E");$/;"	m	class:BLESerial
_usbh_dp_pin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _usbh_dp_pin;$/;"	m	class:Adafruit_TestBed_Brains
_vbus_en_pin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  int _vbus_en_pin;$/;"	m	class:Adafruit_TestBed_Brains
_width	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_width	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register
_wire	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^  TwoWire *_wire;$/;"	m	class:Adafruit_I2CDevice
_wire	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  TwoWire *_wire;$/;"	m	class:Adafruit_I2CDevice
accel	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	/^  int16_t accel[ACCEL_DIM];$/;"	m	struct:data_t
accessDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  accessDate[2];$/;"	m	struct:__anon4
accessDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  accessDate[2];$/;"	m	struct:__anon9
accessTime	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  accessTime[2];$/;"	m	struct:__anon9
accessTimezone	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  accessTimezone;$/;"	m	struct:__anon9
acquireData	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserFunctions.cpp	/^void acquireData(data_t* data) {$/;"	f
acquireData	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^void acquireData(data_t* data) {$/;"	f
acquireData	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^void acquireData(data_t* data) {$/;"	f
activate	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void activate() {}$/;"	f	class:SdSpiDriverBareUno
activate	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	/^  virtual void activate() {}$/;"	f	class:SdSpiBaseClass
activate	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void activate() {}$/;"	f	class:SdSpiSoftDriver
activate	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::activate() {$/;"	f	class:SdSpiArduinoDriver
adc	./libraries/SdFat/examples/ExFatLogger/ExFatLogger.h	/^  uint16_t adc[ADC_COUNT];$/;"	m	struct:data_t
adc	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	/^  uint16_t adc[ADC_DIM];$/;"	m	struct:data_t
adcFrequency	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint32_t adcFrequency;           \/\/ ADC clock frequency$/;"	m	struct:metadata_t
adcFrequency	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  adcFrequency;     \/\/ ADC clock frequency$/;"	m	struct:metadata_t
adcdata_t	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^struct adcdata_t {$/;"	s
add	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^  void add(const void *d, uint32_t len) {$/;"	f	class:BrainCRC32
addCluster	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::addCluster() {$/;"	f	class:ExFatFile
addCluster	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::addCluster() {$/;"	f	class:FatFile
addDirCluster	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::addDirCluster() {$/;"	f	class:ExFatFile
addDirCluster	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::addDirCluster() {$/;"	f	class:FatFile
addr	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	/^  uint32_t addr;$/;"	m	struct:__anon31
addr	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	/^  uint32_t addr;$/;"	m	struct:__anon33
addr	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^	uint16_t addr;$/;"	m	struct:sc031gs_regval
address	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^uint8_t Adafruit_I2CDevice::address(void) { return _addr; }$/;"	f	class:Adafruit_I2CDevice
address	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^uint8_t Adafruit_I2CDevice::address(void) { return _addr; }$/;"	f	class:Adafruit_I2CDevice
adjustFrequency	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::adjustFrequency(double freq, double dutyScaled) {$/;"	f	class:ESP32PWM
adjustFrequencyLocal	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::adjustFrequencyLocal(double freq, double dutyScaled) {$/;"	f	class:ESP32PWM
adjustfield	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags adjustfield = left | right | internal;$/;"	m	class:ios_base
advance	./libraries/SdFat/src/RingBuf.h	/^  size_t advance(size_t index, size_t n) {$/;"	f	class:RingBuf
ae_level	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int8_t ae_level;\/\/-2 - 2$/;"	m	struct:__anon15
ae_level	./libraries/esp32-camera/include/sensor.h	/^    int8_t ae_level;\/\/-2 - 2$/;"	m	struct:__anon16
ae_levels_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t ae_levels_regs[NUM_AE_LEVELS + 1][3] = {$/;"	v
aec	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t aec;$/;"	m	struct:__anon15
aec	./libraries/esp32-camera/include/sensor.h	/^    uint8_t aec;$/;"	m	struct:__anon16
aec2	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t aec2;$/;"	m	struct:__anon15
aec2	./libraries/esp32-camera/include/sensor.h	/^    uint8_t aec2;$/;"	m	struct:__anon16
aec_value	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint16_t aec_value;\/\/0 - 1200$/;"	m	struct:__anon15
aec_value	./libraries/esp32-camera/include/sensor.h	/^    uint16_t aec_value;\/\/0 - 1200$/;"	m	struct:__anon16
agc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t agc;$/;"	m	struct:__anon15
agc	./libraries/esp32-camera/include/sensor.h	/^    uint8_t agc;$/;"	m	struct:__anon16
agc_gain	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t agc_gain;\/\/0 - 30$/;"	m	struct:__anon15
agc_gain	./libraries/esp32-camera/include/sensor.h	/^    uint8_t agc_gain;\/\/0 - 30$/;"	m	struct:__anon16
agc_gain_tbl	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const uint8_t agc_gain_tbl[31] = {$/;"	v
allocContiguous	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^bool FatPartition::allocContiguous(uint32_t count, uint32_t* firstCluster) {$/;"	f	class:FatPartition
alloc_pool	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^void* alloc_pool (	\/* Pointer to allocated memory block (NULL:no memory available) *\/$/;"	f	file:
allocateCluster	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^bool FatPartition::allocateCluster(uint32_t current, uint32_t* next) {$/;"	f	class:FatPartition
allocateTimer	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::allocateTimer(int timerNumber){$/;"	f	class:ESP32PWM
allocate_dma_descriptors	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static lldesc_t * allocate_dma_descriptors(uint32_t count, uint16_t size, uint8_t * buffer)$/;"	f	file:
allocate_dma_descriptors	./libraries/esp32-camera/cam_hal.c	/^static lldesc_t * allocate_dma_descriptors(uint32_t count, uint16_t size, uint8_t * buffer)$/;"	f	file:
allocatenext	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^int ESP32PWM::allocatenext(double freq) {$/;"	f	class:ESP32PWM
analogBits	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  uint16_t analogBits = 1024; \/\/\/< The default ADC resolution bits$/;"	m	class:Adafruit_TestBed
analogRef	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  float analogRef = 3.3;      \/\/\/< The default analog reference voltage$/;"	m	class:Adafruit_TestBed
app	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode app    = 0X4;$/;"	m	class:ios_base
app_main	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	/^void app_main(void)$/;"	f
arg	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        void * arg;$/;"	m	struct:__anon2	file:
aspect_ratio	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        const aspect_ratio_t aspect_ratio;$/;"	m	struct:__anon13
aspect_ratio	./libraries/esp32-camera/include/sensor.h	/^        const aspect_ratio_t aspect_ratio;$/;"	m	struct:__anon14
aspect_ratio_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} aspect_ratio_t;$/;"	t	typeref:enum:__anon10
aspect_ratio_t	./libraries/esp32-camera/include/sensor.h	/^} aspect_ratio_t;$/;"	t	typeref:enum:__anon11
atEnd	./libraries/SdFat/src/common/FsName.h	/^  bool atEnd() {$/;"	f	class:FsName
atEnd	./libraries/SdFat/src/common/FsName.h	/^  bool atEnd() {return next == end;}$/;"	f	class:FsName
ate	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode ate    = 0X8;$/;"	m	class:ios_base
attach	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::attach(int p) {$/;"	f	class:ESP32PWM
attach	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::attach(int pin)$/;"	f	class:Servo
attach	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::attach(int pin, int min, int max)$/;"	f	class:Servo
attachPin	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::attachPin(uint8_t pin) {$/;"	f	class:ESP32PWM
attachPin	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::attachPin(uint8_t pin, double freq, uint8_t resolution_bits) {$/;"	f	class:ESP32PWM
attached	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	bool attached() {$/;"	f	class:ESP32PWM
attached	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo
attachedState	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	bool attachedState = false;$/;"	m	class:ESP32PWM
attrib	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::attrib(uint8_t bits) {$/;"	f	class:ExFatFile
attrib	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  int attrib() {$/;"	f	class:ExFatFile
attrib	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool attrib(const char* path, uint8_t bits) {$/;"	f	class:ExFatVolume
attrib	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  int attrib(const char* path) {$/;"	f	class:ExFatVolume
attrib	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::attrib(uint8_t bits) {$/;"	f	class:FatFile
attrib	./libraries/SdFat/src/FatLib/FatFile.h	/^  int attrib() {$/;"	f	class:FatFile
attrib	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool attrib(const char* path, uint8_t bits) {$/;"	f	class:FatVolume
attrib	./libraries/SdFat/src/FatLib/FatVolume.h	/^  int attrib(const char* path) {$/;"	f	class:FatVolume
attrib	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool attrib(uint8_t bits) {$/;"	f	class:FsBaseFile
attrib	./libraries/SdFat/src/FsLib/FsFile.h	/^  int attrib() {$/;"	f	class:FsBaseFile
attrib	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool attrib(const char* path, uint8_t bits) {$/;"	f	class:FsVolume
attrib	./libraries/SdFat/src/FsLib/FsVolume.h	/^  int attrib(const char* path) {$/;"	f	class:FsVolume
attributes	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  attributes;$/;"	m	struct:__anon4
attributes	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  attributes;$/;"	m	struct:__anon5
attributes	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  attributes[2];$/;"	m	struct:__anon9
auSize	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t auSize;$/;"	m	struct:SdStatus
available	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^int BLESerial::available(void) {$/;"	f	class:BLESerial
available	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^int BLESerial::available(void) {$/;"	f	class:BLESerial
available	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  int available() {$/;"	f	class:ExFatFile
available	./libraries/SdFat/src/FatLib/FatFile.h	/^  int available() const {$/;"	f	class:FatFile
available	./libraries/SdFat/src/FsLib/FsFile.h	/^  int available() const {$/;"	f	class:FsBaseFile
available	./libraries/SdFat/src/MinimumSerial.cpp	/^int MinimumSerial::available() {$/;"	f	class:MinimumSerial
available	./libraries/SdFat/src/common/ArduinoFiles.h	/^  int available() {$/;"	f	class:StreamFile
available32	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t available32() const {$/;"	f	class:FatFile
available64	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t available64() {$/;"	f	class:ExFatFile
available64	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint64_t available64() const {$/;"	f	class:FsBaseFile
awb	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t awb;$/;"	m	struct:__anon15
awb	./libraries/esp32-camera/include/sensor.h	/^    uint8_t awb;$/;"	m	struct:__anon16
awb_gain	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t awb_gain;$/;"	m	struct:__anon15
awb_gain	./libraries/esp32-camera/include/sensor.h	/^    uint8_t awb_gain;$/;"	m	struct:__anon16
ax	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t ax;$/;"	m	struct:data_t
ay	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t ay;$/;"	m	struct:data_t
az	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t az;$/;"	m	struct:data_t
bOffset	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t bOffset;    \/\/\/< Index of blue byte$/;"	m	class:Adafruit_NeoPixel
bad	./libraries/SdFat/src/iostream/ios.h	/^  bool bad() const {$/;"	f	class:ios
badPinCheck	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void badPinCheck(uint8_t pin) {$/;"	f
badbit	./libraries/SdFat/src/iostream/ios.h	/^  static const iostate badbit = 0X01;$/;"	m	class:ios_base
base	./libraries/SdFat/src/common/upcase.cpp	/^  uint16_t base;$/;"	m	struct:map16	file:
baseClock	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t baseClock() { return F_CPU;}$/;"	f	file:
baseClock	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t baseClock() {$/;"	f	file:
basefield	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags basefield   = dec | hex | oct;$/;"	m	class:ios_base
beep	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::beep(uint32_t freq, uint32_t duration) {$/;"	f	class:Adafruit_TestBed
beepNblink	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::beepNblink(void) {$/;"	f	class:Adafruit_TestBed
beg	./libraries/SdFat/src/iostream/ios.h	/^    beg,$/;"	e	enum:ios_base::seekdir
begin	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::begin(bool addr_detect) {$/;"	f	class:Adafruit_I2CDevice
begin	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::begin(void) {$/;"	f	class:Adafruit_SPIDevice
begin	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::begin(bool addr_detect) {$/;"	f	class:Adafruit_I2CDevice
begin	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::begin(void) {$/;"	f	class:Adafruit_SPIDevice
begin	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::begin(void) {$/;"	f	class:Adafruit_NeoPixel
begin	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::begin(...) {$/;"	f	class:BLESerial
begin	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::begin(...) {$/;"	f	class:BLESerial
begin	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^bool Adafruit_PWMServoDriver::begin(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver
begin	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^bool Adafruit_PWMServoDriver::begin(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver
begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::begin(void) {$/;"	f	class:Adafruit_TestBed
begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::begin(void) {$/;"	f	class:Adafruit_TestBed_Brains
begin	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^uint32_t ESP32BootROMClass::begin(unsigned long baudrate) {$/;"	f	class:ESP32BootROMClass
begin	./libraries/Flash/flash.h	/^    static void begin() {$/;"	f	class:Flash
begin	./libraries/Logging/logging.h	/^    static void begin() {$/;"	f	class:Log
begin	./libraries/SdFat/src/BufferedPrint.h	/^  void begin(WriteClass* wr) {$/;"	f	class:BufferedPrint
begin	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  void begin() {$/;"	f	class:SoftSPI
begin	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool begin(FsBlockDevice* dev, bool setCwv = true,$/;"	f	class:ExFatVolume
begin	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool begin(FsBlockDevice* dev, bool setCwv = true,$/;"	f	class:FatVolume
begin	./libraries/SdFat/src/FsLib/FsVolume.cpp	/^bool FsVolume::begin(FsBlockDevice* blockDev, bool setCwv,$/;"	f	class:FsVolume
begin	./libraries/SdFat/src/MinimumSerial.cpp	/^void MinimumSerial::begin(uint32_t baud) {$/;"	f	class:MinimumSerial
begin	./libraries/SdFat/src/RingBuf.h	/^  void begin(F* file) {$/;"	f	class:RingBuf
begin	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::begin(SdSpiConfig spiConfig) {$/;"	f	class:DedicatedSpiCard
begin	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::begin(SdSpiConfig spiConfig) {$/;"	f	class:SharedSpiCard
begin	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::begin(SdioConfig sdioConfig) {$/;"	f	class:SdioCard
begin	./libraries/SdFat/src/SdFat.h	/^  bool begin(SdCsPin_t csPin = SS) {$/;"	f	class:SdBase
begin	./libraries/SdFat/src/SdFat.h	/^  bool begin(SdCsPin_t csPin, uint32_t maxSck) {$/;"	f	class:SdBase
begin	./libraries/SdFat/src/SdFat.h	/^  bool begin(SdSpiConfig spiConfig) {$/;"	f	class:SdBase
begin	./libraries/SdFat/src/SdFat.h	/^  bool begin(SdioConfig sdioConfig) {$/;"	f	class:SdBase
begin	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiDriverBareUno
begin	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void begin() {m_spi.begin();}$/;"	f	class:SoftSpiDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiSoftDriver
begin	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::begin(SdSpiConfig spiConfig) {$/;"	f	class:SdSpiArduinoDriver
begin	./libraries/SdFat/src/common/FsName.h	/^  const char* begin;$/;"	m	class:FsName
beginCHS	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t beginCHS[3];$/;"	m	struct:mbrPartition
beginFlash	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::beginFlash(uint32_t offset, uint32_t size,$/;"	f	class:ESP32BootROMClass
beginFlashDefl	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::beginFlashDefl(uint32_t offset, uint32_t size,$/;"	f	class:ESP32BootROMClass
beginMem	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::beginMem(uint32_t offset, uint32_t size,$/;"	f	class:ESP32BootROMClass
beginTransaction	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransaction(void) {$/;"	f	class:Adafruit_SPIDevice
beginTransaction	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransaction(void) {$/;"	f	class:Adafruit_SPIDevice
beginTransactionWithAssertingCS	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransactionWithAssertingCS() {$/;"	f	class:Adafruit_SPIDevice
beginTransactionWithAssertingCS	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransactionWithAssertingCS() {$/;"	f	class:Adafruit_SPIDevice
begun	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  bool begun;         \/\/\/< true if begin() previously called$/;"	m	class:Adafruit_NeoPixel
bf20a6_default_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/bf20a6_settings.h	/^static const uint16_t bf20a6_default_init_regs[][2] = {$/;"	v
bf20a6_detect	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^int bf20a6_detect(int slv_addr, sensor_id_t *id)$/;"	f
bf20a6_init	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^int bf20a6_init(sensor_t *sensor)$/;"	f
bf3005_detect	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^int bf3005_detect(int slv_addr, sensor_id_t *id)$/;"	f
bf3005_init	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^int bf3005_init(sensor_t *sensor)$/;"	f
bin_files	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	/^} bin_files[] = {$/;"	v	typeref:struct:__anon31
bin_files	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	/^} bin_files[] = {$/;"	v	typeref:struct:__anon33
binary	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode binary = 0X10;$/;"	m	class:ios_base
binning	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    bool binning;$/;"	m	struct:__anon15
binning	./libraries/esp32-camera/include/sensor.h	/^    bool binning;$/;"	m	struct:__anon16
biosParameterBlockExFat	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct biosParameterBlockExFat {$/;"	s
biosParameterBlockFat16	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct biosParameterBlockFat16 {$/;"	s
biosParameterBlockFat32	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct biosParameterBlockFat32 {$/;"	s
bitext	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^INT bitext (	\/* >=0: extracted data, <0: error code *\/$/;"	f	file:
bitmapCachePrepare	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t* bitmapCachePrepare(uint32_t sector, uint8_t option) {$/;"	f	class:ExFatPartition
bitmapFind	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^uint32_t ExFatPartition::bitmapFind(uint32_t cluster, uint32_t count) {$/;"	f	class:ExFatPartition
bitmapModify	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^bool ExFatPartition::bitmapModify(uint32_t cluster,$/;"	f	class:ExFatPartition
bitsperpixel	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint16_t bitsperpixel;$/;"	m	struct:__anon4	file:
blink	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::blink(void) {$/;"	f	class:Adafruit_TestBed
block16_t	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^struct block16_t {$/;"	s
block16_t	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^struct block16_t {$/;"	s
block8_t	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^struct block8_t {$/;"	s
block8_t	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^struct block8_t {$/;"	s
block_idct	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^void block_idct ($/;"	f	file:
bmp_header_t	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^} bmp_header_t;$/;"	t	typeref:struct:__anon4	file:
boolalpha	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags boolalpha  = 0x0100;$/;"	m	class:ios_base
boolalpha	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& boolalpha(ios_base& str) {$/;"	f
boot	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t boot;$/;"	m	struct:mbrPartition
bootCode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t   bootCode[446];$/;"	m	struct:masterBootRecordSector
bootCode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bootCode[390];$/;"	m	struct:ExFatBootSector
bootCode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bootCode[390];$/;"	m	struct:partitionBootSector
bootCode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bootCode[390];$/;"	m	struct:partitionBootSectorFat
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s2_devkit_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp32s3_devkit_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
boot_app0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/wifi_ap_binaries.h	/^const esp32_zipfile_t boot_app0 = {$/;"	v
bottom	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon30
bottom	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon28
bpb	./libraries/SdFat/src/common/FsStructs.h	/^    uint8_t bpb[109];$/;"	m	union:partitionBootSectorFat::__anon3
bpb	./libraries/SdFat/src/common/FsStructs.h	/^  BpbExFat_t  bpb;$/;"	m	struct:ExFatBootSector
bpb	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bpb[109];$/;"	m	struct:partitionBootSector
bpb	./libraries/SdFat/src/common/FsStructs.h	/^  } bpb;$/;"	m	struct:partitionBootSectorFat	typeref:union:partitionBootSectorFat::__anon3
bpb16	./libraries/SdFat/src/common/FsStructs.h	/^    BpbFat16_t bpb16;$/;"	m	union:partitionBootSectorFat::__anon3
bpb32	./libraries/SdFat/src/common/FsStructs.h	/^    BpbFat32_t bpb32;$/;"	m	union:partitionBootSectorFat::__anon3
bpc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t bpc;$/;"	m	struct:__anon15
bpc	./libraries/esp32-camera/include/sensor.h	/^    uint8_t bpc;$/;"	m	struct:__anon16
brightness	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t brightness; \/\/\/< Strip brightness 0-255 (stored as +1)$/;"	m	class:Adafruit_NeoPixel
brightness	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int8_t brightness;\/\/-2 - 2$/;"	m	struct:__anon15
brightness	./libraries/esp32-camera/include/sensor.h	/^    int8_t brightness;\/\/-2 - 2$/;"	m	struct:__anon16
brightness_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t brightness_regs[NUM_BRIGHTNESS_LEVELS + 1][5] = {$/;"	v
buf	./libraries/SdFat/src/iostream/bufstream.h	/^  char* buf() {$/;"	f	class:obufstream
buf	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    uint8_t * buf;              \/*!< Pointer to the pixel data *\/$/;"	m	struct:__anon22
buf	./libraries/esp32-camera/include/esp_camera.h	/^    uint8_t * buf;              \/*!< Pointer to the pixel data *\/$/;"	m	struct:__anon23
bufstream_h	./libraries/SdFat/src/iostream/bufstream.h	26;"	d
busWidthSecureMode	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t busWidthSecureMode;$/;"	m	struct:SdStatus
bytesFree	./libraries/SdFat/src/RingBuf.h	/^  size_t bytesFree() const {$/;"	f	class:RingBuf
bytesFreeIsr	./libraries/SdFat/src/RingBuf.h	/^  size_t bytesFreeIsr() const {$/;"	f	class:RingBuf
bytesPerCluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t bytesPerCluster() const {return m_bytesPerCluster;}$/;"	f	class:ExFatPartition
bytesPerCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t bytesPerCluster() const {$/;"	f	class:FatPartition
bytesPerCluster	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint32_t bytesPerCluster() const {$/;"	f	class:FsVolume
bytesPerClusterShift	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t bytesPerClusterShift() const {$/;"	f	class:ExFatPartition
bytesPerClusterShift	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t bytesPerClusterShift() const {$/;"	f	class:FatPartition
bytesPerSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint16_t bytesPerSector() const {return m_bytesPerSector;}$/;"	f	class:ExFatPartition
bytesPerSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t bytesPerSector() const {$/;"	f	class:FatPartition
bytesPerSector	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bytesPerSector[2];$/;"	m	struct:biosParameterBlockFat16
bytesPerSector	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  bytesPerSector[2];$/;"	m	struct:biosParameterBlockFat32
bytesPerSectorShift	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t bytesPerSectorShift() const {return m_bytesPerSectorShift;}$/;"	f	class:ExFatPartition
bytesPerSectorShift	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t bytesPerSectorShift() const {$/;"	f	class:FatPartition
bytesPerSectorShift	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t bytesPerSectorShift;$/;"	m	struct:biosParameterBlockExFat
bytesUsed	./libraries/SdFat/src/RingBuf.h	/^  size_t bytesUsed() const {$/;"	f	class:RingBuf
bytesUsedIsr	./libraries/SdFat/src/RingBuf.h	/^  size_t bytesUsedIsr() const {$/;"	f	class:RingBuf
c	./libraries/SdFat/src/iostream/iostream.h	/^  char c;$/;"	m	struct:setfill
cacheAddress	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t* cacheAddress() {$/;"	f	class:FatPartition
cacheBuffer	./libraries/SdFat/src/common/FsCache.h	/^  uint8_t* cacheBuffer() {$/;"	f	class:FsCache
cacheClear	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t* cacheClear() {$/;"	f	class:ExFatPartition
cacheClear	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t* cacheClear() {$/;"	f	class:FatPartition
cacheDir	./libraries/SdFat/src/FatLib/FatFile.h	/^  DirFat_t* cacheDir(uint16_t index) {$/;"	f	class:FatFile
cacheDirEntry	./libraries/SdFat/src/FatLib/FatFile.cpp	/^DirFat_t* FatFile::cacheDirEntry(uint8_t action) {$/;"	f	class:FatFile
cacheDirty	./libraries/SdFat/src/FatLib/FatPartition.h	/^  void cacheDirty() {$/;"	f	class:FatPartition
cacheInit	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  void cacheInit(FsBlockDevice* dev) {$/;"	f	class:ExFatPartition
cacheInvalidate	./libraries/SdFat/src/FatLib/FatPartition.h	/^  void cacheInvalidate() {$/;"	f	class:FatPartition
cachePrepare	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cachePrepare(uint32_t sector, uint8_t option) {$/;"	f	class:FatPartition
cacheSafeRead	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst) {$/;"	f	class:ExFatPartition
cacheSafeRead	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst, size_t count) {$/;"	f	class:ExFatPartition
cacheSafeRead	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst) {$/;"	f	class:FatPartition
cacheSafeRead	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst, size_t count) {$/;"	f	class:FatPartition
cacheSafeRead	./libraries/SdFat/src/common/FsCache.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst) {$/;"	f	class:FsCache
cacheSafeRead	./libraries/SdFat/src/common/FsCache.h	/^  bool cacheSafeRead(uint32_t sector, uint8_t* dst, size_t count) {$/;"	f	class:FsCache
cacheSafeWrite	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* src) {$/;"	f	class:ExFatPartition
cacheSafeWrite	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* src, size_t count) {$/;"	f	class:ExFatPartition
cacheSafeWrite	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* dst) {$/;"	f	class:FatPartition
cacheSafeWrite	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* dst, size_t count) {$/;"	f	class:FatPartition
cacheSafeWrite	./libraries/SdFat/src/common/FsCache.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* src) {$/;"	f	class:FsCache
cacheSafeWrite	./libraries/SdFat/src/common/FsCache.h	/^  bool cacheSafeWrite(uint32_t sector, const uint8_t* src, size_t count) {$/;"	f	class:FsCache
cacheSectorNumber	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t cacheSectorNumber() {$/;"	f	class:FatPartition
cacheSync	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool cacheSync() {$/;"	f	class:ExFatPartition
cacheSync	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSync() {$/;"	f	class:FatPartition
cacheSyncData	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool cacheSyncData() {$/;"	f	class:FatPartition
calc_sysclk	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int calc_sysclk(int xclk, bool pll_bypass, int pll_multiplier, int pll_sys_div, int pll_pre_div, bool pll_root_2x, int pll_seld5, bool pclk_manual, int pclk_div)$/;"	f	file:
calc_sysclk	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int calc_sysclk(int xclk, bool pll_bypass, int pll_multiplier, int pll_sys_div, int pre_div, bool root_2x, int pclk_root_div, bool pclk_manual, int pclk_div)$/;"	f	file:
callback	./libraries/SdFat/src/common/FsDateTime.cpp	/^  void (*callback)(uint16_t* date, uint16_t* time, uint8_t* ms10) = nullptr;$/;"	m	namespace:FsDateTime	file:
callback2	./libraries/SdFat/src/common/FsDateTime.cpp	/^  void (*callback2)(uint16_t* date, uint16_t* time) = nullptr;$/;"	m	namespace:FsDateTime	file:
callback_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    callback_stream(jpg_out_cb cb, void * arg) : ocb(cb), oarg(arg), index(0) { }$/;"	f	class:callback_stream
callback_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^class callback_stream : public jpge::output_stream {$/;"	c	file:
cam_config	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^esp_err_t cam_config(const camera_config_t *config, framesize_t frame_size, uint16_t sensor_pid)$/;"	f
cam_config	./libraries/esp32-camera/cam_hal.c	/^esp_err_t cam_config(const camera_config_t *config, framesize_t frame_size, uint16_t sensor_pid)$/;"	f
cam_deinit	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^esp_err_t cam_deinit(void)$/;"	f
cam_deinit	./libraries/esp32-camera/cam_hal.c	/^esp_err_t cam_deinit(void)$/;"	f
cam_dma_config	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static esp_err_t cam_dma_config(const camera_config_t *config)$/;"	f	file:
cam_dma_config	./libraries/esp32-camera/cam_hal.c	/^static esp_err_t cam_dma_config(const camera_config_t *config)$/;"	f	file:
cam_event_t	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^} cam_event_t;$/;"	t	typeref:enum:__anon23
cam_frame_t	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^} cam_frame_t;$/;"	t	typeref:struct:__anon25
cam_get_next_frame	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static bool cam_get_next_frame(int * frame_pos)$/;"	f	file:
cam_get_next_frame	./libraries/esp32-camera/cam_hal.c	/^static bool cam_get_next_frame(int * frame_pos)$/;"	f	file:
cam_give	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^void cam_give(camera_fb_t *dma_buffer)$/;"	f
cam_give	./libraries/esp32-camera/cam_hal.c	/^void cam_give(camera_fb_t *dma_buffer)$/;"	f
cam_give_all	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^void cam_give_all(void) {$/;"	f
cam_give_all	./libraries/esp32-camera/cam_hal.c	/^void cam_give_all(void) {$/;"	f
cam_init	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^esp_err_t cam_init(const camera_config_t *config)$/;"	f
cam_init	./libraries/esp32-camera/cam_hal.c	/^esp_err_t cam_init(const camera_config_t *config)$/;"	f
cam_intr_handle	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    intr_handle_t cam_intr_handle;$/;"	m	struct:__anon26
cam_obj	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static cam_obj_t *cam_obj = NULL;$/;"	v	file:
cam_obj	./libraries/esp32-camera/cam_hal.c	/^static cam_obj_t *cam_obj = NULL;$/;"	v	file:
cam_obj_t	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^} cam_obj_t;$/;"	t	typeref:struct:__anon26
cam_start	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^void cam_start(void)$/;"	f
cam_start	./libraries/esp32-camera/cam_hal.c	/^void cam_start(void)$/;"	f
cam_start_frame	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static bool cam_start_frame(int * frame_pos)$/;"	f	file:
cam_start_frame	./libraries/esp32-camera/cam_hal.c	/^static bool cam_start_frame(int * frame_pos)$/;"	f	file:
cam_state_t	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^} cam_state_t;$/;"	t	typeref:enum:__anon24
cam_stop	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^void cam_stop(void)$/;"	f
cam_stop	./libraries/esp32-camera/cam_hal.c	/^void cam_stop(void)$/;"	f
cam_take	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^camera_fb_t *cam_take(TickType_t timeout)$/;"	f
cam_take	./libraries/esp32-camera/cam_hal.c	/^camera_fb_t *cam_take(TickType_t timeout)$/;"	f
cam_task	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static void cam_task(void *arg)$/;"	f	file:
cam_task	./libraries/esp32-camera/cam_hal.c	/^static void cam_task(void *arg)$/;"	f	file:
cam_verify_jpeg_eoi	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static int cam_verify_jpeg_eoi(const uint8_t *inbuf, uint32_t length)$/;"	f	file:
cam_verify_jpeg_eoi	./libraries/esp32-camera/cam_hal.c	/^static int cam_verify_jpeg_eoi(const uint8_t *inbuf, uint32_t length)$/;"	f	file:
cam_verify_jpeg_soi	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^static int cam_verify_jpeg_soi(const uint8_t *inbuf, uint32_t length)$/;"	f	file:
cam_verify_jpeg_soi	./libraries/esp32-camera/cam_hal.c	/^static int cam_verify_jpeg_soi(const uint8_t *inbuf, uint32_t length)$/;"	f	file:
camera_config	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	/^static camera_config_t camera_config = {$/;"	v	file:
camera_config_t	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^} camera_config_t;$/;"	t	typeref:struct:__anon19
camera_config_t	./libraries/esp32-camera/include/esp_camera.h	/^} camera_config_t;$/;"	t	typeref:struct:__anon20
camera_conv_mode_t	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^} camera_conv_mode_t;$/;"	t	typeref:enum:__anon18
camera_conv_mode_t	./libraries/esp32-camera/include/esp_camera.h	/^} camera_conv_mode_t;$/;"	t	typeref:enum:__anon19
camera_disable_out_clock	./libraries/esp32-camera-2.0.8/target/xclk.c	/^void camera_disable_out_clock()$/;"	f
camera_enable_out_clock	./libraries/esp32-camera-2.0.8/target/xclk.c	/^esp_err_t camera_enable_out_clock(const camera_config_t* config)$/;"	f
camera_fb_location_t	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^} camera_fb_location_t;$/;"	t	typeref:enum:__anon17
camera_fb_location_t	./libraries/esp32-camera/include/esp_camera.h	/^} camera_fb_location_t;$/;"	t	typeref:enum:__anon18
camera_fb_t	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^} camera_fb_t;$/;"	t	typeref:struct:__anon22
camera_fb_t	./libraries/esp32-camera/include/esp_camera.h	/^} camera_fb_t;$/;"	t	typeref:struct:__anon23
camera_grab_mode_t	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^} camera_grab_mode_t;$/;"	t	typeref:enum:__anon16
camera_grab_mode_t	./libraries/esp32-camera/include/esp_camera.h	/^} camera_grab_mode_t;$/;"	t	typeref:enum:__anon17
camera_model_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} camera_model_t;$/;"	t	typeref:enum:__anon5
camera_model_t	./libraries/esp32-camera/include/sensor.h	/^} camera_model_t;$/;"	t	typeref:enum:__anon6
camera_performance_test	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void camera_performance_test(uint32_t xclk_freq, uint32_t pic_num)$/;"	f	file:
camera_pid_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} camera_pid_t;$/;"	t	typeref:enum:__anon4
camera_pid_t	./libraries/esp32-camera/include/sensor.h	/^} camera_pid_t;$/;"	t	typeref:enum:__anon5
camera_probe	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static esp_err_t camera_probe(const camera_config_t *config, camera_model_t *out_camera_model)$/;"	f	file:
camera_probe	./libraries/esp32-camera/esp_camera.c	/^static esp_err_t camera_probe(const camera_config_t *config, camera_model_t *out_camera_model)$/;"	f	file:
camera_sccb_addr_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} camera_sccb_addr_t;$/;"	t	typeref:enum:__anon6
camera_sccb_addr_t	./libraries/esp32-camera/include/sensor.h	/^} camera_sccb_addr_t;$/;"	t	typeref:enum:__anon7
camera_sensor	./libraries/esp32-camera-2.0.8/driver/sensor.c	/^const camera_sensor_info_t camera_sensor[CAMERA_MODEL_MAX] = {$/;"	v
camera_sensor	./libraries/esp32-camera/sensor.c	/^const camera_sensor_info_t camera_sensor[CAMERA_MODEL_MAX] = {$/;"	v
camera_sensor_info_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} camera_sensor_info_t;$/;"	t	typeref:struct:__anon9
camera_sensor_info_t	./libraries/esp32-camera/include/sensor.h	/^} camera_sensor_info_t;$/;"	t	typeref:struct:__anon10
camera_state_t	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^} camera_state_t;$/;"	t	typeref:struct:__anon6	file:
camera_state_t	./libraries/esp32-camera/esp_camera.c	/^} camera_state_t;$/;"	t	typeref:struct:__anon11	file:
camera_status_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} camera_status_t;$/;"	t	typeref:struct:__anon15
camera_status_t	./libraries/esp32-camera/include/sensor.h	/^} camera_status_t;$/;"	t	typeref:struct:__anon16
camera_test_fps	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static bool camera_test_fps(uint16_t times, float *fps, uint32_t *size)$/;"	f	file:
canShow	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  bool canShow(void) {$/;"	f	class:Adafruit_NeoPixel
capacity	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint32_t capacity() const {$/;"	f	struct:CSD
card	./libraries/SdFat/src/SdFat.h	/^  SdCard* card() {return m_card;}$/;"	f	class:SdBase
cardACMD51	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool cardACMD51(scr_t* scr) {$/;"	f	file:
cardAcmd	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t cardAcmd(uint8_t cmd, uint32_t arg) {$/;"	f	class:SharedSpiCard
cardAcmd	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool cardAcmd(uint32_t rca, uint32_t xfertyp, uint32_t arg) {$/;"	f	file:
cardBegin	./libraries/SdFat/src/SdFat.h	/^  bool cardBegin(SdSpiConfig spiConfig) {$/;"	f	class:SdBase
cardBegin	./libraries/SdFat/src/SdFat.h	/^  bool cardBegin(SdioConfig sdioConfig) {$/;"	f	class:SdBase
cardCMD6	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::cardCMD6(uint32_t arg, uint8_t* status) {$/;"	f	class:SharedSpiCard
cardCMD6	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::cardCMD6(uint32_t arg, uint8_t* status) {$/;"	f	class:SdioCard
cardCommand	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^uint8_t SharedSpiCard::cardCommand(uint8_t cmd, uint32_t arg) {$/;"	f	class:SharedSpiCard
cardCommand	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool cardCommand(uint32_t xfertyp, uint32_t arg) {$/;"	f	file:
cardSize	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint32_t __attribute__((warning("use sectorCount() instead"))) cardSize() {$/;"	f	class:SharedSpiCard
caseFlags	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  caseFlags;$/;"	m	struct:__anon4
chainSize	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^uint32_t ExFatPartition::chainSize(uint32_t cluster) {$/;"	f	class:ExFatPartition
changeBaudrate	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::changeBaudrate(uint32_t baudrate) {$/;"	f	class:ESP32BootROMClass
channelsRemaining	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static int channelsRemaining() {$/;"	f	class:ESP32PWM
chdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.cpp	/^bool ExFatVolume::chdir(const char* path) {$/;"	f	class:ExFatVolume
chdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool chdir() {$/;"	f	class:ExFatVolume
chdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool chdir(const String& path) {$/;"	f	class:ExFatVolume
chdir	./libraries/SdFat/src/FatLib/FatVolume.cpp	/^bool FatVolume::chdir(const char *path) {$/;"	f	class:FatVolume
chdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool chdir() {$/;"	f	class:FatVolume
chdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool chdir(const String& path) {$/;"	f	class:FatVolume
chdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^    bool chdir(const char* path) {$/;"	f	class:FsVolume
chdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool chdir() {$/;"	f	class:FsVolume
chdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool chdir(const String& path) {$/;"	f	class:FsVolume
check	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            inline bool check() const {$/;"	f	struct:jpge::params
checkFrequencyForSideEffects	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^bool ESP32PWM::checkFrequencyForSideEffects(double freq) {$/;"	f	class:ESP32PWM
checkUpcase	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::checkUpcase(print_t* pr) {$/;"	f	class:ExFatPartition
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask)$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask)$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask)$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask)$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask)$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask){$/;"	f	file:
check_reg_mask	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int check_reg_mask(uint8_t slv_addr, uint16_t reg, uint8_t mask){$/;"	f	file:
checksum	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  checksum;$/;"	m	struct:__anon5
checksum	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  checksum[4];$/;"	m	struct:__anon7
chvol	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  void chvol() {m_cwv = this;}$/;"	f	class:ExFatVolume
chvol	./libraries/SdFat/src/FatLib/FatVolume.h	/^  void chvol() {m_cwv = this;}$/;"	f	class:FatVolume
chvol	./libraries/SdFat/src/FsLib/FsVolume.h	/^  void chvol() {m_cwv = this;}$/;"	f	class:FsVolume
cid_t	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^} __attribute__((packed)) cid_t;$/;"	t	typeref:struct:CID
clamp	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static inline uint8 clamp(int i) {$/;"	f	namespace:jpge
clang	./libraries/Adafruit_TestBed/.github/workflows/githubci.yml	/^    - name: clang$/;"	k
clear	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::clear(void) { memset(pixels, 0, numBytes); }$/;"	f	class:Adafruit_NeoPixel
clear	./libraries/SdFat/src/common/FsCache.h	/^  uint8_t* clear() {$/;"	f	class:FsCache
clear	./libraries/SdFat/src/iostream/fstream.h	/^  void clear(iostate state = goodbit) {$/;"	f	class:fstream
clear	./libraries/SdFat/src/iostream/fstream.h	/^  void clear(iostate state = goodbit) {$/;"	f	class:ofstream
clear	./libraries/SdFat/src/iostream/ios.h	/^  void clear(iostate state = goodbit) {$/;"	f	class:ios
clear	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::clear()$/;"	f	class:jpge::jpeg_encoder
clearCallback	./libraries/SdFat/src/common/FsDateTime.cpp	/^  void clearCallback() {$/;"	f	namespace:FsDateTime
clearError	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  void clearError() {$/;"	f	class:ExFatFile
clearError	./libraries/SdFat/src/FatLib/FatFile.h	/^  void clearError() {$/;"	f	class:FatFile
clearWriteError	./libraries/SdFat/extras/attic/PrintBasic.h	/^  void clearWriteError() {$/;"	f	class:PrintBasic
clearWriteError	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  void clearWriteError() {$/;"	f	class:ExFatFile
clearWriteError	./libraries/SdFat/src/FatLib/FatFile.h	/^  void clearWriteError() {$/;"	f	class:FatFile
clearWriteError	./libraries/SdFat/src/FsLib/FsFile.h	/^  void clearWriteError() {$/;"	f	class:FsBaseFile
clearWriteError	./libraries/SdFat/src/common/PrintBasic.h	/^  void clearWriteError() {$/;"	f	class:PrintBasic
clearWriteError	./libraries/SdFat/src/iostream/fstream.h	/^  void clearWriteError() {$/;"	f	class:StreamBaseClass
clearerr	./libraries/SdFat/src/iostream/StdioStream.h	/^  void clearerr() {$/;"	f	class:StdioStream
clearerr	./libraries/SdFat/src/iostream/StdioStream.h	43;"	d
clk	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                uint8_t clk;$/;"	m	union:__anon13::__anon16
clkPinMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
clkPinMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
clkPort	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
clkPort	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
clk_2x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                        uint8_t clk_2x:1;$/;"	m	struct:__anon13::__anon16::__anon17
clk_div	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                        uint8_t clk_div:6;$/;"	m	struct:__anon13::__anon16::__anon17
close	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::close() {$/;"	f	class:ExFatFile
close	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::close() {$/;"	f	class:FatFile
close	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::close() {$/;"	f	class:FsBaseFile
close	./libraries/SdFat/src/iostream/fstream.h	/^  void close() {$/;"	f	class:fstream
close	./libraries/SdFat/src/iostream/fstream.h	/^  void close() {$/;"	f	class:ifstream
close	./libraries/SdFat/src/iostream/fstream.h	/^  void close() {$/;"	f	class:ofstream
cluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t cluster;$/;"	m	struct:DirPos_t
cluster	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t cluster;$/;"	m	struct:FatPos_t
cluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint32_t cluster;$/;"	m	struct:__anon2
clusterCount	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t clusterCount() const {return m_clusterCount;}$/;"	f	class:ExFatPartition
clusterCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t clusterCount() const {$/;"	f	class:FatPartition
clusterCount	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint32_t clusterCount() const {$/;"	f	class:FsVolume
clusterCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t clusterCount[4];$/;"	m	struct:biosParameterBlockExFat
clusterHeapOffset	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t clusterHeapOffset[4];$/;"	m	struct:biosParameterBlockExFat
clusterHeapStartSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t clusterHeapStartSector() const {return m_clusterHeapStartSector;}$/;"	f	class:ExFatPartition
clusterMask	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t clusterMask() const {return m_clusterMask;}$/;"	f	class:ExFatPartition
clusterStartSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t clusterStartSector(uint32_t cluster) {$/;"	f	class:ExFatPartition
clusterStartSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t clusterStartSector(uint32_t cluster) const {$/;"	f	class:FatPartition
cmdSupport	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t cmdSupport() {return scr[3] &0XF;}$/;"	f	struct:SCR
cmpName	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^bool ExFatFile::cmpName(const DirName_t* dirName, ExName_t* fname) {$/;"	f	class:ExFatFile
cmpName	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::cmpName(uint16_t index, FatLfn_t* fname, uint8_t lfnOrd) {$/;"	f	class:FatFile
code_block	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::code_block(int component_num)$/;"	f	class:jpge::jpeg_encoder
code_coefficients_pass_two	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::code_coefficients_pass_two(int component_num)$/;"	f	class:jpge::jpeg_encoder
colorbar	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t colorbar;$/;"	m	struct:__anon15
colorbar	./libraries/esp32-camera/include/sensor.h	/^    uint8_t colorbar;$/;"	m	struct:__anon16
command	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^void ESP32BootROMClass::command(uint8_t opcode, const void *data, uint16_t len,$/;"	f	class:ESP32BootROMClass
compileDay	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint8_t compileDay() {$/;"	f
compileHour	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint8_t compileHour() {$/;"	f
compileMinute	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint8_t compileMinute() {$/;"	f
compileMonth	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint8_t compileMonth() {$/;"	f
compileMonthIs	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr bool compileMonthIs(const char* str) {$/;"	f
compileSecond	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint8_t compileSecond() {$/;"	f
compileYear	./libraries/SdFat/src/common/CompileDateTime.h	/^constexpr uint16_t compileYear() {$/;"	f
compressed_len	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  const uint32_t compressed_len;$/;"	m	struct:__anon3
compression	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t compression;$/;"	m	struct:__anon4	file:
compute_huffman_table	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static void compute_huffman_table(uint *codes, uint8 *code_sizes, uint8 *bits, uint8 *val)$/;"	f	namespace:jpge
compute_quant_table	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::compute_quant_table(int32 *pDst, const int16 *pSrc)$/;"	f	class:jpge::jpeg_encoder
config	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void config(uint8_t mode, bool level) {$/;"	f	class:DigitalPin
contiguousRange	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::contiguousRange(uint32_t* bgnSector, uint32_t* endSector) {$/;"	f	class:ExFatFile
contiguousRange	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::contiguousRange(uint32_t* bgnSector, uint32_t* endSector) {$/;"	f	class:FatFile
contiguousRange	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool contiguousRange(uint32_t* bgnSector, uint32_t* endSector) {$/;"	f	class:FsBaseFile
contrast	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int8_t contrast;\/\/-2 - 2$/;"	m	struct:__anon15
contrast	./libraries/esp32-camera/include/sensor.h	/^    int8_t contrast;\/\/-2 - 2$/;"	m	struct:__anon16
contrast_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t contrast_regs[NUM_CONTRAST_LEVELS + 1][7] = {$/;"	v
conv_mode	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    camera_conv_mode_t conv_mode;   \/*!< RGB<->YUV Conversion mode *\/$/;"	m	struct:__anon19
conv_mode	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    camera_conv_mode_t conv_mode;$/;"	m	struct:__anon26
conv_mode	./libraries/esp32-camera/include/esp_camera.h	/^    camera_conv_mode_t conv_mode;   \/*!< RGB<->YUV Conversion mode *\/$/;"	m	struct:__anon20
convert_image	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^bool convert_image(uint8_t *src, uint16_t width, uint16_t height, pixformat_t format, uint8_t quality, jpge::output_stream *dst_stream)$/;"	f
convert_line_format	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^static IRAM_ATTR void convert_line_format(uint8_t * src, pixformat_t format, uint8_t * dst, size_t width, size_t in_channels, size_t line)$/;"	f	file:
copy	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool copy() const {return csd[14] & 0X40;}$/;"	f	struct:CSD
count	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint16_t count;    \/\/ count of data values$/;"	m	struct:block8_t
count	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  unsigned short count;    \/\/ count of data values$/;"	m	struct:block16_t
count	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short count;    \/\/ count of data values$/;"	m	struct:adcdata_t
count	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short count;    \/\/ count of data values$/;"	m	struct:block16_t
count	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short count;    \/\/ count of data values$/;"	m	struct:block8_t
count	./libraries/SdFat/src/common/upcase.cpp	/^  uint8_t count;$/;"	m	struct:map16	file:
cpToMb	./libraries/SdFat/src/common/FsUtf.cpp	/^  char* cpToMb(uint32_t cp, char* str, char* end) {$/;"	f	namespace:FsUtf
cpuFrequency	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint32_t cpuFrequency;           \/\/ CPU clock frequency$/;"	m	struct:metadata_t
cpuFrequency	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  cpuFrequency;     \/\/ CPU clock frequency$/;"	m	struct:metadata_t
crc	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^  uint32_t crc;$/;"	m	class:BrainCRC32	file:
crc	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t crc;$/;"	m	struct:CID
createContiguous	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::createContiguous(FatFile* dirFile,$/;"	f	class:FatFile
createContiguous	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::createContiguous(const char* path, uint32_t size) {$/;"	f	class:FatFile
createDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createDate[2];$/;"	m	struct:__anon4
createDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createDate[2];$/;"	m	struct:__anon9
createLFN	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::createLFN(uint16_t index, FatLfn_t* fname, uint8_t lfnOrd) {$/;"	f	class:FatFile
createTime	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createTime[2];$/;"	m	struct:__anon4
createTime	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createTime[2];$/;"	m	struct:__anon9
createTimeMs	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createTimeMs;$/;"	m	struct:__anon4
createTimeMs	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createTimeMs;$/;"	m	struct:__anon9
createTimezone	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  createTimezone;$/;"	m	struct:__anon9
create_huffman_tbl	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^UINT create_huffman_tbl (	\/* 0:OK, !0:Failed *\/$/;"	f	file:
create_qt_tbl	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^UINT create_qt_tbl (	\/* 0:OK, !0:Failed *\/$/;"	f	file:
csPin	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  const SdCsPin_t csPin;$/;"	m	class:SdSpiConfig
csPinMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
csPinMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
csPort	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
csPort	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
csd	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t csd[16];$/;"	m	struct:CSD
csd_t	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^} csd_t;$/;"	t	typeref:struct:CSD
cur	./libraries/SdFat/src/iostream/ios.h	/^    cur,$/;"	e	enum:ios_base::seekdir
curCluster	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint32_t curCluster() const {return m_curCluster;}$/;"	f	class:ExFatFile
curCluster	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t curCluster() const {return m_curCluster;}$/;"	f	class:FatFile
curCluster	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint32_t curCluster() const {$/;"	f	class:FsBaseFile
curPosition	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t curPosition() const {return m_curPosition;}$/;"	f	class:ExFatFile
curPosition	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t curPosition() const {return m_curPosition;}$/;"	f	class:FatFile
curPosition	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint64_t curPosition() const {$/;"	f	class:FsBaseFile
cwv	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  static ExFatVolume* cwv() {return m_cwv;}$/;"	f	class:ExFatVolume
cwv	./libraries/SdFat/src/FatLib/FatVolume.h	/^  static FatVolume* cwv() {return m_cwv;}$/;"	f	class:FatVolume
cwv	./libraries/SdFat/src/FsLib/FsVolume.h	/^  static FsVolume* cwv() {return m_cwv;}$/;"	f	class:FsVolume
dap	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  Adafruit_DAP *dap;$/;"	m	class:Adafruit_TestBed_Brains
dap_begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::dap_begin(Adafruit_DAP *dp) {$/;"	f	class:Adafruit_TestBed_Brains
dap_connect	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::dap_connect(void) {$/;"	f	class:Adafruit_TestBed_Brains
dap_disconnect	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::dap_disconnect(void) {$/;"	f	class:Adafruit_TestBed_Brains
dap_eraseChip	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::dap_eraseChip(void) {$/;"	f	class:Adafruit_TestBed_Brains
dap_err_hanlder	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^static void dap_err_hanlder(const char *msg) { Brain.LCD_error(msg, NULL); }$/;"	f	file:
dap_programFlash	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^size_t Adafruit_TestBed_Brains::dap_programFlash(const char *fpath,$/;"	f	class:Adafruit_TestBed_Brains
dap_protectBoot	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::dap_protectBoot(void) {$/;"	f	class:Adafruit_TestBed_Brains
dap_readFlash	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^size_t Adafruit_TestBed_Brains::dap_readFlash(const char *fpath, uint32_t addr,$/;"	f	class:Adafruit_TestBed_Brains
dap_unprotectBoot	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::dap_unprotectBoot(void) {$/;"	f	class:Adafruit_TestBed_Brains
data	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  const uint8_t *data;$/;"	m	struct:__anon3
data	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  const uint8_t *data;$/;"	m	struct:__anon2
data	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint8_t  data[DATA_DIM8];$/;"	m	struct:block8_t
data	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  unsigned short data[DATA_DIM16];$/;"	m	struct:block16_t
data	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned char  data[DATA_DIM8];$/;"	m	struct:block8_t
data	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short data[DATA_DIM16];$/;"	m	struct:block16_t
data	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  } data;$/;"	m	struct:adcdata_t	typeref:union:adcdata_t::__anon2
data	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t data[31];$/;"	m	struct:__anon1
dataAfterErase	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool dataAfterErase() {return 0X80 & scr[1];}$/;"	f	struct:SCR
dataCache	./libraries/SdFat/src/FatLib/FatPartition.h	/^  FsCache* dataCache() {return &m_cache;}$/;"	f	class:FatPartition
dataCacheDirty	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  void dataCacheDirty() {m_dataCache.dirty();}$/;"	f	class:ExFatPartition
dataCacheInvalidate	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  void dataCacheInvalidate() {m_dataCache.invalidate();}$/;"	f	class:ExFatPartition
dataCachePrepare	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t* dataCachePrepare(uint32_t sector, uint8_t option) {$/;"	f	class:ExFatPartition
dataCachePrepare	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t* dataCachePrepare(uint32_t sector, uint8_t options) {$/;"	f	class:FatPartition
dataCacheSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t dataCacheSector() {return m_dataCache.sector();}$/;"	f	class:ExFatPartition
dataCacheSync	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool dataCacheSync() {return m_dataCache.sync();}$/;"	f	class:ExFatPartition
dataFlash	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::dataFlash(const void *data, uint32_t length) {$/;"	f	class:ESP32BootROMClass
dataFlashDefl	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::dataFlashDefl(const void *data, uint32_t len) {$/;"	f	class:ESP32BootROMClass
dataLength	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t dataLength() const {return m_dataLength;}$/;"	f	class:ExFatFile
dataLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  dataLength[8];$/;"	m	struct:__anon10
dataMem	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::dataMem(const void *data, uint32_t length) {$/;"	f	class:ESP32BootROMClass
dataStartSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t dataStartSector() const {$/;"	f	class:FatPartition
dataStartSector	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint32_t dataStartSector() const {$/;"	f	class:FsVolume
data_length	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t data_length;$/;"	m	struct:__anon2
data_offset	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^        uint16_t data_offset;$/;"	m	struct:__anon5	file:
data_start	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t data_start;$/;"	m	struct:__anon2
data_t	./libraries/SdFat/examples/ExFatLogger/ExFatLogger.h	/^struct data_t {$/;"	s
data_t	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	/^struct data_t {$/;"	s
data_t	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	/^struct data_t {$/;"	s
data_t	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^struct data_t {$/;"	s
dateTimeCallback	./libraries/SdFat/src/SdFat.h	/^  static void dateTimeCallback($/;"	f	class:SdFile
dateTimeCallbackCancel	./libraries/SdFat/src/SdFat.h	/^  static void dateTimeCallbackCancel() {$/;"	f	class:SdFile
dateTimeMs10	./libraries/SdFat/src/common/FsDateTime.cpp	/^static void dateTimeMs10(uint16_t* date, uint16_t* time, uint8_t* ms10) {$/;"	f	file:
dbgFail	./libraries/SdFat/src/common/DebugMacros.h	/^__attribute__((unused)) static void dbgFail(uint16_t line) {$/;"	f
dbgFat	./libraries/SdFat/src/FatLib/FatPartition.h	/^  int8_t dbgFat(uint32_t n, uint32_t* v) {$/;"	f	class:FatPartition
dbgHalt	./libraries/SdFat/src/common/DebugMacros.h	/^__attribute__((unused)) static void dbgHalt(uint16_t line) {$/;"	f
dbgWarn	./libraries/SdFat/src/common/DebugMacros.h	/^__attribute__((unused)) static void dbgWarn(uint16_t line) {$/;"	f
dctr	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	UINT dctr;				\/* Number of bytes available in the input buffer *\/$/;"	m	struct:JDEC
dctr	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	UINT dctr;				\/* Number of bytes available in the input buffer *\/$/;"	m	struct:JDEC
dcv	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	SHORT dcv[3];			\/* Previous DC element of each component *\/$/;"	m	struct:JDEC
dcv	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	SHORT dcv[3];			\/* Previous DC element of each component *\/$/;"	m	struct:JDEC
dcw	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t dcw;$/;"	m	struct:__anon15
dcw	./libraries/esp32-camera/include/sensor.h	/^    uint8_t dcw;$/;"	m	struct:__anon16
ddr	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  volatile uint8_t* ddr;   \/**< address of DDR for this pin *\/$/;"	m	struct:GpioPinMap_t
ddrReg	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^volatile uint8_t* ddrReg(uint8_t pin) {$/;"	f
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void deactivate() {}$/;"	f	class:SdSpiDriverBareUno
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	/^  virtual void deactivate() {}$/;"	f	class:SdSpiBaseClass
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void deactivate() {}$/;"	f	class:SdSpiSoftDriver
deactivate	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::deactivate() {$/;"	f	class:SdSpiArduinoDriver
deallocate	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::deallocate() {$/;"	f	class:ESP32PWM
dec	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags dec        = 0x0008;$/;"	m	class:ios_base
dec	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& dec(ios_base& str) {$/;"	f
decode_func_t	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^typedef void (*decode_func_t)(uint8_t *jpegbuffer, uint32_t size, uint8_t *outbuffer);$/;"	t	file:
decode_type_t	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^} decode_type_t;$/;"	t	typeref:enum:__anon1	file:
default_regs	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static const uint8_t default_regs[][2] = {$/;"	v	file:
default_regs	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static const uint8_t default_regs[][2] = {$/;"	v	file:
deinit	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::deinit()$/;"	f	class:jpge::jpeg_encoder
denoise	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t denoise;$/;"	m	struct:__anon15
denoise	./libraries/esp32-camera/include/sensor.h	/^    uint8_t denoise;$/;"	m	struct:__anon16
detach	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo
detachPin	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::detachPin(int pin) {$/;"	f	class:ESP32PWM
detect	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^    int (*detect)(int slv_addr, sensor_id_t *id);$/;"	m	struct:__anon7	file:
detect	./libraries/esp32-camera/esp_camera.c	/^    int (*detect)(int slv_addr, sensor_id_t *id);$/;"	m	struct:__anon12	file:
detected	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::detected(void) {$/;"	f	class:Adafruit_I2CDevice
detected	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::detected(void) {$/;"	f	class:Adafruit_I2CDevice
device	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	void* device;			\/* Pointer to I\/O device identifiler for the session *\/$/;"	m	struct:JDEC
device	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	void* device;			\/* Pointer to I\/O device identifiler for the session *\/$/;"	m	struct:JDEC
dibheadersize	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t dibheadersize;$/;"	m	struct:__anon4	file:
dirCache	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^uint8_t* ExFatFile::dirCache(uint8_t set, uint8_t options) {$/;"	f	class:ExFatFile
dirCache	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^uint8_t* ExFatPartition::dirCache(DirPos_t* pos, uint8_t options) {$/;"	f	class:ExFatPartition
dirEntriesPerCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t dirEntriesPerCluster() const {$/;"	f	class:FatPartition
dirEntry	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::dirEntry(DirFat_t* dst) {$/;"	f	class:FatFile
dirIndex	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint32_t dirIndex() const {return m_dirPos.position\/FS_DIR_SIZE;}$/;"	f	class:ExFatFile
dirIndex	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint16_t dirIndex() const {return m_dirIndex;}$/;"	f	class:FatFile
dirIndex	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint32_t dirIndex() const {$/;"	f	class:FsBaseFile
dirSeek	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^int8_t ExFatPartition::dirSeek(DirPos_t* pos, uint32_t offset) {$/;"	f	class:ExFatPartition
dirSize	./libraries/SdFat/src/FatLib/FatFile.cpp	/^uint32_t FatFile::dirSize() {$/;"	f	class:FatFile
dirty	./libraries/SdFat/src/common/FsCache.h	/^  void dirty() {$/;"	f	class:FsCache
disableI2C	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::disableI2C(void) {$/;"	f	class:Adafruit_TestBed
div_ceil	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^static inline uint32_t div_ceil(uint32_t v, uint32_t d) {$/;"	f	file:
div_ceil	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^static inline uint32_t div_ceil(uint32_t v, uint32_t d) {$/;"	f	file:
divmod10_asm16	./libraries/SdFat/src/common/FmtNumber.cpp	43;"	d	file:
divmod10_asm32	./libraries/SdFat/src/common/FmtNumber.cpp	71;"	d	file:
dma	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    lldesc_t *dma;$/;"	m	struct:__anon25
dma	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    lldesc_t *dma;$/;"	m	struct:__anon26
dma_buffer	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t  *dma_buffer;$/;"	m	struct:__anon26
dma_buffer_size	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_buffer_size;$/;"	m	struct:__anon26
dma_bytes_per_item	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_bytes_per_item;$/;"	m	struct:__anon26
dma_channel_handle	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    gdma_channel_handle_t dma_channel_handle;\/\/ESP32-S3$/;"	m	struct:__anon26
dma_elem_t	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^} dma_elem_t;$/;"	t	typeref:union:__anon8	file:
dma_filter	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static dma_filter_t dma_filter = ll_cam_dma_filter_jpeg;$/;"	v	file:
dma_filter_t	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^typedef size_t (*dma_filter_t)(uint8_t* dst, const uint8_t* src, size_t len);$/;"	t	file:
dma_half_buffer_cnt	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_half_buffer_cnt;$/;"	m	struct:__anon26
dma_half_buffer_size	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_half_buffer_size;$/;"	m	struct:__anon26
dma_intr_handle	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    intr_handle_t dma_intr_handle;\/\/ESP32-S3$/;"	m	struct:__anon26
dma_node_buffer_size	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_node_buffer_size;$/;"	m	struct:__anon26
dma_node_cnt	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t dma_node_cnt;$/;"	m	struct:__anon26
dma_num	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t dma_num;\/\/ESP32-S3$/;"	m	struct:__anon26
dmac_channel_disable	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void dmac_channel_disable(uint32_t ul_num) {$/;"	f	file:
dmac_channel_enable	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void dmac_channel_enable(uint32_t ul_num) {$/;"	f	file:
dmac_channel_transfer_done	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static bool dmac_channel_transfer_done(uint32_t ul_num) {$/;"	f	file:
dmac_disable	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void dmac_disable() {$/;"	f	file:
dmac_enable	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void dmac_enable() {$/;"	f	file:
dmpBitmap	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::dmpBitmap(print_t* pr) {$/;"	f	class:ExFatPartition
dmpCluster	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::dmpCluster(print_t* pr, uint32_t cluster,$/;"	f	class:ExFatPartition
dmpDirData	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void dmpDirData(print_t* pr, DirGeneric_t* dir) {$/;"	f	file:
dmpDirSector	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^bool FatPartition::dmpDirSector(print_t* pr, uint32_t sector) {$/;"	f	class:FatPartition
dmpFat	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::dmpFat(print_t* pr, uint32_t start, uint32_t count) {$/;"	f	class:ExFatPartition
dmpFat	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^void FatPartition::dmpFat(print_t* pr, uint32_t start, uint32_t count) {$/;"	f	class:FatPartition
dmpFile	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^void FatFile::dmpFile(print_t* pr, uint32_t pos, size_t n) {$/;"	f	class:FatFile
dmpRootDir	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^bool FatPartition::dmpRootDir(print_t* pr, uint32_t n) {$/;"	f	class:FatPartition
dmpSector	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::dmpSector(print_t* pr, uint32_t sector) {$/;"	f	class:ExFatPartition
dmpSector	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^void FatPartition::dmpSector(print_t* pr, uint32_t sector, uint8_t bits) {$/;"	f	class:FatPartition
dmsk	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE dmsk;				\/* Current bit in the current read byte *\/$/;"	m	struct:JDEC
dmsk	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE dmsk;				\/* Current bit in the current read byte *\/$/;"	m	struct:JDEC
do_fill	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::do_fill(unsigned len) {$/;"	f	class:ostream
doxygen	./libraries/Adafruit_NeoPixel/.github/workflows/githubci.yml	/^    - name: doxygen$/;"	k
doxygen	./libraries/Adafruit_TestBed/.github/workflows/githubci.yml	/^    - name: doxygen$/;"	k
dptr	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE* dptr;				\/* Current data read ptr *\/$/;"	m	struct:JDEC
dptr	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE* dptr;				\/* Current data read ptr *\/$/;"	m	struct:JDEC
driveSelect	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t driveSelect;$/;"	m	struct:biosParameterBlockExFat
emit_byte	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_byte(uint8 i)$/;"	f	class:jpge::jpeg_encoder
emit_dht	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_dht(uint8 *bits, uint8 *val, int index, bool ac_flag)$/;"	f	class:jpge::jpeg_encoder
emit_dhts	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_dhts()$/;"	f	class:jpge::jpeg_encoder
emit_dqt	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_dqt()$/;"	f	class:jpge::jpeg_encoder
emit_jfif_app0	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_jfif_app0()$/;"	f	class:jpge::jpeg_encoder
emit_marker	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_marker(int marker)$/;"	f	class:jpge::jpeg_encoder
emit_sof	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_sof()$/;"	f	class:jpge::jpeg_encoder
emit_sos	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_sos()$/;"	f	class:jpge::jpeg_encoder
emit_word	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::emit_word(uint i)$/;"	f	class:jpge::jpeg_encoder
en	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t en;$/;"	m	struct:__anon25
enableDmaIrs	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void enableDmaIrs() {$/;"	f	file:
enableGPIO	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void enableGPIO(bool enable) {$/;"	f	file:
end	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^void Adafruit_I2CDevice::end(void) {$/;"	f	class:Adafruit_I2CDevice
end	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^void Adafruit_I2CDevice::end(void) {$/;"	f	class:Adafruit_I2CDevice
end	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::end() {$/;"	f	class:BLESerial
end	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::end() {$/;"	f	class:BLESerial
end	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^void ESP32BootROMClass::end() {$/;"	f	class:ESP32BootROMClass
end	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t* end() {$/;"	f	class:ExFatPartition
end	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t* end() {$/;"	f	class:FatPartition
end	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint8_t* end() {$/;"	f	class:FsVolume
end	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^void SharedSpiCard::end() {$/;"	f	class:SharedSpiCard
end	./libraries/SdFat/src/SdCard/SdioCard.h	/^  void end() {}$/;"	f	class:SdioCard
end	./libraries/SdFat/src/SdFat.h	/^  void end() {$/;"	f	class:SdBase
end	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void end() {}$/;"	f	class:SdSpiDriverBareUno
end	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	/^  virtual void end() {}$/;"	f	class:SdSpiBaseClass
end	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void end() {}$/;"	f	class:SdSpiSoftDriver
end	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::end() {$/;"	f	class:SdSpiArduinoDriver
end	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual void end() {}$/;"	f	class:FsBlockDeviceInterface
end	./libraries/SdFat/src/common/FsName.h	/^  const char* end;$/;"	m	class:FsName
end	./libraries/SdFat/src/iostream/ios.h	/^    end$/;"	e	enum:ios_base::seekdir
endCHS	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t endCHS[3];$/;"	m	struct:mbrPartition
endFlash	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::endFlash(uint32_t reboot) {$/;"	f	class:ESP32BootROMClass
endFlashDefl	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::endFlashDefl(uint32_t reboot) {$/;"	f	class:ESP32BootROMClass
endMem	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::endMem(uint32_t entry) {$/;"	f	class:ESP32BootROMClass
endTime	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint32_t endTime;   \/\/\/< Latch timing reference$/;"	m	class:Adafruit_NeoPixel
endTransaction	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransaction(void) {$/;"	f	class:Adafruit_SPIDevice
endTransaction	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransaction(void) {$/;"	f	class:Adafruit_SPIDevice
endTransactionWithDeassertingCS	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransactionWithDeassertingCS() {$/;"	f	class:Adafruit_SPIDevice
endTransactionWithDeassertingCS	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransactionWithDeassertingCS() {$/;"	f	class:Adafruit_SPIDevice
end_x	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t end_x;$/;"	m	struct:__anon12
end_x	./libraries/esp32-camera/include/sensor.h	/^        uint16_t end_x;$/;"	m	struct:__anon13
end_y	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t end_y;$/;"	m	struct:__anon12
end_y	./libraries/esp32-camera/include/sensor.h	/^        uint16_t end_y;$/;"	m	struct:__anon13
endl	./libraries/SdFat/src/iostream/iostream.h	/^inline ostream& endl(ostream& os) {$/;"	f
entry	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t entry;$/;"	m	struct:__anon2
eof	./libraries/SdFat/src/iostream/ios.h	/^  bool eof() const {$/;"	f	class:ios
eofbit	./libraries/SdFat/src/iostream/ios.h	/^  static const iostate eofbit = 0x02;$/;"	m	class:ios_base
erase	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::erase(uint32_t firstSector, uint32_t lastSector) {$/;"	f	class:SharedSpiCard
erase	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::erase(uint32_t firstSector, uint32_t lastSector) {$/;"	f	class:SdioCard
eraseSingleBlock	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool eraseSingleBlock() const {return csd[10] & 0X40;}$/;"	f	struct:CSD
eraseSingleSectorEnable	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::eraseSingleSectorEnable() {$/;"	f	class:SharedSpiCard
eraseSize	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int eraseSize() const {return ((csd[10] & 0X3F) << 1 | csd[11] >> 7) + 1;}$/;"	f	struct:CSD
eraseSize	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t eraseSize[2];$/;"	m	struct:SdStatus
eraseTimeoutOffset	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t eraseTimeoutOffset;$/;"	m	struct:SdStatus
error	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void error(uint8_t code) {$/;"	f	class:SharedSpiCard
errorCode	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t errorCode() const {$/;"	f	class:SharedSpiCard
errorCode	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint8_t SdioCard::errorCode() const {$/;"	f	class:SdioCard
errorData	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint32_t errorData() const {$/;"	f	class:SharedSpiCard
errorData	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint32_t SdioCard::errorData() const {$/;"	f	class:SdioCard
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt() {errorHalt(&Serial);}$/;"	f	class:SdBase
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt(const __FlashStringHelper* msg) {$/;"	f	class:SdBase
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt(const char* msg) {errorHalt(&Serial, msg);}$/;"	f	class:SdBase
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt(print_t* pr) {$/;"	f	class:SdBase
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt(print_t* pr, const __FlashStringHelper* msg) {$/;"	f	class:SdBase
errorHalt	./libraries/SdFat/src/SdFat.h	/^  void errorHalt(print_t* pr, const char* msg) {$/;"	f	class:SdBase
errorLine	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint32_t SdioCard::errorLine() const {$/;"	f	class:SdioCard
errorPrint	./libraries/SdFat/src/SdFat.h	/^  void errorPrint(const __FlashStringHelper* msg) {errorPrint(&Serial, msg);}$/;"	f	class:SdBase
errorPrint	./libraries/SdFat/src/SdFat.h	/^  void errorPrint(const char* msg) {errorPrint(&Serial, msg);}$/;"	f	class:SdBase
errorPrint	./libraries/SdFat/src/SdFat.h	/^  void errorPrint(print_t* pr) {$/;"	f	class:SdBase
errorPrint	./libraries/SdFat/src/SdFat.h	/^  void errorPrint(print_t* pr, char const* msg) {$/;"	f	class:SdBase
errorPrint	./libraries/SdFat/src/SdFat.h	/^  void errorPrint(print_t* pr, const __FlashStringHelper* msg) {$/;"	f	class:SdBase
esp32_begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::esp32_begin(ESP32BootROMClass *bootrom,$/;"	f	class:Adafruit_TestBed
esp32_end	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::esp32_end(bool reset_esp) {$/;"	f	class:Adafruit_TestBed
esp32_programFlashDefl	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^size_t Adafruit_TestBed::esp32_programFlashDefl(const esp32_zipfile_t *zfile,$/;"	f	class:Adafruit_TestBed
esp32_s3_clearReset	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::esp32_s3_clearReset(void) { _esp32s3_in_reset = false; }$/;"	f	class:Adafruit_TestBed
esp32_s3_inReset	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::esp32_s3_inReset(void) { return _esp32s3_in_reset; }$/;"	f	class:Adafruit_TestBed
esp32_stub_loader_t	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^} esp32_stub_loader_t;$/;"	t	typeref:struct:__anon2
esp32_zipfile_t	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^} esp32_zipfile_t;$/;"	t	typeref:struct:__anon3
esp32boot	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  ESP32BootROMClass *esp32boot; \/\/ ESP32 ROM$/;"	m	class:Adafruit_TestBed
esp32s2_feather_test_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino = {$/;"	v
esp32s2_feather_test_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino = {$/;"	v
esp32s2_feather_test_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino_bootloader = {$/;"	v
esp32s2_feather_test_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino_bootloader = {$/;"	v
esp32s2_feather_test_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino_partitions = {$/;"	v
esp32s2_feather_test_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t esp32s2_feather_test_ino_partitions = {$/;"	v
esp32s3_feather_test_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino = {$/;"	v
esp32s3_feather_test_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino = {$/;"	v
esp32s3_feather_test_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino_bootloader = {$/;"	v
esp32s3_feather_test_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino_bootloader = {$/;"	v
esp32s3_feather_test_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino_partitions = {$/;"	v
esp32s3_feather_test_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t esp32s3_feather_test_ino_partitions = {$/;"	v
esp8266_blink_io0	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/esp8266_binaries.h	/^const esp32_zipfile_t esp8266_blink_io0 = {$/;"	v
espShow	./libraries/Adafruit_NeoPixel/esp.c	/^void espShow(uint8_t pin, uint8_t *pixels, uint32_t numBytes, boolean is800KHz) {$/;"	f
espShow	./libraries/Adafruit_NeoPixel/esp8266.c	/^IRAM_ATTR void espShow($/;"	f
esp_camera_deinit	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^esp_err_t esp_camera_deinit()$/;"	f
esp_camera_deinit	./libraries/esp32-camera/esp_camera.c	/^esp_err_t esp_camera_deinit()$/;"	f
esp_camera_fb_get	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^camera_fb_t *esp_camera_fb_get()$/;"	f
esp_camera_fb_get	./libraries/esp32-camera/esp_camera.c	/^camera_fb_t *esp_camera_fb_get()$/;"	f
esp_camera_fb_return	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^void esp_camera_fb_return(camera_fb_t *fb)$/;"	f
esp_camera_fb_return	./libraries/esp32-camera/esp_camera.c	/^void esp_camera_fb_return(camera_fb_t *fb)$/;"	f
esp_camera_init	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^esp_err_t esp_camera_init(const camera_config_t *config)$/;"	f
esp_camera_init	./libraries/esp32-camera/esp_camera.c	/^esp_err_t esp_camera_init(const camera_config_t *config)$/;"	f
esp_camera_load_from_nvs	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^esp_err_t esp_camera_load_from_nvs(const char *key)$/;"	f
esp_camera_load_from_nvs	./libraries/esp32-camera/esp_camera.c	/^esp_err_t esp_camera_load_from_nvs(const char *key)$/;"	f
esp_camera_return_all	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^void esp_camera_return_all(void) {$/;"	f
esp_camera_return_all	./libraries/esp32-camera/esp_camera.c	/^void esp_camera_return_all(void) {$/;"	f
esp_camera_save_to_nvs	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^esp_err_t esp_camera_save_to_nvs(const char *key)$/;"	f
esp_camera_save_to_nvs	./libraries/esp32-camera/esp_camera.c	/^esp_err_t esp_camera_save_to_nvs(const char *key)$/;"	f
esp_camera_sensor_get	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^sensor_t *esp_camera_sensor_get()$/;"	f
esp_camera_sensor_get	./libraries/esp32-camera/esp_camera.c	/^sensor_t *esp_camera_sensor_get()$/;"	f
esp_camera_sensor_get_info	./libraries/esp32-camera-2.0.8/driver/sensor.c	/^camera_sensor_info_t *esp_camera_sensor_get_info(sensor_id_t *id)$/;"	f
esp_camera_sensor_get_info	./libraries/esp32-camera/sensor.c	/^camera_sensor_info_t *esp_camera_sensor_get_info(sensor_id_t *id)$/;"	f
esp_jpg_decode	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^esp_err_t esp_jpg_decode(size_t len, jpg_scale_t scale, jpg_reader_cb reader, jpg_writer_cb writer, void * arg)$/;"	f
esp_jpg_decoder_t	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^} esp_jpg_decoder_t;$/;"	t	typeref:struct:__anon2	file:
esp_rom_delay_us	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	23;"	d	file:
ets_delay_us	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	48;"	d	file:
ets_delay_us	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	32;"	d	file:
ets_delay_us	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	35;"	d	file:
event_queue	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    QueueHandle_t event_queue;$/;"	m	struct:__anon26
exFatChecksum	./libraries/SdFat/src/common/FsStructs.h	/^inline uint32_t exFatChecksum(uint32_t sum, uint8_t data) {$/;"	f
exFatDirChecksum	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static uint16_t exFatDirChecksum(const void* dir, uint16_t checksum) {$/;"	f	file:
exFatDirChecksum	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^static uint16_t exFatDirChecksum(const uint8_t* data, uint16_t checksum) {$/;"	f	file:
exFatHash	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^inline uint16_t exFatHash(char c, uint16_t hash) {$/;"	f
exFatHash	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^inline uint16_t exFatHash(uint16_t u, uint16_t hash) {$/;"	f
exists	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^    bool exists(const char* path) {$/;"	f	class:ExFatFile
exists	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool exists(const String &path) {$/;"	f	class:ExFatVolume
exists	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool exists(const char* path) {$/;"	f	class:ExFatVolume
exists	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool exists(const char* path) {$/;"	f	class:FatFile
exists	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool exists(const String& path) {$/;"	f	class:FatVolume
exists	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool exists(const char* path) {$/;"	f	class:FatVolume
exists	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool exists(const char* path) {$/;"	f	class:FsBaseFile
exists	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool exists(const String &path) {$/;"	f	class:FsVolume
exists	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool exists(const char* path) {$/;"	f	class:FsVolume
explicateAllocationMode	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^bool  ESP32PWM::explicateAllocationMode=false;$/;"	m	class:ESP32PWM	file:
explicateAllocationMode	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static bool explicateAllocationMode;$/;"	m	class:ESP32PWM
extReserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  extReserved;$/;"	m	struct:biosParameterBlockFat16
extReserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  extReserved;$/;"	m	struct:biosParameterBlockFat32
extSignature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  extSignature;$/;"	m	struct:biosParameterBlockFat16
extSignature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  extSignature;$/;"	m	struct:biosParameterBlockFat32
fail	./libraries/SdFat/src/iostream/ios.h	/^  bool fail() const {$/;"	f	class:ios
failbit	./libraries/SdFat/src/iostream/ios.h	/^  static const iostate failbit = 0X04;$/;"	m	class:ios_base
fastBitWriteSafe	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastBitWriteSafe(volatile uint8_t* address, uint8_t mask, bool level) {$/;"	f
fastDdrWrite	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastDdrWrite(uint8_t pin, bool level) {$/;"	f
fastDigitalRead	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^bool fastDigitalRead(uint8_t pin) {$/;"	f
fastDigitalRead	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^inline bool fastDigitalRead(uint8_t pin) {$/;"	f
fastDigitalToggle	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^inline void fastDigitalToggle(uint8_t pin) {$/;"	f
fastDigitalToggle	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastDigitalToggle(uint8_t pin) {$/;"	f
fastDigitalWrite	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^inline void fastDigitalWrite(uint8_t pin, bool value) {$/;"	f
fastDigitalWrite	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastDigitalWrite(uint8_t pin, bool level) {$/;"	f
fastDigitalWrite	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastDigitalWrite(uint8_t pin, bool value) {$/;"	f
fastDigitalWrite	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastDigitalWrite(uint8_t pin, uint8_t val) {$/;"	f
fastPinConfig	./libraries/SdFat/src/DigitalIO/DigitalPin.h	289;"	d
fastPinMode	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^inline void fastPinMode(uint8_t pin, uint8_t mode) {$/;"	f
fastPinMode	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^void fastPinMode(uint8_t pin, uint8_t mode) {$/;"	f
fat32BackBootSector	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32BackBootSector[2];$/;"	m	struct:biosParameterBlockFat32
fat32FSInfoSector	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32FSInfoSector[2];$/;"	m	struct:biosParameterBlockFat32
fat32Flags	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32Flags[2];$/;"	m	struct:biosParameterBlockFat32
fat32Reserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32Reserved[12];$/;"	m	struct:biosParameterBlockFat32
fat32RootCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32RootCluster[4];$/;"	m	struct:biosParameterBlockFat32
fat32Version	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fat32Version[2];$/;"	m	struct:biosParameterBlockFat32
fatCachePrepare	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t* fatCachePrepare(uint32_t sector, uint8_t options) {$/;"	f	class:FatPartition
fatCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t fatCount() const {$/;"	f	class:FatPartition
fatCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParameterBlockFat16
fatCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fatCount;$/;"	m	struct:biosParameterBlockFat32
fatGet	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^int8_t ExFatPartition::fatGet(uint32_t cluster, uint32_t* value) {$/;"	f	class:ExFatPartition
fatGet	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^int8_t FatPartition::fatGet(uint32_t cluster, uint32_t* value) {$/;"	f	class:FatPartition
fatLength	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t fatLength() const {return m_fatLength;}$/;"	f	class:ExFatPartition
fatLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t fatLength[4];$/;"	m	struct:biosParameterBlockExFat
fatOffset	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t fatOffset[4];$/;"	m	struct:biosParameterBlockExFat
fatPut	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^bool ExFatPartition::fatPut(uint32_t cluster, uint32_t value) {$/;"	f	class:ExFatPartition
fatPut	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^bool FatPartition::fatPut(uint32_t cluster, uint32_t value) {$/;"	f	class:FatPartition
fatPutEOC	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool fatPutEOC(uint32_t cluster) {$/;"	f	class:FatPartition
fatStartSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t fatStartSector() const {return m_fatStartSector;}$/;"	f	class:ExFatPartition
fatStartSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t fatStartSector() const {$/;"	f	class:FatPartition
fatStartSector	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint32_t fatStartSector() const {$/;"	f	class:FsVolume
fatType	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t fatType() const {return m_fatType;}$/;"	f	class:ExFatPartition
fatType	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t fatType() const {$/;"	f	class:FatPartition
fatType	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint8_t fatType() const {$/;"	f	class:FsVolume
fb	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^    camera_fb_t fb;$/;"	m	struct:__anon6	file:
fb	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    camera_fb_t fb;$/;"	m	struct:__anon25
fb	./libraries/esp32-camera/esp_camera.c	/^    camera_fb_t fb;$/;"	m	struct:__anon11	file:
fb_bytes_per_pixel	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    float fb_bytes_per_pixel;$/;"	m	struct:__anon26
fb_bytes_per_pixel	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t fb_bytes_per_pixel;$/;"	m	struct:__anon26
fb_count	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    size_t fb_count;                \/*!< Number of frame buffers to be allocated. If more than one, then each frame will be acquired (double speed)  *\/$/;"	m	struct:__anon19
fb_count	./libraries/esp32-camera/include/esp_camera.h	/^    size_t fb_count;                \/*!< Number of frame buffers to be allocated. If more than one, then each frame will be acquired (double speed)  *\/$/;"	m	struct:__anon20
fb_location	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    camera_fb_location_t fb_location; \/*!< The location where the frame buffer will be allocated *\/$/;"	m	struct:__anon19
fb_location	./libraries/esp32-camera/include/esp_camera.h	/^    camera_fb_location_t fb_location; \/*!< The location where the frame buffer will be allocated *\/$/;"	m	struct:__anon20
fb_offset	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    size_t fb_offset;$/;"	m	struct:__anon25
fb_size	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t fb_size;$/;"	m	struct:__anon26
fclose	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::fclose() {$/;"	f	class:StdioStream
fclose	./libraries/SdFat/src/iostream/StdioStream.h	44;"	d
feather_esp32v2_blinky	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const esp32_zipfile_t feather_esp32v2_blinky = {$/;"	v
feather_esp32v2_blinky_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const esp32_zipfile_t feather_esp32v2_blinky_bootloader = {$/;"	v
feather_esp32v2_blinky_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32_v2_blinky_binaries.h	/^const esp32_zipfile_t feather_esp32v2_blinky_partitions = {$/;"	v
feof	./libraries/SdFat/src/iostream/StdioStream.h	/^  int feof() {$/;"	f	class:StdioStream
feof	./libraries/SdFat/src/iostream/StdioStream.h	45;"	d
ferror	./libraries/SdFat/src/iostream/StdioStream.h	/^  int ferror() {$/;"	f	class:StdioStream
ferror	./libraries/SdFat/src/iostream/StdioStream.h	46;"	d
fflush	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::fflush() {$/;"	f	class:StdioStream
fflush	./libraries/SdFat/src/iostream/StdioStream.h	47;"	d
fgetc	./libraries/SdFat/src/iostream/StdioStream.h	/^  int fgetc() {$/;"	f	class:StdioStream
fgetc	./libraries/SdFat/src/iostream/StdioStream.h	48;"	d
fgetpos	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^void ExFatFile::fgetpos(fspos_t* pos) const {$/;"	f	class:ExFatFile
fgetpos	./libraries/SdFat/src/FatLib/FatFile.cpp	/^void FatFile::fgetpos(fspos_t* pos) const {$/;"	f	class:FatFile
fgetpos	./libraries/SdFat/src/FsLib/FsFile.h	/^  void fgetpos(fspos_t* pos) const {$/;"	f	class:FsBaseFile
fgetpos	./libraries/SdFat/src/iostream/StdioStream.h	49;"	d
fgets	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^int ExFatFile::fgets(char* str, int num, char* delim) {$/;"	f	class:ExFatFile
fgets	./libraries/SdFat/src/FatLib/FatFile.cpp	/^int FatFile::fgets(char* str, int num, char* delim) {$/;"	f	class:FatFile
fgets	./libraries/SdFat/src/FsLib/FsFile.h	/^  int fgets(char* str, int num, char* delim = nullptr) {$/;"	f	class:FsBaseFile
fgets	./libraries/SdFat/src/iostream/StdioStream.cpp	/^char* StdioStream::fgets(char* str, size_t num, size_t* len) {$/;"	f	class:StdioStream
fgets	./libraries/SdFat/src/iostream/StdioStream.h	50;"	d
fileSize	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t fileSize() const {return m_validLength;}$/;"	f	class:ExFatFile
fileSize	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t fileSize() const {return m_fileSize;}$/;"	f	class:FatFile
fileSize	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint64_t fileSize() const {$/;"	f	class:FsBaseFile
fileSize	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  fileSize[4];$/;"	m	struct:__anon4
fileSystemRevision	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t fileSystemRevision[2];$/;"	m	struct:biosParameterBlockExFat
fileoffset_to_pixelarray	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t fileoffset_to_pixelarray;$/;"	m	struct:__anon4	file:
filesize	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t filesize;$/;"	m	struct:__anon4	file:
fill	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::fill(uint32_t c, uint16_t first, uint16_t count) {$/;"	f	class:Adafruit_NeoPixel
fill	./libraries/SdFat/src/iostream/ios.h	/^  char fill() {$/;"	f	class:ios_base
fill	./libraries/SdFat/src/iostream/ios.h	/^  char fill(char c) {$/;"	f	class:ios_base
fillBuf	./libraries/SdFat/src/iostream/StdioStream.cpp	/^bool StdioStream::fillBuf() {$/;"	f	class:StdioStream
fillGet	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::fillGet() {$/;"	f	class:StdioStream
fill_not_left	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::fill_not_left(unsigned len) {$/;"	f	class:ostream
firstBlock	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t firstBlock() const {return firstSector();}$/;"	f	class:FatFile
firstCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  firstCluster[4];$/;"	m	struct:__anon10
firstCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  firstCluster[4];$/;"	m	struct:__anon6
firstCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  firstCluster[4];$/;"	m	struct:__anon7
firstClusterHigh	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  firstClusterHigh[2];$/;"	m	struct:__anon4
firstClusterLow	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  firstClusterLow[2];$/;"	m	struct:__anon4
firstSector	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^uint32_t ExFatFile::firstSector() const {$/;"	f	class:ExFatFile
firstSector	./libraries/SdFat/src/FatLib/FatFile.cpp	/^uint32_t FatFile::firstSector() const {$/;"	f	class:FatFile
firstSector	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint32_t firstSector() const {$/;"	f	class:FsBaseFile
flags	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t flags;$/;"	m	class:FatLfn_t
flags	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t flags;$/;"	m	class:FatSfn_t
flags	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  flags;$/;"	m	struct:__anon10
flags	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  flags;$/;"	m	struct:__anon6
flags	./libraries/SdFat/src/iostream/ios.h	/^  fmtflags flags() const {$/;"	f	class:ios_base
flags	./libraries/SdFat/src/iostream/ios.h	/^  fmtflags flags(fmtflags fl) {$/;"	f	class:ios_base
flagsToBase	./libraries/SdFat/src/iostream/ios.h	/^  uint8_t flagsToBase() {$/;"	f	class:ios_base
flash	./libraries/Flash/flash.h	/^    static void flash() {$/;"	f	class:Flash
flash	./libraries/Flash/flash.h	/^    static void flash(int repeat) {$/;"	f	class:Flash
flush	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::flush(void) {$/;"	f	class:BLESerial
flush	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::flush(void) {$/;"	f	class:BLESerial
flush	./libraries/SdFat/src/BufferedPrint.h	/^  void flush() {sync();}$/;"	f	class:BufferedPrint
flush	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  void flush() {sync();}$/;"	f	class:ExFatFile
flush	./libraries/SdFat/src/FatLib/FatFile.h	/^  void flush() {sync();}$/;"	f	class:FatFile
flush	./libraries/SdFat/src/FsLib/FsFile.h	/^  void flush() {sync();}$/;"	f	class:FsBaseFile
flush	./libraries/SdFat/src/MinimumSerial.cpp	/^void MinimumSerial::flush() {$/;"	f	class:MinimumSerial
flush	./libraries/SdFat/src/common/ArduinoFiles.h	/^  void flush() {$/;"	f	class:StreamFile
flush	./libraries/SdFat/src/iostream/iostream.h	/^inline ostream& flush(ostream& os) {$/;"	f
flush	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& flush() {$/;"	f	class:ostream
flushBuf	./libraries/SdFat/src/iostream/StdioStream.cpp	/^bool StdioStream::flushBuf() {$/;"	f	class:StdioStream
flushPut	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::flushPut(uint8_t c) {$/;"	f	class:StdioStream
flush_output_buffer	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::flush_output_buffer()$/;"	f	class:jpge::jpeg_encoder
fmt2bmp	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^bool fmt2bmp(uint8_t *src, size_t src_len, uint16_t width, uint16_t height, pixformat_t format, uint8_t ** out, size_t * out_len)$/;"	f
fmt2jpg	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^bool fmt2jpg(uint8_t *src, size_t src_len, uint16_t width, uint16_t height, pixformat_t format, uint8_t quality, uint8_t ** out, size_t * out_len)$/;"	f
fmt2jpg_cb	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^bool fmt2jpg_cb(uint8_t *src, size_t src_len, uint16_t width, uint16_t height, pixformat_t format, uint8_t quality, jpg_out_cb cb, void * arg)$/;"	f
fmt2rgb888	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^bool fmt2rgb888(const uint8_t *src_buf, size_t src_len, pixformat_t format, uint8_t * rgb_buf)$/;"	f
fmtBase10	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtBase10(char* str, uint16_t n) {$/;"	f
fmtBase10	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtBase10(char* str, uint32_t n) {$/;"	f
fmtDouble	./libraries/SdFat/src/common/FmtNumber.cpp	/^char *fmtDouble(char *str, double num, uint8_t prec, bool altFmt) {$/;"	f
fmtDouble	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtDouble(char* str, double value,$/;"	f
fmtHex	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtHex(char* str, uint32_t n) {$/;"	f
fmtNum	./libraries/SdFat/src/iostream/ostream.h	/^  char* fmtNum(T n, char *ptr, uint8_t base) {$/;"	f	class:ostream
fmtSigned	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtSigned(char* str, int32_t num, uint8_t base, bool caps) {$/;"	f
fmtSpace	./libraries/SdFat/src/iostream/StdioStream.cpp	/^char* StdioStream::fmtSpace(uint8_t len) {$/;"	f	class:StdioStream
fmtUnsigned	./libraries/SdFat/src/common/FmtNumber.cpp	/^char* fmtUnsigned(char* str, uint32_t num, uint8_t base, bool caps) {$/;"	f
fmtflags	./libraries/SdFat/src/iostream/ios.h	/^  typedef unsigned int fmtflags;$/;"	t	class:ios_base
fopen	./libraries/SdFat/src/iostream/StdioStream.cpp	/^bool StdioStream::fopen(const char* path, const char* mode) {$/;"	f	class:StdioStream
fopen	./libraries/SdFat/src/iostream/StdioStream.h	51;"	d
format	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^bool ExFatFormatter::format(FsBlockDevice* dev, uint8_t* secBuf, print_t* pr) {$/;"	f	class:ExFatFormatter
format	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^bool FatFormatter::format(FsBlockDevice* dev, uint8_t* secBuf, print_t* pr) {$/;"	f	class:FatFormatter
format	./libraries/SdFat/src/FsLib/FsFormatter.h	/^  bool format(FsBlockDevice* dev, uint8_t* secBuffer, print_t* pr = nullptr) {$/;"	f	class:FsFormatter
format	./libraries/SdFat/src/SdFat.h	/^  bool format(print_t* pr = nullptr) {$/;"	f	class:SdBase
format	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    pixformat_t format;         \/*!< Format of the pixel data *\/$/;"	m	struct:__anon22
format	./libraries/esp32-camera/include/esp_camera.h	/^    pixformat_t format;         \/*!< Format of the pixel data *\/$/;"	m	struct:__anon23
fprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int fprintf(T *file, const char* fmt, ...) {$/;"	f
fprintf	./libraries/SdFat/src/iostream/StdioStream.h	52;"	d
fputc	./libraries/SdFat/src/iostream/StdioStream.h	/^  int fputc(int c) {$/;"	f	class:StdioStream
fputc	./libraries/SdFat/src/iostream/StdioStream.h	53;"	d
fputs	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::fputs(const char* str) {$/;"	f	class:StdioStream
fputs	./libraries/SdFat/src/iostream/StdioStream.h	54;"	d
frame2bmp	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^bool frame2bmp(camera_fb_t * fb, uint8_t ** out, size_t * out_len)$/;"	f
frame2jpg	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^bool frame2jpg(camera_fb_t * fb, uint8_t quality, uint8_t ** out, size_t * out_len)$/;"	f
frame2jpg_cb	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^bool frame2jpg_cb(camera_fb_t * fb, uint8_t quality, jpg_out_cb cb, void * arg)$/;"	f
frame_buffer_queue	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    QueueHandle_t frame_buffer_queue;$/;"	m	struct:__anon26
frame_cnt	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t frame_cnt;$/;"	m	struct:__anon26
frame_copy_cnt	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t frame_copy_cnt;$/;"	m	struct:__anon26
frame_size	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    framesize_t frame_size;         \/*!< Size of the output image: FRAMESIZE_ + QVGA|CIF|VGA|SVGA|XGA|SXGA|UXGA  *\/$/;"	m	struct:__anon19
frame_size	./libraries/esp32-camera/include/esp_camera.h	/^    framesize_t frame_size;         \/*!< Size of the output image: FRAMESIZE_ + QVGA|CIF|VGA|SVGA|XGA|SXGA|UXGA  *\/$/;"	m	struct:__anon20
frames	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    cam_frame_t *frames;$/;"	m	struct:__anon26
framesize	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    framesize_t framesize;\/\/0 - 10$/;"	m	struct:__anon15
framesize	./libraries/esp32-camera/include/sensor.h	/^    framesize_t framesize;\/\/0 - 10$/;"	m	struct:__anon16
framesize_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} framesize_t;$/;"	t	typeref:enum:__anon8
framesize_t	./libraries/esp32-camera/include/sensor.h	/^} framesize_t;$/;"	t	typeref:enum:__anon9
fread	./libraries/SdFat/src/iostream/StdioStream.cpp	/^size_t StdioStream::fread(void* ptr, size_t size, size_t count) {$/;"	f	class:StdioStream
fread	./libraries/SdFat/src/iostream/StdioStream.h	55;"	d
freeChain	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^bool ExFatPartition::freeChain(uint32_t cluster) {$/;"	f	class:ExFatPartition
freeChain	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^bool FatPartition::freeChain(uint32_t cluster) {$/;"	f	class:FatPartition
freeClusterCount	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^int32_t ExFatPartition::freeClusterCount() {$/;"	f	class:ExFatPartition
freeClusterCount	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^int32_t FatPartition::freeClusterCount() {$/;"	f	class:FatPartition
freeClusterCount	./libraries/SdFat/src/FsLib/FsVolume.h	/^  int32_t freeClusterCount() const {$/;"	f	class:FsVolume
freeClusterCount	./libraries/SdFat/src/SdFat.h	/^  uint32_t freeClusterCount() {$/;"	f	class:SdBase
freeCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t freeCount[4];$/;"	m	struct:FsInfoSector
freopen	./libraries/SdFat/src/iostream/StdioStream.h	56;"	d
fsFmtDate	./libraries/SdFat/src/common/FsDateTime.cpp	/^char* fsFmtDate(char* str, uint16_t date) {$/;"	f
fsFmtField	./libraries/SdFat/src/common/FsDateTime.cpp	/^static char* fsFmtField(char* str, uint16_t n, char sep) {$/;"	f	file:
fsFmtTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^char* fsFmtTime(char* str, uint16_t time) {$/;"	f
fsFmtTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^char* fsFmtTime(char* str, uint16_t time, uint8_t sec100) {$/;"	f
fsFmtTimeZone	./libraries/SdFat/src/common/FsDateTime.cpp	/^char* fsFmtTimeZone(char* str, int8_t tz) {$/;"	f
fsPrintDate	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintDate(print_t* pr, uint16_t date) {$/;"	f
fsPrintDateTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintDateTime(print_t* pr, uint16_t date, uint16_t time) {$/;"	f
fsPrintDateTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintDateTime(print_t* pr, uint32_t dateTime) {$/;"	f
fsPrintDateTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintDateTime(print_t* pr,$/;"	f
fsPrintTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintTime(print_t* pr, uint16_t time) {$/;"	f
fsPrintTime	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintTime(print_t* pr, uint16_t time, uint8_t sec100) {$/;"	f
fsPrintTimeZone	./libraries/SdFat/src/common/FsDateTime.cpp	/^size_t fsPrintTimeZone(print_t* pr, int8_t tz) {$/;"	f
fscanf	./libraries/SdFat/src/iostream/StdioStream.h	57;"	d
fseek	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::fseek(int32_t offset, int origin) {$/;"	f	class:StdioStream
fseek	./libraries/SdFat/src/iostream/StdioStream.h	58;"	d
fsetpos	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^void ExFatFile::fsetpos(const fspos_t* pos) {$/;"	f	class:ExFatFile
fsetpos	./libraries/SdFat/src/FatLib/FatFile.cpp	/^void FatFile::fsetpos(const fspos_t* pos) {$/;"	f	class:FatFile
fsetpos	./libraries/SdFat/src/FsLib/FsFile.h	/^  void fsetpos(const fspos_t* pos) {$/;"	f	class:FsBaseFile
fsetpos	./libraries/SdFat/src/iostream/StdioStream.h	59;"	d
fspos_t	./libraries/SdFat/src/common/FsStructs.h	/^} fspos_t;$/;"	t	typeref:struct:__anon2
fstream	./libraries/SdFat/src/iostream/fstream.h	/^  explicit fstream(const char* path, openmode mode = in | out) {$/;"	f	class:fstream
fstream	./libraries/SdFat/src/iostream/fstream.h	/^  fstream() {}$/;"	f	class:fstream
fstream	./libraries/SdFat/src/iostream/fstream.h	/^class fstream : public iostream, StreamBaseClass  {$/;"	c
fstream_h	./libraries/SdFat/src/iostream/fstream.h	30;"	d
ftell	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int32_t StdioStream::ftell() {$/;"	f	class:StdioStream
ftell	./libraries/SdFat/src/iostream/StdioStream.h	60;"	d
fwrite	./libraries/SdFat/src/iostream/StdioStream.cpp	/^size_t StdioStream::fwrite(const void* ptr, size_t size, size_t count) {$/;"	f	class:StdioStream
fwrite	./libraries/SdFat/src/iostream/StdioStream.h	61;"	d
gOffset	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t gOffset;    \/\/\/< Index of green byte$/;"	m	class:Adafruit_NeoPixel
g_decode_func	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static const decode_func_t g_decode_func[2][2] = {$/;"	v	file:
g_ledc_channel	./libraries/esp32-camera-2.0.8/target/xclk.c	/^static ledc_channel_t g_ledc_channel = NO_CAMERA_LEDC_CHANNEL;$/;"	v	file:
g_sensors	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static const sensor_func_t g_sensors[] = {$/;"	v	file:
g_sensors	./libraries/esp32-camera/esp_camera.c	/^static const sensor_func_t g_sensors[] = {$/;"	v	file:
gainceiling	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t gainceiling;\/\/0 - 6$/;"	m	struct:__anon15
gainceiling	./libraries/esp32-camera/include/sensor.h	/^    uint8_t gainceiling;\/\/0 - 6$/;"	m	struct:__anon16
gainceiling_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} gainceiling_t;$/;"	t	typeref:enum:__anon11
gainceiling_t	./libraries/esp32-camera/include/sensor.h	/^} gainceiling_t;$/;"	t	typeref:enum:__anon12
gamma32	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^uint32_t Adafruit_NeoPixel::gamma32(uint32_t x) {$/;"	f	class:Adafruit_NeoPixel
gamma8	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  static uint8_t gamma8(uint8_t x) {$/;"	f	class:Adafruit_NeoPixel
gc0308_detect	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^int gc0308_detect(int slv_addr, sensor_id_t *id)$/;"	f
gc0308_init	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^int gc0308_init(sensor_t *sensor)$/;"	f
gc0308_sensor_default_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/gc0308_settings.h	/^static const uint8_t gc0308_sensor_default_regs[][2] = {$/;"	v
gc032a_default_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/gc032a_settings.h	/^static const uint16_t gc032a_default_regs[][2] = {$/;"	v
gc032a_detect	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^int gc032a_detect(int slv_addr, sensor_id_t *id)$/;"	f
gc032a_init	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^int gc032a_init(sensor_t *sensor)$/;"	f
gc2145_default_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/gc2145_settings.h	/^static const uint16_t gc2145_default_init_regs[][2] = {$/;"	v
gc2145_detect	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^int gc2145_detect(int slv_addr, sensor_id_t *id)$/;"	f
gc2145_init	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^int gc2145_init(sensor_t *sensor)$/;"	f
gcount	./libraries/SdFat/src/iostream/istream.h	/^  streamsize gcount() const {$/;"	f	class:istream
get	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^  uint32_t get() { return ~crc; }$/;"	f	class:BrainCRC32
get	./libraries/SdFat/src/iostream/istream.cpp	/^int istream::get() {$/;"	f	class:istream
get	./libraries/SdFat/src/iostream/istream.cpp	/^istream& istream::get(char *str, streamsize n, char delim) {$/;"	f	class:istream
get	./libraries/SdFat/src/iostream/istream.cpp	/^istream& istream::get(char& c) {$/;"	f	class:istream
get16	./libraries/SdFat/src/common/FsName.cpp	/^uint16_t FsName::get16() {$/;"	f	class:FsName
get16	./libraries/SdFat/src/common/FsName.h	/^  uint16_t get16() {return atEnd() ? 0 : *next++;}$/;"	f	class:FsName
getAccessDate	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::getAccessDate(uint16_t* pdate) {$/;"	f	class:FatFile
getAccessDateTime	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::getAccessDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:ExFatFile
getAccessDateTime	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool getAccessDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FatFile
getAccessDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool getAccessDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FsBaseFile
getBool	./libraries/SdFat/src/iostream/istream.cpp	/^void istream::getBool(bool *b) {$/;"	f	class:istream
getBrightness	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^uint8_t Adafruit_NeoPixel::getBrightness(void) const { return brightness - 1; }$/;"	f	class:Adafruit_NeoPixel
getChannel	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^int ESP32PWM::getChannel() {$/;"	f	class:ESP32PWM
getChar	./libraries/SdFat/src/iostream/istream.cpp	/^void istream::getChar(char* ch) {$/;"	f	class:istream
getCreateDateTime	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::getCreateDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:ExFatFile
getCreateDateTime	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::getCreateDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FatFile
getCreateDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool getCreateDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FsBaseFile
getDouble	./libraries/SdFat/src/iostream/istream.cpp	/^bool istream::getDouble(double* value) {$/;"	f	class:istream
getDutyScaled	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::getDutyScaled() {$/;"	f	class:ESP32PWM
getError	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t getError() const {$/;"	f	class:ExFatFile
getError	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t getError() const {return m_error;}$/;"	f	class:FatFile
getError	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint8_t getError() const {$/;"	f	class:FsBaseFile
getFlashWriteSize	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^uint32_t ESP32BootROMClass::getFlashWriteSize(void) {$/;"	f	class:ESP32BootROMClass
getLe16	./libraries/SdFat/src/common/FsStructs.h	/^inline uint16_t getLe16(const uint8_t* src) {$/;"	f
getLe32	./libraries/SdFat/src/common/FsStructs.h	/^inline uint32_t getLe32(const uint8_t* src) {$/;"	f
getLe64	./libraries/SdFat/src/common/FsStructs.h	/^inline uint64_t getLe64(const uint8_t* src) {$/;"	f
getLfnChar	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static uint16_t getLfnChar(DirLfn_t* ldir, uint8_t i) {$/;"	f	file:
getLfnChar	./libraries/SdFat/src/FatLib/FatName.cpp	/^uint16_t FatFile::getLfnChar(DirLfn_t* ldir, uint8_t i) {$/;"	f	class:FatFile
getModifyDateTime	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::getModifyDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:ExFatFile
getModifyDateTime	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::getModifyDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FatFile
getModifyDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool getModifyDateTime(uint16_t* pdate, uint16_t* ptime) {$/;"	f	class:FsBaseFile
getName	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t getName(char* name, size_t size) {$/;"	f	class:ExFatFile
getName	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::getName(char* name, size_t size) {$/;"	f	class:FatFile
getName	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t getName(char* name, size_t len) {$/;"	f	class:FsBaseFile
getName7	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^size_t ExFatFile::getName7(char* name, size_t count) {$/;"	f	class:ExFatFile
getName7	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::getName7(char* name, size_t size) {$/;"	f	class:FatFile
getName8	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^size_t ExFatFile::getName8(char* name, size_t count) {$/;"	f	class:ExFatFile
getName8	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::getName8(char* name, size_t size) {$/;"	f	class:FatFile
getNumber	./libraries/SdFat/src/iostream/istream.cpp	/^bool istream::getNumber(uint32_t posMax, uint32_t negMax, uint32_t* num) {$/;"	f	class:istream
getNumber	./libraries/SdFat/src/iostream/istream.h	/^void istream::getNumber(T* value) {$/;"	f	class:istream
getOscillatorFrequency	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^uint32_t Adafruit_PWMServoDriver::getOscillatorFrequency(void) {$/;"	f	class:Adafruit_PWMServoDriver
getOscillatorFrequency	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^uint32_t Adafruit_PWMServoDriver::getOscillatorFrequency(void) {$/;"	f	class:Adafruit_PWMServoDriver
getPWM	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^uint16_t Adafruit_PWMServoDriver::getPWM(uint8_t num, bool off) {$/;"	f	class:Adafruit_PWMServoDriver
getPWM	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^uint16_t Adafruit_PWMServoDriver::getPWM(uint8_t num, bool off) {$/;"	f	class:Adafruit_PWMServoDriver
getPin	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  int16_t getPin(void) const { return pin; };$/;"	f	class:Adafruit_NeoPixel
getPin	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	int getPin() {$/;"	f	class:ESP32PWM
getPixelColor	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^uint32_t Adafruit_NeoPixel::getPixelColor(uint16_t n) const {$/;"	f	class:Adafruit_NeoPixel
getPixels	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t *getPixels(void) const { return pixels; };$/;"	f	class:Adafruit_NeoPixel
getPwm	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^ESP32PWM * Servo::getPwm(){$/;"	f	class:Servo
getSFN	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::getSFN(char* name, size_t size) {$/;"	f	class:FatFile
getStr	./libraries/SdFat/src/iostream/istream.cpp	/^void istream::getStr(char *str) {$/;"	f	class:istream
getTimer	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	int getTimer() {$/;"	f	class:ESP32PWM
getWriteError	./libraries/SdFat/extras/attic/PrintBasic.h	/^  int getWriteError() {$/;"	f	class:PrintBasic
getWriteError	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool getWriteError() const {$/;"	f	class:ExFatFile
getWriteError	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool getWriteError() const {$/;"	f	class:FatFile
getWriteError	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool getWriteError() const {$/;"	f	class:FsBaseFile
getWriteError	./libraries/SdFat/src/common/PrintBasic.h	/^  int getWriteError() {$/;"	f	class:PrintBasic
getWriteError	./libraries/SdFat/src/iostream/fstream.h	/^  bool getWriteError() {$/;"	f	class:StreamBaseClass
get_aec_value	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int get_aec_value(sensor_t *sensor)$/;"	f	file:
get_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int get_aec_value(sensor_t *sensor)$/;"	f	file:
get_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int get_aec_value(sensor_t *sensor)$/;"	f	file:
get_agc_gain	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int get_agc_gain(sensor_t *sensor)$/;"	f	file:
get_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int get_agc_gain(sensor_t *sensor)$/;"	f	file:
get_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int get_agc_gain(sensor_t *sensor)$/;"	f	file:
get_cam_format_name	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static const char *get_cam_format_name(pixformat_t pixel_format)$/;"	f	file:
get_denoise	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int get_denoise(sensor_t *sensor)$/;"	f	file:
get_denoise	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int get_denoise(sensor_t *sensor)$/;"	f	file:
get_denoise	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int get_denoise(sensor_t *sensor)$/;"	f	file:
get_output_data_format	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static pixformat_t get_output_data_format(camera_conv_mode_t conv_mode)$/;"	f	file:
get_output_data_format	./libraries/esp32-camera/esp_camera.c	/^static pixformat_t get_output_data_format(camera_conv_mode_t conv_mode)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*get_reg)             (sensor_t *sensor, int reg, int mask);$/;"	m	struct:_sensor
get_reg	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int get_reg(sensor_t *sensor, int reg, int reg_value_mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int get_reg(sensor_t *sensor, int reg, int mask)$/;"	f	file:
get_reg	./libraries/esp32-camera/include/sensor.h	/^    int  (*get_reg)             (sensor_t *sensor, int reg, int mask);$/;"	m	struct:_sensor
get_reg_bits	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int get_reg_bits(sensor_t *sensor, uint8_t reg, uint8_t offset, uint8_t length)$/;"	f	file:
get_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static uint8_t get_reg_bits(sensor_t *sensor, uint8_t bank, uint8_t reg, uint8_t offset, uint8_t mask)$/;"	f	file:
get_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int get_reg_bits(sensor_t *sensor, uint8_t reg, uint8_t offset, uint8_t length)$/;"	f	file:
get_size	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual size_t get_size() const$/;"	f	class:callback_stream
get_size	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual size_t get_size() const$/;"	f	class:memory_stream
getc	./libraries/SdFat/src/iostream/StdioStream.h	/^  int getc() {$/;"	f	class:StdioStream
getc	./libraries/SdFat/src/iostream/StdioStream.h	62;"	d
getch	./libraries/SdFat/src/common/FsName.h	/^  char getch() {return atEnd() ? 0 : *next++;}$/;"	f	class:FsName
getch	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^int16_t StreamBaseClass::getch() {$/;"	f	class:StreamBaseClass
getch	./libraries/SdFat/src/iostream/bufstream.h	/^  int16_t getch() {$/;"	f	class:ibufstream
getch	./libraries/SdFat/src/iostream/fstream.h	/^  int16_t getch() {$/;"	f	class:fstream
getch	./libraries/SdFat/src/iostream/fstream.h	/^  int16_t getch() {$/;"	f	class:ifstream
getch	./libraries/SdFat/src/iostream/istream.h	/^  int16_t getch(pos_t* pos) {$/;"	f	class:istream
getchar	./libraries/SdFat/src/iostream/StdioStream.h	63;"	d
getline	./libraries/SdFat/src/iostream/istream.cpp	/^istream& istream::getline(char *str, streamsize n, char delim) {$/;"	f	class:istream
getmode	./libraries/SdFat/src/iostream/fstream.h	/^  ios::openmode getmode() {$/;"	f	class:StreamBaseClass
getpos	./libraries/SdFat/src/iostream/bufstream.h	/^  void getpos(pos_t* pos) {$/;"	f	class:ibufstream
getpos	./libraries/SdFat/src/iostream/fstream.h	/^  void getpos(pos_t* pos) {$/;"	f	class:fstream
getpos	./libraries/SdFat/src/iostream/fstream.h	/^  void getpos(pos_t* pos) {$/;"	f	class:ifstream
gets	./libraries/SdFat/src/iostream/StdioStream.h	64;"	d
good	./libraries/SdFat/src/iostream/ios.h	/^  bool good() const {$/;"	f	class:ios
goodbit	./libraries/SdFat/src/iostream/ios.h	/^  static const iostate goodbit = 0x00;$/;"	m	class:ios_base
gpioMux	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void gpioMux(uint8_t mode) {$/;"	f	file:
gpioPin	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint32_t gpioPin;       \/\/\/< Output GPIO PIN$/;"	m	class:Adafruit_NeoPixel
gpioPort	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  GPIO_TypeDef *gpioPort; \/\/\/< Output GPIO PORT$/;"	m	class:Adafruit_NeoPixel
gpio_ll_get_level	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static inline int gpio_ll_get_level(gpio_dev_t *hw, int gpio_num)$/;"	f	file:
gpio_matrix_in	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	44;"	d	file:
gpio_matrix_in	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	31;"	d	file:
gpio_matrix_in	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	33;"	d	file:
gpio_matrix_out	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	34;"	d	file:
grab_mode	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    camera_grab_mode_t grab_mode;   \/*!< When buffers should be filled *\/$/;"	m	struct:__anon19
grab_mode	./libraries/esp32-camera/include/esp_camera.h	/^    camera_grab_mode_t grab_mode;   \/*!< When buffers should be filled *\/$/;"	m	struct:__anon20
gx	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t gx;$/;"	m	struct:data_t
gy	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t gy;$/;"	m	struct:data_t
gz	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  int16_t gz;$/;"	m	struct:data_t
hasDedicatedSpi	./libraries/SdFat/src/SdCard/SdCardInterface.h	/^  virtual bool hasDedicatedSpi() {return false;}$/;"	f	class:SdCardInterface
hasDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool hasDedicatedSpi() {return false;}$/;"	f	class:SharedSpiCard
hasDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool hasDedicatedSpi() {return true;}$/;"	f	class:DedicatedSpiCard
hasDedicatedSpi	./libraries/SdFat/src/SdFat.h	/^  bool hasDedicatedSpi() {return m_card ? m_card->hasDedicatedSpi() : false;}$/;"	f	class:SdBase
hasPwm	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static bool hasPwm(int pin) {$/;"	f	class:ESP32PWM
hashDir	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static uint16_t hashDir(DirName_t* dir, uint16_t hash) {$/;"	f	file:
hashName	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^bool ExFatFile::hashName(ExName_t* fname) {$/;"	f	class:ExFatFile
headCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  headCount[2];$/;"	m	struct:biosParameterBlockFat16
headCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  headCount[2];$/;"	m	struct:biosParameterBlockFat32
height	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^        uint16_t height;$/;"	m	struct:__anon5	file:
height	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    int32_t height;$/;"	m	struct:__anon4	file:
height	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    size_t height;              \/*!< Height of the buffer in pixels *\/$/;"	m	struct:__anon22
height	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        const uint16_t height;$/;"	m	struct:__anon13
height	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	UINT width, height;		\/* Size of the input image (pixel) *\/$/;"	m	struct:JDEC
height	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	UINT width, height;		\/* Size of the input image (pixel) *\/$/;"	m	struct:JDEC
height	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint16_t height;$/;"	m	struct:__anon26
height	./libraries/esp32-camera/include/esp_camera.h	/^    size_t height;              \/*!< Height of the buffer in pixels *\/$/;"	m	struct:__anon23
height	./libraries/esp32-camera/include/sensor.h	/^        const uint16_t height;$/;"	m	struct:__anon14
hex	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags hex        = 0x0010;$/;"	m	class:ios_base
hex	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& hex(ios_base& str) {$/;"	f
hidddenSectors	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  hidddenSectors[4];$/;"	m	struct:biosParameterBlockFat16
hidddenSectors	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  hidddenSectors[4];$/;"	m	struct:biosParameterBlockFat32
high	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void high() {write(true);}$/;"	f	class:DigitalPin
highSurrogate	./libraries/SdFat/src/common/FsUtf.h	/^  inline uint16_t highSurrogate(uint32_t cp) {$/;"	f	namespace:FsUtf
hmirror	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t hmirror;$/;"	m	struct:__anon15
hmirror	./libraries/esp32-camera/include/sensor.h	/^    uint8_t hmirror;$/;"	m	struct:__anon16
huffbits	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE* huffbits[2][2];	\/* Huffman bit distribution tables [id][dcac] *\/$/;"	m	struct:JDEC
huffbits	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE* huffbits[2][2];	\/* Huffman bit distribution tables [id][dcac] *\/$/;"	m	struct:JDEC
huffcode	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD* huffcode[2][2];	\/* Huffman code word tables [id][dcac] *\/$/;"	m	struct:JDEC
huffcode	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD* huffcode[2][2];	\/* Huffman code word tables [id][dcac] *\/$/;"	m	struct:JDEC
huffdata	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE* huffdata[2][2];	\/* Huffman decoded data tables [id][dcac] *\/$/;"	m	struct:JDEC
huffdata	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE* huffdata[2][2];	\/* Huffman decoded data tables [id][dcac] *\/$/;"	m	struct:JDEC
huffext	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^INT huffext (			\/* >=0: decoded data, <0: error code *\/$/;"	f	file:
i2c_dev	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.h	/^  Adafruit_I2CDevice *i2c_dev = NULL; \/\/\/< Pointer to I2C bus interface$/;"	m	class:Adafruit_PWMServoDriver
i2c_dev	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.h	/^  Adafruit_I2CDevice *i2c_dev = NULL; \/\/\/< Pointer to I2C bus interface$/;"	m	class:Adafruit_PWMServoDriver
i2c_master_init	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static esp_err_t i2c_master_init(int i2c_port)$/;"	f	file:
i2s_sampling_mode_t	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^} i2s_sampling_mode_t;$/;"	t	typeref:enum:__anon10	file:
ibufstream	./libraries/SdFat/src/iostream/bufstream.h	/^  explicit ibufstream(const char* str) {$/;"	f	class:ibufstream
ibufstream	./libraries/SdFat/src/iostream/bufstream.h	/^  ibufstream() {}$/;"	f	class:ibufstream
ibufstream	./libraries/SdFat/src/iostream/bufstream.h	/^class ibufstream : public istream {$/;"	c
id	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    sensor_id_t id;             \/\/ Sensor ID.$/;"	m	struct:_sensor
id	./libraries/esp32-camera/include/sensor.h	/^    sensor_id_t id;             \/\/ Sensor ID.$/;"	m	struct:_sensor
ifstream	./libraries/SdFat/src/iostream/fstream.h	/^  explicit ifstream(const char* path, openmode mode = in) {$/;"	f	class:ifstream
ifstream	./libraries/SdFat/src/iostream/fstream.h	/^  ifstream() {}$/;"	f	class:ifstream
ifstream	./libraries/SdFat/src/iostream/fstream.h	/^class ifstream : public istream, StreamBaseClass  {$/;"	c
ignore	./libraries/SdFat/src/iostream/istream.cpp	/^istream& istream::ignore(streamsize n, int delim) {$/;"	f	class:istream
imagesize	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t imagesize;$/;"	m	struct:__anon4	file:
img_jpeg_decode_test	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void img_jpeg_decode_test(uint16_t pic_index, uint16_t lib_index)$/;"	f	file:
in	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode in     = 0X20;$/;"	m	class:ios_base
in_bytes_per_pixel	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    float in_bytes_per_pixel;$/;"	m	struct:__anon26
in_bytes_per_pixel	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t in_bytes_per_pixel;$/;"	m	struct:__anon26
inbuf	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE* inbuf;			\/* Bit stream input buffer *\/$/;"	m	struct:JDEC
inbuf	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE* inbuf;			\/* Bit stream input buffer *\/$/;"	m	struct:JDEC
index	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        size_t index;$/;"	m	struct:__anon2	file:
index	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    size_t index;$/;"	m	class:callback_stream	file:
index	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    size_t max_len, index;$/;"	m	class:memory_stream	file:
infunc	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	UINT (*infunc)(JDEC*, BYTE*, UINT);\/* Pointer to jpeg stream input function *\/$/;"	m	struct:JDEC
infunc	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	UINT (*infunc)(JDEC*, BYTE*, UINT);\/* Pointer to jpeg stream input function *\/$/;"	m	struct:JDEC
init	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  bool init = true;$/;"	m	class:Adafruit_NeoPixel
init	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^void ESP32BootROMClass::init() {$/;"	f	class:ESP32BootROMClass
init	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^bool ExFatPartition::init(FsBlockDevice* dev, uint8_t part, uint32_t volStart) {$/;"	f	class:ExFatPartition
init	./libraries/SdFat/src/FatLib/FatPartition.cpp	/^bool FatPartition::init(FsBlockDevice* dev, uint8_t part, uint32_t volStart) {$/;"	f	class:FatPartition
init	./libraries/SdFat/src/common/FsCache.h	/^  void init(FsBlockDevice* blockDev) {$/;"	f	class:FsCache
init	./libraries/SdFat/src/iostream/bufstream.h	/^  void init(char *buf, size_t size) {$/;"	f	class:obufstream
init	./libraries/SdFat/src/iostream/bufstream.h	/^  void init(const char* str) {$/;"	f	class:ibufstream
init	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    bool jpeg_encoder::init(output_stream *pStream, int width, int height, int src_channels, const params &comp_params)$/;"	f	class:jpge::jpeg_encoder
init	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^    int (*init)(sensor_t *sensor);$/;"	m	struct:__anon7	file:
init	./libraries/esp32-camera/esp_camera.c	/^    int (*init)(sensor_t *sensor);$/;"	m	struct:__anon12	file:
initClock	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void initClock() {$/;"	f	file:
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt() {initErrorHalt(&Serial);}$/;"	f	class:SdBase
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt(const __FlashStringHelper* msg) {$/;"	f	class:SdBase
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt(const char* msg) {initErrorHalt(&Serial, msg);}$/;"	f	class:SdBase
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt(print_t* pr) {$/;"	f	class:SdBase
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt(print_t* pr, const __FlashStringHelper* msg) {$/;"	f	class:SdBase
initErrorHalt	./libraries/SdFat/src/SdFat.h	/^  void initErrorHalt(print_t* pr, const char* msg) {$/;"	f	class:SdBase
initErrorPrint	./libraries/SdFat/src/SdFat.h	/^  void initErrorPrint() {$/;"	f	class:SdBase
initErrorPrint	./libraries/SdFat/src/SdFat.h	/^  void initErrorPrint(print_t* pr) {$/;"	f	class:SdBase
initFatDir	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^bool FatFormatter::initFatDir(uint8_t fatType, uint32_t sectorCount) {$/;"	f	class:FatFormatter
initPbs	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^void FatFormatter::initPbs() {$/;"	f	class:FatFormatter
initSDHC	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void initSDHC() {$/;"	f	file:
init_camera	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	/^static esp_err_t init_camera(void)$/;"	f	file:
init_camera	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static esp_err_t init_camera(uint32_t xclk_freq_hz, pixformat_t pixel_format, framesize_t frame_size, uint8_t fb_count, int sccb_sda_gpio_num, int sccb_port)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*init_status)         (sensor_t *sensor);$/;"	m	struct:_sensor
init_status	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int init_status(sensor_t *sensor){$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int init_status(sensor_t *sensor)$/;"	f	file:
init_status	./libraries/esp32-camera/include/sensor.h	/^    int  (*init_status)         (sensor_t *sensor);$/;"	m	struct:_sensor
inited	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::inited(void) { return _inited; }$/;"	f	class:Adafruit_TestBed_Brains
input	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^        const uint8_t *input;$/;"	m	struct:__anon5	file:
int16	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef signed short   int16;$/;"	t	namespace:jpge
int32	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef signed int     int32;$/;"	t	namespace:jpge
internal	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags internal   = 0x0004;$/;"	m	class:ios_base
internal	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& internal(ios_base& str) {$/;"	f
invalidate	./libraries/SdFat/src/common/FsCache.h	/^  void invalidate() {$/;"	f	class:FsCache
ios	./libraries/SdFat/src/iostream/ios.h	/^  ios() {}$/;"	f	class:ios
ios	./libraries/SdFat/src/iostream/ios.h	/^class ios : public ios_base {$/;"	c
ios_base	./libraries/SdFat/src/iostream/ios.h	/^  ios_base() : m_fill(' '), m_fmtflags(dec | right | skipws)$/;"	f	class:ios_base
ios_base	./libraries/SdFat/src/iostream/ios.h	/^class ios_base {$/;"	c
ios_h	./libraries/SdFat/src/iostream/ios.h	26;"	d
iostate	./libraries/SdFat/src/iostream/ios.h	/^  typedef unsigned char iostate;$/;"	t	class:ios_base
iostream	./libraries/SdFat/src/iostream/iostream.h	/^class iostream : public istream, public ostream {$/;"	c
iostream_h	./libraries/SdFat/src/iostream/iostream.h	26;"	d
is800KHz	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  bool is800KHz; \/\/\/< true if 800 KHz pixels$/;"	m	class:Adafruit_NeoPixel
isBusy	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::isBusy() {$/;"	f	class:ExFatFile
isBusy	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool isBusy() {return m_blockDev->isBusy();}$/;"	f	class:ExFatPartition
isBusy	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::isBusy() {$/;"	f	class:FatFile
isBusy	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool isBusy() {return m_blockDev->isBusy();}$/;"	f	class:FatPartition
isBusy	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isBusy() {$/;"	f	class:FsBaseFile
isBusy	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool isBusy() {$/;"	f	class:FsVolume
isBusy	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::isBusy() {$/;"	f	class:SharedSpiCard
isBusy	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::isBusy() {$/;"	f	class:SdioCard
isBusyCMD13	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyCMD13() {$/;"	f	file:
isBusyCommandComplete	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyCommandComplete() {$/;"	f	file:
isBusyCommandInhibit	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyCommandInhibit() {$/;"	f	file:
isBusyDMA	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyDMA() {$/;"	f	file:
isBusyDat	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyDat() {$/;"	f	file:
isBusyFifoRead	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyFifoRead() {$/;"	f	file:
isBusyFifoWrite	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyFifoWrite() {$/;"	f	file:
isBusyTransferComplete	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool isBusyTransferComplete() {$/;"	f	file:
isCached	./libraries/SdFat/src/common/FsCache.h	/^  bool isCached(uint32_t sector) const {return sector == m_sector;}$/;"	f	class:FsCache
isCached	./libraries/SdFat/src/common/FsCache.h	/^  bool isCached(uint32_t sector, size_t count) {$/;"	f	class:FsCache
isContiguous	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isContiguous() const {return m_flags & FILE_FLAG_CONTIGUOUS;}$/;"	f	class:ExFatFile
isContiguous	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool     isContiguous;$/;"	m	struct:DirPos_t
isContiguous	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isContiguous() const {return m_flags & FILE_FLAG_CONTIGUOUS;}$/;"	f	class:FatFile
isContiguous	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isContiguous() const {$/;"	f	class:FsBaseFile
isDedicatedSpi	./libraries/SdFat/src/SdCard/SdCardInterface.h	/^  bool virtual isDedicatedSpi() {return false;}$/;"	f	class:SdCardInterface
isDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool isDedicatedSpi() {return false;}$/;"	f	class:SharedSpiCard
isDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool isDedicatedSpi() {return m_dedicatedSpi;}$/;"	f	class:DedicatedSpiCard
isDedicatedSpi	./libraries/SdFat/src/SdFat.h	/^  bool isDedicatedSpi() {return m_card ? m_card->isDedicatedSpi() : false;}$/;"	f	class:SdBase
isDigit	./libraries/SdFat/extras/attic/PrintTemplates.h	34;"	d
isDigit	./libraries/SdFat/src/common/FmtNumber.h	/^inline bool isDigit(char c) {$/;"	f
isDir	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isDir() const  {return m_attributes & FILE_ATTR_DIR;}$/;"	f	class:ExFatFile
isDir	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isDir() const {return m_attributes & FILE_ATTR_DIR;}$/;"	f	class:FatFile
isDir	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isDir() const {$/;"	f	class:FsBaseFile
isDirSeparator	./libraries/SdFat/src/ExFatLib/ExFatFile.h	42;"	d
isDirSeparator	./libraries/SdFat/src/FatLib/FatFile.h	75;"	d
isDirectory	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isDirectory() const {return isDir();}$/;"	f	class:FsBaseFile
isDirectory	./libraries/SdFat/src/common/ArduinoFiles.h	/^  bool isDirectory() {$/;"	f	class:StreamFile
isDirty	./libraries/SdFat/src/common/FsCache.h	/^  bool isDirty() {$/;"	f	class:FsCache
isEOC	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool isEOC(uint32_t cluster) const {$/;"	f	class:FatPartition
isFatFile	./libraries/SdFat/src/common/FsStructs.h	/^static inline bool isFatFile(const DirFat_t* dir) {$/;"	f
isFatFileOrSubdir	./libraries/SdFat/src/common/FsStructs.h	/^static inline bool isFatFileOrSubdir(const DirFat_t* dir) {$/;"	f
isFatLongName	./libraries/SdFat/src/common/FsStructs.h	/^static inline uint8_t isFatLongName(const DirFat_t* dir) {$/;"	f
isFatSubdir	./libraries/SdFat/src/common/FsStructs.h	/^static inline bool isFatSubdir(const DirFat_t* dir) {$/;"	f
isFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isFile() const {return m_attributes & FILE_ATTR_FILE;}$/;"	f	class:ExFatFile
isFile	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isFile() const {return m_attributes & FILE_ATTR_FILE;}$/;"	f	class:FatFile
isFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isFile() const {$/;"	f	class:FsBaseFile
isFileOrSubDir	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isFileOrSubDir() const {return isFile() || isSubDir();}$/;"	f	class:ExFatFile
isFileOrSubDir	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isFileOrSubDir() const {return isFile() || isSubDir();}$/;"	f	class:FatFile
isFileOrSubDir	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isFileOrSubDir() const {$/;"	f	class:FsBaseFile
isHidden	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isHidden() const {return m_attributes & FS_ATTRIB_HIDDEN;}$/;"	f	class:ExFatFile
isHidden	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isHidden() const {return m_attributes & FS_ATTRIB_HIDDEN;}$/;"	f	class:FatFile
isHidden	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isHidden() const {$/;"	f	class:FsBaseFile
isHighSurrogate	./libraries/SdFat/src/common/FsUtf.h	/^  inline bool isHighSurrogate(uint16_t c) {$/;"	f	namespace:FsUtf
isLFN	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isLFN() const {return m_lfnOrd;}$/;"	f	class:FatFile
isLowSurrogate	./libraries/SdFat/src/common/FsUtf.h	/^  inline bool isLowSurrogate(uint16_t c) {$/;"	f	namespace:FsUtf
isLower	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^static bool isLower(char c) {$/;"	f	file:
isOpen	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isOpen() const {return m_attributes;}$/;"	f	class:ExFatFile
isOpen	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isOpen() const {return m_attributes;}$/;"	f	class:FatFile
isOpen	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isOpen() const {return m_fFile || m_xFile;}$/;"	f	class:FsBaseFile
isReadOnly	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isReadOnly() const {return m_attributes & FS_ATTRIB_READ_ONLY;}$/;"	f	class:ExFatFile
isReadOnly	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isReadOnly() const {return m_attributes & FS_ATTRIB_READ_ONLY;}$/;"	f	class:FatFile
isReadOnly	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isReadOnly() const {$/;"	f	class:FsBaseFile
isReadable	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isReadable() const {return m_flags & FILE_FLAG_READ;}$/;"	f	class:ExFatFile
isReadable	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isReadable() const {return m_flags & FILE_FLAG_READ;}$/;"	f	class:FatFile
isReadable	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isReadable() const {$/;"	f	class:FsBaseFile
isRoot	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isRoot() const {return m_attributes & FILE_ATTR_ROOT;}$/;"	f	class:ExFatFile
isRoot	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isRoot() const {return m_attributes & FILE_ATTR_ROOT;}$/;"	f	class:FatFile
isRoot32	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isRoot32() const {return m_attributes & FILE_ATTR_ROOT32;}$/;"	f	class:FatFile
isRootFixed	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isRootFixed() const {return m_attributes & FILE_ATTR_ROOT_FIXED;}$/;"	f	class:FatFile
isRunningStub	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::isRunningStub(void) { return _stub_running; }$/;"	f	class:ESP32BootROMClass
isSpace	./libraries/SdFat/src/common/FmtNumber.h	/^inline bool isSpace(char c) {$/;"	f
isSpi	./libraries/SdFat/src/SdCard/SdCard.h	/^inline bool isSpi(SdSpiConfig cfg) {(void)cfg; return true;}$/;"	f
isSpi	./libraries/SdFat/src/SdCard/SdCard.h	/^inline bool isSpi(SdioConfig cfg) {(void)cfg; return false;}$/;"	f
isSubDir	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isSubDir() const {return m_attributes & FILE_ATTR_SUBDIR;}$/;"	f	class:ExFatFile
isSubDir	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isSubDir() const {return m_attributes & FILE_ATTR_SUBDIR;}$/;"	f	class:FatFile
isSubDir	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isSubDir() const {$/;"	f	class:FsBaseFile
isSurrogate	./libraries/SdFat/src/common/FsUtf.h	/^  inline bool isSurrogate(uint16_t c) {$/;"	f	namespace:FsUtf
isSystem	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isSystem() const {return m_attributes & FS_ATTRIB_SYSTEM;}$/;"	f	class:ExFatFile
isSystem	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isSystem() const {return m_attributes & FS_ATTRIB_SYSTEM;}$/;"	f	class:FatFile
isUpper	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^static bool isUpper(char c) {$/;"	f	file:
isValidCp	./libraries/SdFat/src/common/FsUtf.h	/^  inline bool isValidCp(uint32_t cp) {$/;"	f	namespace:FsUtf
isWritable	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool isWritable() const {return m_flags & FILE_FLAG_WRITE;}$/;"	f	class:ExFatFile
isWritable	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool isWritable() const {return m_flags & FILE_FLAG_WRITE;}$/;"	f	class:FatFile
isWritable	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool isWritable() const {$/;"	f	class:FsBaseFile
isWriteMode	./libraries/SdFat/src/common/FsApiConstants.h	/^inline bool isWriteMode(oflag_t oflag) {$/;"	f
is_aligned	./libraries/SdFat/src/RingBuf.h	/^inline bool is_aligned(const void* ptr, uintptr_t alignment) {$/;"	f
is_open	./libraries/SdFat/src/iostream/fstream.h	/^  bool is_open() {$/;"	f	class:fstream
is_open	./libraries/SdFat/src/iostream/fstream.h	/^  bool is_open() {$/;"	f	class:ifstream
is_open	./libraries/SdFat/src/iostream/fstream.h	/^  bool is_open() {$/;"	f	class:ofstream
istream	./libraries/SdFat/src/iostream/istream.h	/^  istream() {}$/;"	f	class:istream
istream	./libraries/SdFat/src/iostream/istream.h	/^class istream : public virtual ios {$/;"	c
istream_h	./libraries/SdFat/src/iostream/istream.h	26;"	d
jd_decomp	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^JRESULT jd_decomp ($/;"	f
jd_errors	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^static const char * jd_errors[] = {$/;"	v	file:
jd_prepare	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^JRESULT jd_prepare ($/;"	f
jmpInstruction	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  jmpInstruction[3];$/;"	m	struct:ExFatBootSector
jmpInstruction	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  jmpInstruction[3];$/;"	m	struct:partitionBootSector
jmpInstruction	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  jmpInstruction[3];$/;"	m	struct:partitionBootSectorFat
jpeg_encoder	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    jpeg_encoder::jpeg_encoder()$/;"	f	class:jpge::jpeg_encoder
jpeg_encoder	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    class jpeg_encoder {$/;"	c	namespace:jpge
jpeg_mode	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t jpeg_mode;$/;"	m	struct:__anon26
jpeg_quality	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int jpeg_quality;               \/*!< Quality of JPEG output. 0-63 lower means higher quality  *\/$/;"	m	struct:__anon19
jpeg_quality	./libraries/esp32-camera/include/esp_camera.h	/^    int jpeg_quality;               \/*!< Quality of JPEG output. 0-63 lower means higher quality  *\/$/;"	m	struct:__anon20
jpg2bmp	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^bool jpg2bmp(const uint8_t *src, size_t src_len, uint8_t ** out, size_t * out_len)$/;"	f
jpg2rgb565	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^bool jpg2rgb565(const uint8_t *src, size_t src_len, uint8_t * out, jpg_scale_t scale)$/;"	f
jpg2rgb888	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^static bool jpg2rgb888(const uint8_t *src, size_t src_len, uint8_t * out, jpg_scale_t scale)$/;"	f	file:
jpg_decode_test	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static float jpg_decode_test(uint8_t decoder_index, decode_type_t type, const uint8_t *jpg, uint32_t length, uint32_t img_w, uint32_t img_h, uint32_t times)$/;"	f	file:
jpg_open	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    bool jpeg_encoder::jpg_open(int p_x_res, int p_y_res, int src_channels)$/;"	f	class:jpge::jpeg_encoder
jpg_out_cb	./libraries/esp32-camera-2.0.8/conversions/include/img_converters.h	/^typedef size_t (* jpg_out_cb)(void * arg, size_t index, const void* data, size_t len);$/;"	t
jpg_reader_cb	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^typedef size_t (* jpg_reader_cb)(void * arg, size_t index, uint8_t *buf, size_t len);$/;"	t
jpg_scale_t	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^} jpg_scale_t;$/;"	t	typeref:enum:__anon3
jpg_writer_cb	./libraries/esp32-camera-2.0.8/conversions/include/esp_jpg_decode.h	/^typedef bool (* jpg_writer_cb)(void * arg, uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t *data);$/;"	t
jpge	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^namespace jpge {$/;"	n	file:
jpge	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^namespace jpge$/;"	n
jpge_free	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static inline void jpge_free(void *p) { free(p); }$/;"	f	namespace:jpge
jpge_malloc	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static inline void *jpge_malloc(size_t nSize) {$/;"	f	namespace:jpge
k210Show	./libraries/Adafruit_NeoPixel/kendyte_k210.c	/^void  k210Show($/;"	f
kHzSdClk	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint32_t SdioCard::kHzSdClk() {$/;"	f	class:SdioCard
key	./libraries/SdFat/src/common/upcase.cpp	/^  uint16_t key;$/;"	m	struct:pair16	file:
labelLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  labelLength;$/;"	m	struct:__anon8
lbaToMbrChs	./libraries/SdFat/src/common/FsStructs.cpp	/^void lbaToMbrChs(uint8_t* chs, uint32_t capacityMB, uint32_t lba) {$/;"	f
lcd	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.h	/^  LiquidCrystal lcd = LiquidCrystal(7, 8, 9, 10, 11, 12);$/;"	m	class:Adafruit_TestBed_Brains
lcd_write	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::lcd_write(uint8_t linenum, char linebuf[17]) {$/;"	f	class:Adafruit_TestBed_Brains
leadSignature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t leadSignature[4];$/;"	m	struct:FsInfoSector
ledPin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  int16_t ledPin = -1;   \/\/\/< The pin for an LED, if it exists$/;"	m	class:Adafruit_TestBed
ledc_channel	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    ledc_channel_t ledc_channel;    \/*!< LEDC channel to be used for generating XCLK  *\/$/;"	m	struct:__anon19
ledc_channel	./libraries/esp32-camera/include/esp_camera.h	/^    ledc_channel_t ledc_channel;    \/*!< LEDC channel to be used for generating XCLK  *\/$/;"	m	struct:__anon20
ledc_timer	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    ledc_timer_t ledc_timer;        \/*!< LEDC timer to be used for generating XCLK  *\/$/;"	m	struct:__anon19
ledc_timer	./libraries/esp32-camera/include/esp_camera.h	/^    ledc_timer_t ledc_timer;        \/*!< LEDC timer to be used for generating XCLK  *\/$/;"	m	struct:__anon20
left	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags left       = 0x0001;$/;"	m	class:ios_base
left	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& left(ios_base& str) {$/;"	f
left	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon30
left	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon28
len	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t len;$/;"	m	class:FatLfn_t
len	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        size_t len;$/;"	m	struct:__anon2	file:
len	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    size_t len;                 \/*!< Length of the buffer in bytes *\/$/;"	m	struct:__anon22
len	./libraries/esp32-camera/include/esp_camera.h	/^    size_t len;                 \/*!< Length of the buffer in bytes *\/$/;"	m	struct:__anon23
lenc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t lenc;$/;"	m	struct:__anon15
lenc	./libraries/esp32-camera/include/sensor.h	/^    uint8_t lenc;$/;"	m	struct:__anon16
length	./libraries/SdFat/src/iostream/bufstream.h	/^  size_t length() {$/;"	f	class:obufstream
lfnChecksum	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t lfnChecksum(uint8_t* name) {$/;"	f	class:FatFile
lfnLegalChar	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^inline bool lfnLegalChar(uint8_t c) {$/;"	f
lfnReservedChar	./libraries/SdFat/src/common/FsStructs.h	/^inline bool lfnReservedChar(uint8_t c) {$/;"	f
ll_cam_bytes_per_sample	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t ll_cam_bytes_per_sample(i2s_sampling_mode_t mode)$/;"	f	file:
ll_cam_calc_rgb_dma	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static bool ll_cam_calc_rgb_dma(cam_obj_t *cam){$/;"	f	file:
ll_cam_calc_rgb_dma	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^static bool ll_cam_calc_rgb_dma(cam_obj_t *cam){$/;"	f	file:
ll_cam_calc_rgb_dma	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static bool ll_cam_calc_rgb_dma(cam_obj_t *cam){$/;"	f	file:
ll_cam_config	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^esp_err_t ll_cam_config(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_config	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^esp_err_t ll_cam_config(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_config	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t ll_cam_config(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_converter_config	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static esp_err_t ll_cam_converter_config(cam_obj_t *cam, const camera_config_t *config)$/;"	f	file:
ll_cam_deinit	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^esp_err_t ll_cam_deinit(cam_obj_t *cam)$/;"	f
ll_cam_deinit	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^esp_err_t ll_cam_deinit(cam_obj_t *cam)$/;"	f
ll_cam_deinit	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t ll_cam_deinit(cam_obj_t *cam)$/;"	f
ll_cam_dma_filter_grayscale	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t IRAM_ATTR ll_cam_dma_filter_grayscale(uint8_t* dst, const uint8_t* src, size_t len)$/;"	f	file:
ll_cam_dma_filter_grayscale_highspeed	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t IRAM_ATTR ll_cam_dma_filter_grayscale_highspeed(uint8_t* dst, const uint8_t* src, size_t len)$/;"	f	file:
ll_cam_dma_filter_jpeg	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t IRAM_ATTR ll_cam_dma_filter_jpeg(uint8_t* dst, const uint8_t* src, size_t len)$/;"	f	file:
ll_cam_dma_filter_yuyv	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t IRAM_ATTR ll_cam_dma_filter_yuyv(uint8_t* dst, const uint8_t* src, size_t len)$/;"	f	file:
ll_cam_dma_filter_yuyv_highspeed	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static size_t IRAM_ATTR ll_cam_dma_filter_yuyv_highspeed(uint8_t* dst, const uint8_t* src, size_t len)$/;"	f	file:
ll_cam_dma_init	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static esp_err_t ll_cam_dma_init(cam_obj_t *cam)$/;"	f	file:
ll_cam_dma_isr	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static void IRAM_ATTR ll_cam_dma_isr(void *arg)$/;"	f	file:
ll_cam_dma_isr	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^static void CAMERA_ISR_IRAM_ATTR ll_cam_dma_isr(void *arg)$/;"	f	file:
ll_cam_dma_isr	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static void CAMERA_ISR_IRAM_ATTR ll_cam_dma_isr(void *arg)$/;"	f	file:
ll_cam_dma_print_state	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^void ll_cam_dma_print_state(cam_obj_t *cam)$/;"	f
ll_cam_dma_reset	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^void ll_cam_dma_reset(cam_obj_t *cam)$/;"	f
ll_cam_dma_sizes	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^bool ll_cam_dma_sizes(cam_obj_t *cam)$/;"	f
ll_cam_dma_sizes	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^bool ll_cam_dma_sizes(cam_obj_t *cam)$/;"	f
ll_cam_dma_sizes	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^bool ll_cam_dma_sizes(cam_obj_t *cam)$/;"	f
ll_cam_do_vsync	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^void ll_cam_do_vsync(cam_obj_t *cam)$/;"	f
ll_cam_do_vsync	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^void ll_cam_do_vsync(cam_obj_t *cam)$/;"	f
ll_cam_do_vsync	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^void ll_cam_do_vsync(cam_obj_t *cam)$/;"	f
ll_cam_get_dma_align	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^uint8_t ll_cam_get_dma_align(cam_obj_t *cam)$/;"	f
ll_cam_get_dma_align	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^uint8_t ll_cam_get_dma_align(cam_obj_t *cam)$/;"	f
ll_cam_get_dma_align	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^uint8_t ll_cam_get_dma_align(cam_obj_t *cam)$/;"	f
ll_cam_init_isr	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^esp_err_t ll_cam_init_isr(cam_obj_t *cam)$/;"	f
ll_cam_init_isr	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^esp_err_t ll_cam_init_isr(cam_obj_t *cam)$/;"	f
ll_cam_init_isr	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t ll_cam_init_isr(cam_obj_t *cam)$/;"	f
ll_cam_memcpy	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^size_t IRAM_ATTR ll_cam_memcpy(cam_obj_t *cam, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
ll_cam_memcpy	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^size_t IRAM_ATTR ll_cam_memcpy(cam_obj_t *cam, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
ll_cam_memcpy	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^size_t IRAM_ATTR ll_cam_memcpy(cam_obj_t *cam, uint8_t *out, const uint8_t *in, size_t len)$/;"	f
ll_cam_send_event	./libraries/esp32-camera-2.0.8/driver/cam_hal.c	/^void IRAM_ATTR ll_cam_send_event(cam_obj_t *cam, cam_event_t cam_event, BaseType_t * HPTaskAwoken)$/;"	f
ll_cam_send_event	./libraries/esp32-camera/cam_hal.c	/^void IRAM_ATTR ll_cam_send_event(cam_obj_t *cam, cam_event_t cam_event, BaseType_t * HPTaskAwoken)$/;"	f
ll_cam_set_pin	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^esp_err_t ll_cam_set_pin(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_set_pin	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^esp_err_t ll_cam_set_pin(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_set_pin	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t ll_cam_set_pin(cam_obj_t *cam, const camera_config_t *config)$/;"	f
ll_cam_set_sample_mode	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^esp_err_t ll_cam_set_sample_mode(cam_obj_t *cam, pixformat_t pix_format, uint32_t xclk_freq_hz, uint16_t sensor_pid)$/;"	f
ll_cam_set_sample_mode	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^esp_err_t ll_cam_set_sample_mode(cam_obj_t *cam, pixformat_t pix_format, uint32_t xclk_freq_hz, uint16_t sensor_pid)$/;"	f
ll_cam_set_sample_mode	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t ll_cam_set_sample_mode(cam_obj_t *cam, pixformat_t pix_format, uint32_t xclk_freq_hz, uint16_t sensor_pid)$/;"	f
ll_cam_start	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^bool ll_cam_start(cam_obj_t *cam, int frame_pos)$/;"	f
ll_cam_start	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^bool ll_cam_start(cam_obj_t *cam, int frame_pos)$/;"	f
ll_cam_start	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^bool ll_cam_start(cam_obj_t *cam, int frame_pos)$/;"	f
ll_cam_stop	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^bool IRAM_ATTR ll_cam_stop(cam_obj_t *cam)$/;"	f
ll_cam_stop	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^bool IRAM_ATTR ll_cam_stop(cam_obj_t *cam)$/;"	f
ll_cam_stop	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^bool IRAM_ATTR ll_cam_stop(cam_obj_t *cam)$/;"	f
ll_cam_vsync_intr_enable	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^void ll_cam_vsync_intr_enable(cam_obj_t *cam, bool en)$/;"	f
ll_cam_vsync_intr_enable	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^void ll_cam_vsync_intr_enable(cam_obj_t *cam, bool en)$/;"	f
ll_cam_vsync_intr_enable	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^void ll_cam_vsync_intr_enable(cam_obj_t *cam, bool en)$/;"	f
ll_cam_vsync_isr	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static void IRAM_ATTR ll_cam_vsync_isr(void *arg)$/;"	f	file:
ll_cam_vsync_isr	./libraries/esp32-camera-2.0.8/target/esp32s2/ll_cam.c	/^static void CAMERA_ISR_IRAM_ATTR ll_cam_vsync_isr(void *arg)$/;"	f	file:
ll_cam_vsync_isr	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^static void CAMERA_ISR_IRAM_ATTR ll_cam_vsync_isr(void *arg)$/;"	f	file:
load_block_16_8	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_block_16_8(int x, int c)$/;"	f	class:jpge::jpeg_encoder
load_block_16_8_8	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_block_16_8_8(int x, int c)$/;"	f	class:jpge::jpeg_encoder
load_block_8_8	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_block_8_8(int x, int y, int c)$/;"	f	class:jpge::jpeg_encoder
load_block_8_8_grey	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_block_8_8_grey(int x)$/;"	f	class:jpge::jpeg_encoder
load_mcu	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_mcu(const void *pSrc)$/;"	f	class:jpge::jpeg_encoder
load_quantized_coefficients	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::load_quantized_coefficients(int component_num)$/;"	f	class:jpge::jpeg_encoder
low	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void low() {write(false);}$/;"	f	class:DigitalPin
lowSurrogate	./libraries/SdFat/src/common/FsUtf.h	/^  inline uint16_t lowSurrogate(uint32_t cp) {$/;"	f	namespace:FsUtf
ls	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool ls(uint8_t flags = 0) {$/;"	f	class:ExFatFile
ls	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^bool ExFatFile::ls(print_t* pr) {$/;"	f	class:ExFatFile
ls	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^bool ExFatFile::ls(print_t* pr, uint8_t flags, uint8_t indent) {$/;"	f	class:ExFatFile
ls	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool ls() {$/;"	f	class:ExFatVolume
ls	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool ls(const char* path, uint8_t flags = 0) {$/;"	f	class:ExFatVolume
ls	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool ls(print_t* pr, const char* path, uint8_t flags) {$/;"	f	class:ExFatVolume
ls	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool ls(print_t* pr, uint8_t flags = 0) {$/;"	f	class:ExFatVolume
ls	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool ls(uint8_t flags) {$/;"	f	class:ExFatVolume
ls	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool ls(uint8_t flags = 0) {$/;"	f	class:FatFile
ls	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	/^bool FatFile::ls(print_t* pr, uint8_t flags, uint8_t indent) {$/;"	f	class:FatFile
ls	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool ls(const char* path, uint8_t flags = 0) {$/;"	f	class:FatVolume
ls	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool ls(print_t* pr, const char* path, uint8_t flags) {$/;"	f	class:FatVolume
ls	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool ls(print_t* pr, uint8_t flags = 0) {$/;"	f	class:FatVolume
ls	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool ls(uint8_t flags = 0) {$/;"	f	class:FatVolume
ls	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool ls() {$/;"	f	class:FsBaseFile
ls	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool ls(print_t* pr) {$/;"	f	class:FsBaseFile
ls	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool ls(print_t* pr, uint8_t flags) {$/;"	f	class:FsBaseFile
ls	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool ls(uint8_t flags) {$/;"	f	class:FsBaseFile
ls	./libraries/SdFat/src/FsLib/FsVolume.cpp	/^bool FsVolume::ls(print_t* pr, const char* path, uint8_t flags) {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool ls() {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool ls(const char* path, uint8_t flags = 0) {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool ls(print_t* pr) {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool ls(print_t* pr, uint8_t flags) {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool ls(uint8_t flags) {$/;"	f	class:FsVolume
ls	./libraries/SdFat/src/common/FsName.h	/^  uint16_t ls = 0;$/;"	m	class:FsName
m	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const float m[] = {1e-1, 1e-2, 1e-4, 1e-8, 1e-16, 1e-32};$/;"	v	file:
m_all_stream_writes_succeeded	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            bool m_all_stream_writes_succeeded;$/;"	m	class:jpge::jpeg_encoder
m_allocSearchStart	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_allocSearchStart;        \/\/ Start cluster for alloc search.$/;"	m	class:FatPartition
m_attributes	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t       m_attributes = FILE_ATTR_CLOSED;$/;"	m	class:ExFatFile
m_attributes	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t    m_attributes = FILE_ATTR_CLOSED;$/;"	m	class:FatFile
m_beginCalled	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool m_beginCalled = false;$/;"	m	class:SharedSpiCard
m_bit_buffer	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint32 m_bit_buffer;$/;"	m	class:jpge::jpeg_encoder
m_bitmapCache	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  FsCache  m_bitmapCache;$/;"	m	class:ExFatPartition
m_bitmapStart	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_bitmapStart;$/;"	m	class:ExFatPartition
m_bits_in	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint m_bits_in;$/;"	m	class:jpge::jpeg_encoder
m_blockDev	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  FsBlockDevice* m_blockDev;$/;"	m	class:ExFatPartition
m_blockDev	./libraries/SdFat/src/FatLib/FatPartition.h	/^  FsBlockDevice* m_blockDev;          \/\/ sector device$/;"	m	class:FatPartition
m_blockDev	./libraries/SdFat/src/FsLib/FsVolume.h	/^  FsBlockDevice* m_blockDev;$/;"	m	class:FsVolume
m_blockDev	./libraries/SdFat/src/common/FsCache.h	/^  FsBlockDevice* m_blockDev;$/;"	m	class:FsCache
m_buf	./libraries/SdFat/src/BufferedPrint.h	/^  uint8_t m_buf[BUF_DIM < 24 ? 24 : BUF_DIM];  \/\/ NOLINT$/;"	m	class:BufferedPrint
m_buf	./libraries/SdFat/src/RingBuf.h	/^  uint8_t __attribute__((aligned(4))) m_buf[Size];$/;"	m	class:RingBuf
m_buf	./libraries/SdFat/src/iostream/StdioStream.h	/^  uint8_t  m_buf[STREAM_BUF_SIZE];$/;"	m	class:StdioStream
m_buf	./libraries/SdFat/src/iostream/bufstream.h	/^  char *m_buf = nullptr;$/;"	m	class:obufstream
m_buf	./libraries/SdFat/src/iostream/bufstream.h	/^  const char* m_buf = nullptr;$/;"	m	class:ibufstream
m_buffer	./libraries/SdFat/src/common/FsCache.h	/^  uint8_t m_buffer[512];$/;"	m	class:FsCache
m_busyFcn	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool (*m_busyFcn)() = 0;$/;"	v	file:
m_bytesPerCluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_bytesPerCluster;$/;"	m	class:ExFatPartition
m_bytesPerSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  static const uint16_t m_bytesPerSector = 1 << m_bytesPerSectorShift;$/;"	m	class:ExFatPartition
m_bytesPerSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  static const uint16_t m_bytesPerSector = 1 << m_bytesPerSectorShift;$/;"	m	class:FatPartition
m_bytesPerSectorShift	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  static const uint8_t  m_bytesPerSectorShift = 9;$/;"	m	class:ExFatPartition
m_bytesPerSectorShift	./libraries/SdFat/src/FatLib/FatPartition.h	/^  static const uint8_t  m_bytesPerSectorShift = 9;$/;"	m	class:FatPartition
m_cache	./libraries/SdFat/src/FatLib/FatPartition.h	/^  FsCache m_cache;$/;"	m	class:FatPartition
m_capacityMB	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_capacityMB;$/;"	m	class:FatFormatter
m_card	./libraries/SdFat/src/SdFat.h	/^  SdCard* m_card = nullptr;$/;"	m	class:SdBase
m_cardFactory	./libraries/SdFat/src/SdFat.h	/^  SdCardFactory m_cardFactory;$/;"	m	class:SdBase
m_cid	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static cid_t m_cid;$/;"	v	file:
m_clusterCount	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_clusterCount;$/;"	m	class:ExFatPartition
m_clusterHeapStartSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_clusterHeapStartSector;$/;"	m	class:ExFatPartition
m_clusterMask	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_clusterMask;$/;"	m	class:ExFatPartition
m_clusterSectorMask	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t  m_clusterSectorMask;       \/\/ Mask to extract sector of cluster.$/;"	m	class:FatPartition
m_coefficient_array	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int16 m_coefficient_array[64];$/;"	m	class:jpge::jpeg_encoder
m_comp_h_samp	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_comp_h_samp[3], m_comp_v_samp[3];$/;"	m	class:jpge::jpeg_encoder
m_comp_v_samp	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_comp_h_samp[3], m_comp_v_samp[3];$/;"	m	class:jpge::jpeg_encoder
m_count	./libraries/SdFat/src/RingBuf.h	/^  volatile size_t m_count;$/;"	m	class:RingBuf
m_csPin	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  SdCsPin_t m_csPin;$/;"	m	class:SharedSpiCard
m_csPin	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  SdCsPin_t m_csPin;$/;"	m	class:SdSpiDriverBareUno
m_csd	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static csd_t m_csd;$/;"	v	file:
m_curCluster	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint32_t      m_curCluster;$/;"	m	class:ExFatFile
m_curCluster	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_curCluster;       \/\/ cluster for current file position$/;"	m	class:FatFile
m_curPosition	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t      m_curPosition;$/;"	m	class:ExFatFile
m_curPosition	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_curPosition;      \/\/ current file position$/;"	m	class:FatFile
m_curSector	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint32_t m_curSector;$/;"	m	class:DedicatedSpiCard
m_curSector	./libraries/SdFat/src/SdCard/SdioCard.h	/^  uint32_t m_curSector;$/;"	m	class:SdioCard
m_curState	./libraries/SdFat/src/SdCard/SdioCard.h	/^  uint8_t m_curState = IDLE_STATE;$/;"	m	class:SdioCard
m_cwv	./libraries/SdFat/src/ExFatLib/ExFatVolume.cpp	/^ExFatVolume* ExFatVolume::m_cwv = nullptr;$/;"	m	class:ExFatVolume	file:
m_cwv	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  static ExFatVolume* m_cwv;$/;"	m	class:ExFatVolume
m_cwv	./libraries/SdFat/src/FatLib/FatVolume.cpp	/^FatVolume* FatVolume::m_cwv = nullptr;$/;"	m	class:FatVolume	file:
m_cwv	./libraries/SdFat/src/FatLib/FatVolume.h	/^  static FatVolume* m_cwv;$/;"	m	class:FatVolume
m_cwv	./libraries/SdFat/src/FsLib/FsVolume.cpp	/^FsVolume* FsVolume::m_cwv = nullptr;$/;"	m	class:FsVolume	file:
m_cwv	./libraries/SdFat/src/FsLib/FsVolume.h	/^  static FsVolume* m_cwv;$/;"	m	class:FsVolume
m_dataCache	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  FsCache  m_dataCache;$/;"	m	class:ExFatPartition
m_dataLength	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t      m_dataLength;$/;"	m	class:ExFatFile
m_dataStart	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_dataStart;$/;"	m	class:FatFormatter
m_dataStartSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_dataStartSector;         \/\/ First data sector number.$/;"	m	class:FatPartition
m_dedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool m_dedicatedSpi = false;$/;"	m	class:DedicatedSpiCard
m_dev	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^  FsBlockDevice* m_dev;$/;"	m	class:ExFatFormatter
m_dev	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  FsBlockDevice* m_dev;$/;"	m	class:FatFormatter
m_dirCluster	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_dirCluster;$/;"	m	class:FatFile
m_dirIndex	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint16_t   m_dirIndex;         \/\/ index of directory entry in dir file$/;"	m	class:FatFile
m_dirPos	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  DirPos_t      m_dirPos;$/;"	m	class:ExFatFile
m_dirSector	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_dirSector;        \/\/ sector for this files directory entry$/;"	m	class:FatFile
m_dmaBusy	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static volatile bool m_dmaBusy = false;$/;"	v	file:
m_endTime	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  uint16_t m_endTime;$/;"	m	class:Timeout	file:
m_error	./libraries/SdFat/extras/attic/PrintBasic.h	/^  int m_error;$/;"	m	class:PrintBasic
m_error	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t       m_error = 0;$/;"	m	class:ExFatFile
m_error	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t    m_error = 0;        \/\/ Error bits.$/;"	m	class:FatFile
m_error	./libraries/SdFat/src/common/PrintBasic.h	/^  int m_error;$/;"	m	class:PrintBasic
m_errorCode	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t m_errorCode = SD_CARD_ERROR_INIT_NOT_CALLED;$/;"	m	class:SharedSpiCard
m_errorCode	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint8_t m_errorCode = SD_CARD_ERROR_INIT_NOT_CALLED;$/;"	v	file:
m_errorLine	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t m_errorLine = 0;$/;"	v	file:
m_fFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  FatFile*   m_fFile = nullptr;$/;"	m	class:FsBaseFile
m_fFmt	./libraries/SdFat/src/FsLib/FsFormatter.h	/^  FatFormatter m_fFmt;$/;"	m	class:FsFormatter
m_fVol	./libraries/SdFat/src/FsLib/FsVolume.h	/^  FatVolume*   m_fVol = nullptr;$/;"	m	class:FsVolume
m_fatCache	./libraries/SdFat/src/FatLib/FatPartition.h	/^  FsCache m_fatCache;$/;"	m	class:FatPartition
m_fatCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t  m_fatCount;                \/\/ Number of FAT (1 or 2)$/;"	m	class:FatPartition
m_fatLength	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_fatLength;$/;"	m	class:ExFatPartition
m_fatSize	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_fatSize;$/;"	m	class:FatFormatter
m_fatStart	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_fatStart;$/;"	m	class:FatFormatter
m_fatStartSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_fatStartSector;$/;"	m	class:ExFatPartition
m_fatStartSector	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_fatStartSector;          \/\/ Start sector for first FAT.$/;"	m	class:FatPartition
m_fatType	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t  m_fatType = 0;$/;"	m	class:ExFatPartition
m_fatType	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t  m_fatType = 0;             \/\/ Volume type (12, 16, OR 32).$/;"	m	class:FatPartition
m_file	./libraries/SdFat/src/RingBuf.h	/^  F* m_file = nullptr;$/;"	m	class:RingBuf
m_fileMem	./libraries/SdFat/src/FsLib/FsFile.h	/^  newalign_t m_fileMem[FS_ALIGN_DIM(ExFatFile, FatFile)];$/;"	m	class:FsBaseFile
m_fileSize	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_fileSize;         \/\/ file size in bytes$/;"	m	class:FatFile
m_fill	./libraries/SdFat/src/iostream/ios.h	/^  char m_fill;$/;"	m	class:ios_base
m_firstCluster	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint32_t      m_firstCluster;$/;"	m	class:ExFatFile
m_firstCluster	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t   m_firstCluster;     \/\/ first cluster of file$/;"	m	class:FatFile
m_flags	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t       m_flags = 0;$/;"	m	class:ExFatFile
m_flags	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t    m_flags = 0;        \/\/ See above for definition of m_flags bits$/;"	m	class:FatFile
m_fmtflags	./libraries/SdFat/src/iostream/ios.h	/^  fmtflags m_fmtflags;$/;"	m	class:ios_base
m_freeClusterCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  int32_t  m_freeClusterCount;     \/\/ Count of free clusters in volume.$/;"	m	class:FatPartition
m_gcount	./libraries/SdFat/src/iostream/istream.h	/^  size_t m_gcount;$/;"	m	class:istream
m_head	./libraries/SdFat/src/RingBuf.h	/^  size_t m_head;$/;"	m	class:RingBuf
m_highCapacity	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool m_highCapacity;$/;"	v	file:
m_huff_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static uint8 m_huff_bits[4][17];$/;"	m	namespace:jpge	file:
m_huff_code_sizes	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static uint8 m_huff_code_sizes[4][256];$/;"	m	namespace:jpge	file:
m_huff_codes	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static uint m_huff_codes[4][256];$/;"	m	namespace:jpge	file:
m_huff_initialized	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static bool m_huff_initialized = false;$/;"	m	namespace:jpge	file:
m_huff_val	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static uint8 m_huff_val[4][256];$/;"	m	namespace:jpge	file:
m_hw	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  Stream* m_hw;$/;"	m	class:ArduinoInStream
m_image_bpl	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x, m_image_y, m_image_bpp, m_image_bpl;$/;"	m	class:jpge::jpeg_encoder
m_image_bpl_mcu	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_bpl_xlt, m_image_bpl_mcu;$/;"	m	class:jpge::jpeg_encoder
m_image_bpl_xlt	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_bpl_xlt, m_image_bpl_mcu;$/;"	m	class:jpge::jpeg_encoder
m_image_bpp	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x, m_image_y, m_image_bpp, m_image_bpl;$/;"	m	class:jpge::jpeg_encoder
m_image_x	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x, m_image_y, m_image_bpp, m_image_bpl;$/;"	m	class:jpge::jpeg_encoder
m_image_x_mcu	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x_mcu, m_image_y_mcu;$/;"	m	class:jpge::jpeg_encoder
m_image_y	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x, m_image_y, m_image_bpp, m_image_bpl;$/;"	m	class:jpge::jpeg_encoder
m_image_y_mcu	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_image_x_mcu, m_image_y_mcu;$/;"	m	class:jpge::jpeg_encoder
m_in	./libraries/SdFat/src/BufferedPrint.h	/^  uint8_t m_in;$/;"	m	class:BufferedPrint
m_in	./libraries/SdFat/src/iostream/bufstream.h	/^  size_t m_in = 0;$/;"	m	class:obufstream
m_initDone	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool m_initDone = false;$/;"	v	file:
m_iostate	./libraries/SdFat/src/iostream/ios.h	/^  iostate m_iostate = 0;$/;"	m	class:ios
m_irqstat	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static volatile uint32_t m_irqstat;$/;"	v	file:
m_lastCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_lastCluster;             \/\/ Last cluster number in FAT.$/;"	m	class:FatPartition
m_last_dc_val	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_last_dc_val[3];$/;"	m	class:jpge::jpeg_encoder
m_last_quality	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static int32 m_last_quality = 0;$/;"	m	namespace:jpge	file:
m_len	./libraries/SdFat/src/iostream/bufstream.h	/^  size_t m_len = 0;$/;"	m	class:ibufstream
m_lfnOrd	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t    m_lfnOrd;$/;"	m	class:FatFile
m_line	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  char *m_line;$/;"	m	class:ArduinoInStream
m_mcu_lines	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 *m_mcu_lines[16];$/;"	m	class:jpge::jpeg_encoder
m_mcu_x	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_mcu_x, m_mcu_y;$/;"	m	class:jpge::jpeg_encoder
m_mcu_y	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_mcu_x, m_mcu_y;$/;"	m	class:jpge::jpeg_encoder
m_mcu_y_ofs	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_mcu_y_ofs;$/;"	m	class:jpge::jpeg_encoder
m_mcus_per_row	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_mcus_per_row;$/;"	m	class:jpge::jpeg_encoder
m_mirrorOffset	./libraries/SdFat/src/common/FsCache.h	/^  uint32_t m_mirrorOffset;$/;"	m	class:FsCache
m_mode	./libraries/SdFat/src/iostream/fstream.h	/^  ios::openmode m_mode;$/;"	m	class:StreamBaseClass
m_num_components	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_num_components;$/;"	m	class:jpge::jpeg_encoder
m_ocr	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t m_ocr;$/;"	v	file:
m_options	./libraries/SdFat/src/SdCard/SdioCard.h	/^  uint8_t m_options = FIFO_SDIO;$/;"	m	class:SdioConfig
m_out_buf	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_out_buf[JPGE_OUT_BUF_SIZE];$/;"	m	class:jpge::jpeg_encoder
m_out_buf_left	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint m_out_buf_left;$/;"	m	class:jpge::jpeg_encoder
m_p	./libraries/SdFat/src/iostream/StdioStream.h	/^  uint8_t* m_p = m_buf;$/;"	m	class:StdioStream
m_pOut_buf	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 *m_pOut_buf;$/;"	m	class:jpge::jpeg_encoder
m_pStream	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            output_stream *m_pStream;$/;"	m	class:jpge::jpeg_encoder
m_params	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            params m_params;$/;"	m	class:jpge::jpeg_encoder
m_partType	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint8_t m_partType;$/;"	m	class:FatFormatter
m_pass_num	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            uint8 m_pass_num;$/;"	m	class:jpge::jpeg_encoder
m_pos	./libraries/SdFat/src/iostream/bufstream.h	/^  size_t m_pos;$/;"	m	class:ibufstream
m_pr	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  print_t* m_pr;$/;"	m	class:FatFormatter
m_pr	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  print_t* m_pr;$/;"	m	class:ArduinoOutStream
m_precision	./libraries/SdFat/src/iostream/ios.h	/^  unsigned char m_precision;$/;"	m	class:ios_base
m_quality	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            int m_quality;$/;"	m	struct:jpge::params
m_quantization_tables	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static int32 m_quantization_tables[2][64];$/;"	m	namespace:jpge	file:
m_r	./libraries/SdFat/src/iostream/StdioStream.h	/^  uint8_t  m_r = 0;$/;"	m	class:StdioStream
m_rca	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t m_rca;$/;"	v	file:
m_relativeSectors	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_relativeSectors;$/;"	m	class:FatFormatter
m_reservedSectorCount	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint16_t m_reservedSectorCount;$/;"	m	class:FatFormatter
m_rootDirEntryCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t m_rootDirEntryCount;       \/\/ Number of entries in FAT16 root dir.$/;"	m	class:FatPartition
m_rootDirStart	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_rootDirStart;            \/\/ Start sector FAT16, cluster FAT32.$/;"	m	class:FatPartition
m_rootDirectoryCluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t m_rootDirectoryCluster;$/;"	m	class:ExFatPartition
m_sample_array	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            sample_array_t m_sample_array[64];$/;"	m	class:jpge::jpeg_encoder
m_scr	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static scr_t m_scr;$/;"	v	file:
m_sdClkKhz	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t m_sdClkKhz = 0;$/;"	v	file:
m_sdioCard	./libraries/SdFat/src/SdCard/SdCard.h	/^  SdioCard m_sdioCard;$/;"	m	class:SdCardFactory
m_sdioConfig	./libraries/SdFat/src/SdCard/SdioCard.h	/^  SdioConfig m_sdioConfig;$/;"	m	class:SdioCard
m_secBuf	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^  uint8_t* m_secBuf;$/;"	m	class:ExFatFormatter
m_secBuf	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint8_t* m_secBuf;$/;"	m	class:FatFormatter
m_sector	./libraries/SdFat/src/common/FsCache.h	/^  uint32_t m_sector;$/;"	m	class:FsCache
m_sectorCount	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_sectorCount;$/;"	m	class:FatFormatter
m_sectorMask	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  static const uint16_t m_sectorMask = m_bytesPerSector - 1;$/;"	m	class:ExFatPartition
m_sectorMask	./libraries/SdFat/src/FatLib/FatPartition.h	/^  static const uint16_t m_sectorMask = m_bytesPerSector - 1;$/;"	m	class:FatPartition
m_sectorsPerCluster	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint8_t m_sectorsPerCluster;$/;"	m	class:FatFormatter
m_sectorsPerCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t  m_sectorsPerCluster;       \/\/ Cluster size in sectors.$/;"	m	class:FatPartition
m_sectorsPerClusterShift	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t  m_sectorsPerClusterShift;$/;"	m	class:ExFatPartition
m_sectorsPerClusterShift	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t  m_sectorsPerClusterShift;  \/\/ Cluster count to sector count shift.$/;"	m	class:FatPartition
m_sectorsPerFat	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t m_sectorsPerFat;           \/\/ FAT size in sectors$/;"	m	class:FatPartition
m_setCount	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t       m_setCount;$/;"	m	class:ExFatFile
m_size	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  size_t m_size;$/;"	m	class:ArduinoInStream
m_size	./libraries/SdFat/src/iostream/bufstream.h	/^  size_t m_size = 0;$/;"	m	class:obufstream
m_spi	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	/^  SPIClass *m_spi;$/;"	m	class:SdSpiArduinoDriver
m_spi	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  SoftSPI<MisoPin, MosiPin, SckPin, 0> m_spi;$/;"	m	class:SoftSpiDriver
m_spiActive	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool    m_spiActive;$/;"	m	class:SharedSpiCard
m_spiCard	./libraries/SdFat/src/SdCard/SdCard.h	/^  SdSpiCard m_spiCard;$/;"	m	class:SdCardFactory
m_spiDriver	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  SdSpiDriver m_spiDriver;$/;"	m	class:SharedSpiCard
m_spiDriverPtr	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  SdSpiDriver* m_spiDriverPtr;$/;"	m	class:SharedSpiCard
m_spiSettings	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	/^  SPISettings m_spiSettings;$/;"	m	class:SdSpiArduinoDriver
m_state	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t m_state;$/;"	m	class:SharedSpiCard
m_status	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t m_status;$/;"	m	class:SharedSpiCard
m_status	./libraries/SdFat/src/common/FsCache.h	/^  uint8_t m_status;$/;"	m	class:FsCache
m_status	./libraries/SdFat/src/iostream/StdioStream.h	/^  uint8_t  m_status = 0;$/;"	m	class:StdioStream
m_subsampling	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            subsampling_t m_subsampling;$/;"	m	struct:jpge::params
m_tail	./libraries/SdFat/src/RingBuf.h	/^  size_t m_tail;$/;"	m	class:RingBuf
m_totalSectors	./libraries/SdFat/src/FatLib/FatFormatter.h	/^  uint32_t m_totalSectors;$/;"	m	class:FatFormatter
m_transferActive	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool m_transferActive = false;$/;"	v	file:
m_type	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t m_type = 0;$/;"	m	class:SharedSpiCard
m_upcaseChecksum	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^  uint32_t m_upcaseChecksum;$/;"	m	class:ExFatFormatter
m_upcaseSector	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^  uint32_t m_upcaseSector;$/;"	m	class:ExFatFormatter
m_upcaseSize	./libraries/SdFat/src/ExFatLib/ExFatFormatter.h	/^  uint32_t m_upcaseSize;$/;"	m	class:ExFatFormatter
m_validLength	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t      m_validLength;$/;"	m	class:ExFatFile
m_version2	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool m_version2;$/;"	v	file:
m_vol	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ExFatVolume*  m_vol;$/;"	m	class:ExFatFile
m_vol	./libraries/SdFat/src/FatLib/FatFile.h	/^  FatVolume* m_vol;              \/\/ volume where file is located$/;"	m	class:FatFile
m_volMem	./libraries/SdFat/src/FsLib/FsVolume.h	/^  newalign_t   m_volMem[FS_ALIGN_DIM(ExFatVolume, FatVolume)];$/;"	m	class:FsVolume
m_vwd	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  ExFatFile m_vwd;$/;"	m	class:ExFatVolume
m_vwd	./libraries/SdFat/src/FatLib/FatVolume.h	/^  FatFile m_vwd;$/;"	m	class:FatVolume
m_w	./libraries/SdFat/src/iostream/StdioStream.h	/^  uint8_t  m_w;$/;"	m	class:StdioStream
m_width	./libraries/SdFat/src/iostream/ios.h	/^  unsigned int m_width;$/;"	m	class:ios_base
m_wr	./libraries/SdFat/src/BufferedPrint.h	/^  WriteClass* m_wr;$/;"	m	class:BufferedPrint
m_xFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  ExFatFile* m_xFile = nullptr;$/;"	m	class:FsBaseFile
m_xFmt	./libraries/SdFat/src/FsLib/FsFormatter.h	/^  ExFatFormatter m_xFmt;$/;"	m	class:FsFormatter
m_xVol	./libraries/SdFat/src/FsLib/FsVolume.h	/^  ExFatVolume* m_xVol = nullptr;$/;"	m	class:FsVolume
makeFat16	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^bool FatFormatter::makeFat16() {$/;"	f	class:FatFormatter
makeFat32	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^bool FatFormatter::makeFat32() {$/;"	f	class:FatFormatter
makeSFN	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::makeSFN(FatLfn_t* fname) {$/;"	f	class:FatFile
makeUniqueSfn	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::makeUniqueSfn(FatLfn_t* fname) {$/;"	f	class:FatFile
map16	./libraries/SdFat/src/common/upcase.cpp	/^struct map16 {$/;"	s	file:
map16_t	./libraries/SdFat/src/common/upcase.cpp	/^typedef struct map16 map16_t;$/;"	t	typeref:struct:map16	file:
mapf	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static double mapf(double x, double in_min, double in_max, double out_min,$/;"	f	class:ESP32PWM
mask	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  uint8_t mask;            \/**< bit mask for this pin *\/$/;"	m	struct:GpioPinMap_t
masterBootRecordSector	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct masterBootRecordSector {$/;"	s
max	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int max = DEFAULT_uS_HIGH;            \/\/ maximum pulse width for this servo$/;"	m	class:Servo
maxBufferSize	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.h	/^  size_t maxBufferSize() { return _maxBufferSize; }$/;"	f	class:Adafruit_I2CDevice
maxBufferSize	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t maxBufferSize() { return _maxBufferSize; }$/;"	f	class:Adafruit_I2CDevice
maxSck	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  const uint32_t maxSck = SD_SCK_MHZ(50);$/;"	m	class:SdSpiConfig
max_height	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t max_height;$/;"	m	struct:__anon12
max_height	./libraries/esp32-camera/include/sensor.h	/^        uint16_t max_height;$/;"	m	struct:__anon13
max_len	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    size_t max_len, index;$/;"	m	class:memory_stream	file:
max_size	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const framesize_t max_size;$/;"	m	struct:__anon9
max_size	./libraries/esp32-camera/include/sensor.h	/^    const framesize_t max_size;$/;"	m	struct:__anon10
max_width	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t max_width;$/;"	m	struct:__anon12
max_width	./libraries/esp32-camera/include/sensor.h	/^        uint16_t max_width;$/;"	m	struct:__anon13
max_x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^        uint16_t max_x;$/;"	m	struct:__anon18
max_y	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^        uint16_t max_y;$/;"	m	struct:__anon18
mbToCp	./libraries/SdFat/src/common/FsUtf.cpp	/^  const char* mbToCp(const char* str, const char* end, uint32_t* rtn) {$/;"	f	namespace:FsUtf
mbToU16	./libraries/SdFat/src/common/FsUtf.cpp	/^  const char* mbToU16(const char* str,$/;"	f	namespace:FsUtf
mbrPartition	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct mbrPartition {$/;"	s
mcu_load	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^JRESULT mcu_load ($/;"	f	file:
mcu_output	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^JRESULT mcu_output ($/;"	f	file:
mcubuf	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE* mcubuf;			\/* Working buffer for the MCU *\/$/;"	m	struct:JDEC
mcubuf	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE* mcubuf;			\/* Working buffer for the MCU *\/$/;"	m	struct:JDEC
md5	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  const uint8_t md5[16];$/;"	m	struct:__anon3
md5Flash	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::md5Flash(uint32_t offset, uint32_t size,$/;"	f	class:ESP32BootROMClass
mdt	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t mdt[2];$/;"	m	struct:CID
mdtMonth	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int mdtMonth() const {return mdt[1] & 0XF;}$/;"	f	struct:CID
mdtYear	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int mdtYear() const {return 2000 + ((mdt[0] & 0XF) << 4) + (mdt[1] >> 4);}$/;"	f	struct:CID
mediaType	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParameterBlockFat16
mediaType	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  mediaType;$/;"	m	struct:biosParameterBlockFat32
memcpyBuf	./libraries/SdFat/src/RingBuf.h	/^inline void memcpyBuf(void* dst, const void* src, size_t len) {$/;"	f
memcpyIn	./libraries/SdFat/src/RingBuf.h	/^  size_t memcpyIn(const void* buf, size_t count) {$/;"	f	class:RingBuf
memcpyOut	./libraries/SdFat/src/RingBuf.h	/^  size_t memcpyOut(void* buf, size_t count) {$/;"	f	class:RingBuf
memory_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    memory_stream(void *pBuf, uint buf_size) : out_buf(static_cast<uint8_t*>(pBuf)), max_len(buf_size), index(0) { }$/;"	f	class:memory_stream
memory_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^class memory_stream : public jpge::output_stream {$/;"	c	file:
metadata_t	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^struct metadata_t {$/;"	s
metadata_t	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^struct metadata_t {$/;"	s
mid	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t mid;$/;"	m	struct:CID
millis16	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  uint16_t millis16() {return millis();}$/;"	f	class:Timeout
millis_timestamp	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  uint32_t millis_timestamp = 0; \/\/\/< A general purpose timestamp$/;"	m	class:Adafruit_TestBed
min	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int min = DEFAULT_uS_LOW;           \/\/ minimum pulse width for this servo$/;"	m	class:Servo
minSize	./libraries/SdFat/src/RingBuf.h	/^  size_t minSize(size_t a, size_t b) {return a < b ? a : b;}$/;"	f	class:RingBuf
misoPinMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
misoPinMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
misoPort	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
misoPort	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
mkdir	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::mkdir(ExFatFile* parent, ExName_t* fname) {$/;"	f	class:ExFatFile
mkdir	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::mkdir(ExFatFile* parent, const char* path, bool pFlag) {$/;"	f	class:ExFatFile
mkdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool mkdir(const String &path, bool pFlag = true) {$/;"	f	class:ExFatVolume
mkdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool mkdir(const char* path, bool pFlag = true) {$/;"	f	class:ExFatVolume
mkdir	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::mkdir(FatFile* parent, FatName_t* fname) {$/;"	f	class:FatFile
mkdir	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::mkdir(FatFile* parent, const char* path, bool pFlag) {$/;"	f	class:FatFile
mkdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool mkdir(const String& path, bool pFlag = true) {$/;"	f	class:FatVolume
mkdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool mkdir(const char* path, bool pFlag = true) {$/;"	f	class:FatVolume
mkdir	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::mkdir(FsBaseFile* dir, const char* path, bool pFlag) {$/;"	f	class:FsBaseFile
mkdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool mkdir(const String &path, bool pFlag = true) {$/;"	f	class:FsVolume
mkdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool mkdir(const char *path, bool pFlag = true) {$/;"	f	class:FsVolume
mode	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void mode(uint8_t mode) {$/;"	f	class:DigitalPin
model	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const camera_model_t model;$/;"	m	struct:__anon9
model	./libraries/esp32-camera/include/sensor.h	/^    const camera_model_t model;$/;"	m	struct:__anon10
modifyDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyDate[2];$/;"	m	struct:__anon4
modifyDate	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyDate[2];$/;"	m	struct:__anon9
modifyTime	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyTime[2];$/;"	m	struct:__anon4
modifyTime	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyTime[2];$/;"	m	struct:__anon9
modifyTimeMs	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyTimeMs;$/;"	m	struct:__anon9
modifyTimezone	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  modifyTimezone;$/;"	m	struct:__anon9
mosiPinMask	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
mosiPinMask	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice
mosiPort	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
mosiPort	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice
mostimpcolor	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t mostimpcolor;$/;"	m	struct:__anon4	file:
mprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int mprintf(F* file, const __FlashStringHelper *ifsh, ...) {$/;"	f
mprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int mprintf(T *file, const char* fmt, ...) {$/;"	f
mpu	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^MPU6050 mpu;$/;"	v
msx	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE msx, msy;			\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:JDEC
msx	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE msx, msy;			\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:JDEC
msy	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE msx, msy;			\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:JDEC
msy	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE msx, msy;			\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:JDEC
mustBeZero	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  mustBeZero;$/;"	m	struct:__anon11
mustBeZero	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t mustBeZero[53];$/;"	m	struct:biosParameterBlockExFat
mustBeZero1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  mustBeZero1;$/;"	m	struct:__anon5
mustBeZero2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  mustBeZero2[2];$/;"	m	struct:__anon5
myDuty	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	uint32_t myDuty = 0;$/;"	m	class:ESP32PWM
myFreq	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	double myFreq;$/;"	m	class:ESP32PWM
name	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  const char *name;$/;"	m	struct:__anon3
name	./libraries/SdFat/src/FatLib/FatFile.h	/^  __attribute__((warning("use getName(name, size) instead"))) const char* name() const {$/;"	f	class:File32
name	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  name[11];$/;"	m	struct:__anon4
name	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const char *name;$/;"	m	struct:__anon9
name	./libraries/esp32-camera/include/sensor.h	/^    const char *name;$/;"	m	struct:__anon10
nameHash	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint16_t nameHash;$/;"	m	class:ExName_t
nameHash	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  nameHash[2];$/;"	m	struct:__anon10
nameLength	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t nameLength;$/;"	m	class:ExName_t
nameLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  nameLength;$/;"	m	struct:__anon10
neoPixelType	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^typedef uint16_t neoPixelType; \/\/\/< 3rd arg to Adafruit_NeoPixel constructor$/;"	t
neoPixelType	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^typedef uint8_t neoPixelType; \/\/\/< 3rd arg to Adafruit_NeoPixel constructor$/;"	t
neopixelNum	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  uint8_t neopixelNum = 0;  \/\/\/< How many neopixels are on board, if any$/;"	m	class:Adafruit_TestBed
neopixelPin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  int16_t neopixelPin = -1; \/\/\/< The neopixel connected pin if any$/;"	m	class:Adafruit_TestBed
newCard	./libraries/SdFat/src/SdCard/SdCard.h	/^  SdCard* newCard(SdSpiConfig config) {$/;"	f	class:SdCardFactory
newCard	./libraries/SdFat/src/SdCard/SdCard.h	/^  SdCard* newCard(SdioConfig config) {$/;"	f	class:SdCardFactory
newalign_t	./libraries/SdFat/src/FsLib/FsNew.h	/^typedef uint32_t newalign_t;$/;"	t
next	./libraries/SdFat/src/common/FsName.h	/^  const char* next;$/;"	m	class:FsName
nextFree	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t nextFree[4];$/;"	m	struct:FsInfoSector
noboolalpha	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& noboolalpha(ios_base& str) {$/;"	f
nop	./libraries/SdFat/src/DigitalIO/SoftSPI.h	33;"	d
nop	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	28;"	d
nop	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	34;"	d
noshowbase	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& noshowbase(ios_base& str) {$/;"	f
noshowpoint	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& noshowpoint(ios_base& str) {$/;"	f
noshowpos	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& noshowpos(ios_base& str) {$/;"	f
noskipws	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& noskipws(ios_base& str) {$/;"	f
nouppercase	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& nouppercase(ios_base& str) {$/;"	f
nrst	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD nrst;				\/* Restart inverval *\/$/;"	m	struct:JDEC
nrst	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD nrst;				\/* Restart inverval *\/$/;"	m	struct:JDEC
nt99141_detect	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^int nt99141_detect(int slv_addr, sensor_id_t *id)$/;"	f
nt99141_init	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^int nt99141_init(sensor_t *sensor)$/;"	f
nullptr	./libraries/SdFat/src/common/SysCall.h	37;"	d
numBytes	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint16_t numBytes;  \/\/\/< Size of 'pixels' buffer below$/;"	m	class:Adafruit_NeoPixel
numLEDs	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint16_t numLEDs;   \/\/\/< Number of RGB LEDs in strip$/;"	m	class:Adafruit_NeoPixel
numPixels	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint16_t numPixels(void) const { return numLEDs; }$/;"	f	class:Adafruit_NeoPixel
numberOfFats	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t numberOfFats;$/;"	m	struct:biosParameterBlockExFat
numcolorspallette	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t numcolorspallette;$/;"	m	struct:__anon4	file:
oarg	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    void * oarg;$/;"	m	class:callback_stream	file:
obufstream	./libraries/SdFat/src/iostream/bufstream.h	/^  obufstream() {}$/;"	f	class:obufstream
obufstream	./libraries/SdFat/src/iostream/bufstream.h	/^  obufstream(char *buf, size_t size) {$/;"	f	class:obufstream
obufstream	./libraries/SdFat/src/iostream/bufstream.h	/^class obufstream : public ostream {$/;"	c
ocb	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    jpg_out_cb ocb;$/;"	m	class:callback_stream	file:
oct	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags oct        = 0x0020;$/;"	m	class:ios_base
oct	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& oct(ios_base& str) {$/;"	f
oemName	./libraries/SdFat/src/common/FsStructs.h	/^  char     oemName[8];$/;"	m	struct:ExFatBootSector
oemName	./libraries/SdFat/src/common/FsStructs.h	/^  char     oemName[8];$/;"	m	struct:partitionBootSector
oemName	./libraries/SdFat/src/common/FsStructs.h	/^  char     oemName[8];$/;"	m	struct:partitionBootSectorFat
off	./libraries/SdFat/src/common/upcase.cpp	/^  int8_t off;$/;"	m	struct:map16	file:
off_type	./libraries/SdFat/src/iostream/ios.h	/^  typedef int32_t off_type;$/;"	t	class:ios_base
off_type	./libraries/SdFat/src/iostream/ios.h	/^  typedef int64_t off_type;$/;"	t	class:ios_base
offset_x	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t offset_x;$/;"	m	struct:__anon12
offset_x	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^        uint16_t offset_x;$/;"	m	struct:__anon18
offset_x	./libraries/esp32-camera/include/sensor.h	/^        uint16_t offset_x;$/;"	m	struct:__anon13
offset_y	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t offset_y;$/;"	m	struct:__anon12
offset_y	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^        uint16_t offset_y;$/;"	m	struct:__anon18
offset_y	./libraries/esp32-camera/include/sensor.h	/^        uint16_t offset_y;$/;"	m	struct:__anon13
oflag_t	./libraries/SdFat/src/common/FsApiConstants.h	/^typedef int oflag_t;$/;"	t
oflag_t	./libraries/SdFat/src/common/FsApiConstants.h	/^typedef uint8_t oflag_t;$/;"	t
ofstream	./libraries/SdFat/src/iostream/fstream.h	/^  explicit ofstream(const char* path, openmode mode = out) {$/;"	f	class:ofstream
ofstream	./libraries/SdFat/src/iostream/fstream.h	/^  ofstream() {}$/;"	f	class:ofstream
ofstream	./libraries/SdFat/src/iostream/fstream.h	/^class ofstream : public ostream, StreamBaseClass  {$/;"	c
oid	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  char oid[2];$/;"	m	struct:CID
open	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::open(ExFatFile* dirFile, const char* path, oflag_t oflag) {$/;"	f	class:ExFatFile
open	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::open(ExFatFile* dirFile, uint32_t index, oflag_t oflag) {$/;"	f	class:ExFatFile
open	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::open(ExFatVolume* vol, const char* path, oflag_t oflag) {$/;"	f	class:ExFatFile
open	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::open(const char* path, oflag_t oflag) {$/;"	f	class:ExFatFile
open	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::open(uint32_t index, oflag_t oflag) {$/;"	f	class:ExFatFile
open	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  ExFile open(const String &path, oflag_t oflag = O_RDONLY) {$/;"	f	class:ExFatVolume
open	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  ExFile open(const char* path, oflag_t oflag = O_RDONLY) {$/;"	f	class:ExFatVolume
open	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::open(FatFile* dirFile, const char* path, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::open(FatFile* dirFile, uint16_t index, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::open(FatVolume* vol, const char* path, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::open(const char* path, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::open(uint16_t index, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::open(FatFile* dirFile, FatLfn_t* fname, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	/^bool FatFile::open(FatFile* dirFile, FatSfn_t* fname, oflag_t oflag) {$/;"	f	class:FatFile
open	./libraries/SdFat/src/FatLib/FatVolume.h	/^  File32 open(const String& path, oflag_t oflag = O_RDONLY) {$/;"	f	class:FatVolume
open	./libraries/SdFat/src/FatLib/FatVolume.h	/^  File32 open(const char *path, oflag_t oflag = O_RDONLY) {$/;"	f	class:FatVolume
open	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::open(FsBaseFile* dir, const char* path, oflag_t oflag) {$/;"	f	class:FsBaseFile
open	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::open(FsBaseFile* dir, uint32_t index, oflag_t oflag) {$/;"	f	class:FsBaseFile
open	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::open(FsVolume* vol, const char* path, oflag_t oflag) {$/;"	f	class:FsBaseFile
open	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool open(const char* path, oflag_t oflag = O_RDONLY) {$/;"	f	class:FsBaseFile
open	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool open(uint32_t index, oflag_t oflag = O_RDONLY) {$/;"	f	class:FsBaseFile
open	./libraries/SdFat/src/FsLib/FsVolume.cpp	/^FsFile FsVolume::open(const String &path, oflag_t oflag) {$/;"	f	class:FsVolume
open	./libraries/SdFat/src/FsLib/FsVolume.cpp	/^FsFile FsVolume::open(const char *path, oflag_t oflag) {$/;"	f	class:FsVolume
open	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^void StreamBaseClass::open(const char* path, ios::openmode mode) {$/;"	f	class:StreamBaseClass
open	./libraries/SdFat/src/iostream/fstream.h	/^  void open(const char* path, openmode mode = in | out) {$/;"	f	class:fstream
open	./libraries/SdFat/src/iostream/fstream.h	/^  void open(const char* path, openmode mode = in) {$/;"	f	class:ifstream
open	./libraries/SdFat/src/iostream/fstream.h	/^  void open(const char* path, openmode mode = out) {$/;"	f	class:ofstream
openCachedEntry	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::openCachedEntry(FatFile* dirFile, uint16_t dirIndex,$/;"	f	class:FatFile
openCluster	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::openCluster(FatFile* file) {$/;"	f	class:FatFile
openCwd	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::openCwd() {$/;"	f	class:ExFatFile
openCwd	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::openCwd() {$/;"	f	class:FatFile
openCwd	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::openCwd() {$/;"	f	class:FsBaseFile
openExistingSFN	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	/^bool FatFile::openExistingSFN(const char* path) {$/;"	f	class:FatFile
openNext	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::openNext(ExFatFile* dir, oflag_t oflag) {$/;"	f	class:ExFatFile
openNext	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::openNext(FatFile* dirFile, oflag_t oflag) {$/;"	f	class:FatFile
openNext	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::openNext(FsBaseFile* dir, oflag_t oflag) {$/;"	f	class:FsBaseFile
openNextFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ExFile openNextFile(oflag_t oflag = O_RDONLY) {$/;"	f	class:ExFile
openNextFile	./libraries/SdFat/src/FatLib/FatFile.h	/^  File32 openNextFile(oflag_t oflag = O_RDONLY) {$/;"	f	class:File32
openNextFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  FsFile openNextFile(oflag_t oflag = O_RDONLY) {$/;"	f	class:FsFile
openPrivate	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::openPrivate(ExFatFile* dir, ExName_t* fname, oflag_t oflag) {$/;"	f	class:ExFatFile
openRoot	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::openRoot(ExFatVolume* vol) {$/;"	f	class:ExFatFile
openRoot	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::openRoot(FatVolume* vol) {$/;"	f	class:FatFile
openRoot	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::openRoot(FsVolume* vol) {$/;"	f	class:FsBaseFile
openSFN	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	/^bool FatFile::openSFN(FatSfn_t* fname) {$/;"	f	class:FatFile
openmode	./libraries/SdFat/src/iostream/ios.h	/^  typedef uint8_t openmode;$/;"	t	class:ios_base
operator !	./libraries/SdFat/src/iostream/ios.h	/^  bool operator!() const {$/;"	f	class:ios
operator <<	./libraries/SdFat/src/iostream/iostream.h	/^inline ostream &operator<< (ostream &os, const setfill &arg) {$/;"	f
operator <<	./libraries/SdFat/src/iostream/iostream.h	/^inline ostream &operator<< (ostream &os, const setprecision &arg) {$/;"	f
operator <<	./libraries/SdFat/src/iostream/iostream.h	/^inline ostream &operator<< (ostream &os, const setw &arg) {$/;"	f
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (bool arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (char arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (const String& arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (const __FlashStringHelper *arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (const char *arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (const signed char *arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (const unsigned char *arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (double arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (float arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (int arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (long arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (long long arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (short arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (signed char arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (unsigned char arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (unsigned int arg) {$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (unsigned long arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (unsigned long long arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream &operator<< (unsigned short arg) {  \/\/ NOLINT$/;"	f	class:ostream
operator <<	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& operator<< (const void* arg) {$/;"	f	class:ostream
operator =	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  inline DigitalPin & operator = (bool value) __attribute__((always_inline)) {$/;"	f	class:DigitalPin
operator =	./libraries/SdFat/src/FsLib/FsFile.cpp	/^FsBaseFile& FsBaseFile::operator=(const FsBaseFile& from) {$/;"	f	class:FsBaseFile
operator >>	./libraries/SdFat/src/iostream/iostream.h	/^inline istream &operator>>(istream &is, const setprecision &arg) {$/;"	f
operator >>	./libraries/SdFat/src/iostream/iostream.h	/^inline istream &operator>>(istream &is, const setw &arg) {$/;"	f
operator >>	./libraries/SdFat/src/iostream/iostream.h	/^inline istream &operator>>(istream &obj, const setfill &arg) {$/;"	f
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>> (double& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>> (float& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(int& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(long& arg) {  \/\/ NOLINT$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(short& arg) {  \/\/ NOLINT$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(unsigned int& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(unsigned long& arg) {  \/\/ NOLINT$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream &operator>>(unsigned short& arg) {  \/\/ NOLINT$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>> (void*& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(bool& arg) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(char *str) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(char& ch) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(signed char *str) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(signed char& ch) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(unsigned char *str) {$/;"	f	class:istream
operator >>	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(unsigned char& ch) {$/;"	f	class:istream
operator bool	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^BLESerial::operator bool() {$/;"	f	class:BLESerial
operator bool	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^BLESerial::operator bool() {$/;"	f	class:BLESerial
operator bool	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  inline operator bool () const __attribute__((always_inline)) {$/;"	f	class:DigitalPin
operator bool	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  operator bool() {$/;"	f	class:ExFatFile
operator bool	./libraries/SdFat/src/FatLib/FatFile.h	/^  operator bool() const {return isOpen();}$/;"	f	class:FatFile
operator bool	./libraries/SdFat/src/FsLib/FsFile.h	/^  operator bool() const {return isOpen();}$/;"	f	class:FsBaseFile
operator bool	./libraries/SdFat/src/MinimumSerial.h	/^  operator bool() {return true;}$/;"	f	class:MinimumSerial
operator bool	./libraries/SdFat/src/iostream/ios.h	/^  explicit operator bool() const {return !fail();}$/;"	f	class:ios
operator const void*	./libraries/SdFat/src/iostream/ios.h	/^  operator const void*() const {$/;"	f	class:ios
operator new	./libraries/SdFat/src/FsLib/FsNew.cpp	/^void* operator new(size_t size, newalign_t* ptr) {$/;"	f
options	./libraries/SdFat/src/SdCard/SdioCard.h	/^  uint8_t options() {return m_options;}$/;"	f	class:SdioConfig
options	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  const uint8_t options = SHARED_SPI;$/;"	m	class:SdSpiConfig
order	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  order;$/;"	m	struct:__anon5
ostream	./libraries/SdFat/src/iostream/ostream.h	/^  ostream() {}$/;"	f	class:ostream
ostream	./libraries/SdFat/src/iostream/ostream.h	/^class ostream : public virtual ios {$/;"	c
ostream_h	./libraries/SdFat/src/iostream/ostream.h	26;"	d
out	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode out    = 0X40;$/;"	m	class:ios_base
out_buf	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    uint8_t *out_buf;$/;"	m	class:memory_stream	file:
output	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^        uint8_t *output;$/;"	m	struct:__anon5	file:
output_stream	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    class output_stream {$/;"	c	namespace:jpge
ov2640_bank_t	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_regs.h	/^} ov2640_bank_t;$/;"	t	typeref:enum:__anon1
ov2640_clk_t	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^} ov2640_clk_t;$/;"	t	typeref:struct:__anon13
ov2640_detect	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^int ov2640_detect(int slv_addr, sensor_id_t *id)$/;"	f
ov2640_init	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^int ov2640_init(sensor_t *sensor)$/;"	f
ov2640_ratio_settings_t	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^} ov2640_ratio_settings_t;$/;"	t	typeref:struct:__anon18
ov2640_sensor_mode_t	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^} ov2640_sensor_mode_t;$/;"	t	typeref:enum:__anon12
ov2640_settings_cif	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const DRAM_ATTR uint8_t ov2640_settings_cif[][2] = {$/;"	v
ov2640_settings_jpeg3	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const DRAM_ATTR uint8_t ov2640_settings_jpeg3[][2] = {$/;"	v
ov2640_settings_rgb565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t ov2640_settings_rgb565[][2] = {$/;"	v
ov2640_settings_to_cif	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const DRAM_ATTR uint8_t ov2640_settings_to_cif[][2] = {$/;"	v
ov2640_settings_to_svga	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const DRAM_ATTR uint8_t ov2640_settings_to_svga[][2] = {$/;"	v
ov2640_settings_to_uxga	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^const DRAM_ATTR uint8_t ov2640_settings_to_uxga[][2] = {$/;"	v
ov2640_settings_yuv422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t ov2640_settings_yuv422[][2] = {$/;"	v
ov3660_detect	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^int ov3660_detect(int slv_addr, sensor_id_t *id)$/;"	f
ov3660_init	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^int ov3660_init(sensor_t *sensor)$/;"	f
ov5640_detect	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^int ov5640_detect(int slv_addr, sensor_id_t *id)$/;"	f
ov5640_init	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^int ov5640_init(sensor_t *sensor)$/;"	f
ov7670_clkrc	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int ov7670_clkrc = 0x01;$/;"	v	file:
ov7670_default_regs	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_default_regs[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_detect	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^int ov7670_detect(int slv_addr, sensor_id_t *id)$/;"	f
ov7670_fmt_rgb565	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_fmt_rgb565[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_fmt_yuv422	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_fmt_yuv422[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_frame_control	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int ov7670_frame_control(sensor_t *sensor, int hstart, int hstop, int vstart, int vstop)$/;"	f	file:
ov7670_init	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^int ov7670_init(sensor_t *sensor)$/;"	f
ov7670_qqvga	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_qqvga[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_qvga	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_qvga[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_vga	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static struct regval_list ov7670_vga[] = {$/;"	v	typeref:struct:regval_list	file:
ov7670_write_array	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int ov7670_write_array(sensor_t *sensor, struct regval_list *vals)$/;"	f	file:
ov7725_detect	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^int ov7725_detect(int slv_addr, sensor_id_t *id)$/;"	f
ov7725_init	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^int ov7725_init(sensor_t *sensor)$/;"	f
overrun	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint16_t overrun;  \/\/ count of overruns since last block$/;"	m	struct:block8_t
overrun	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  unsigned short overrun;  \/\/ count of overruns since last block$/;"	m	struct:block16_t
overrun	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short overrun;  \/\/ count of overruns since last block$/;"	m	struct:adcdata_t
overrun	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short overrun;  \/\/ count of overruns since last block$/;"	m	struct:block16_t
overrun	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned short overrun;  \/\/ count of overruns since last block$/;"	m	struct:block8_t
p	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const float p[] = {1e+1, 1e+2, 1e+4, 1e+8, 1e+16, 1e+32};$/;"	v	file:
p	./libraries/SdFat/src/iostream/iostream.h	/^  unsigned int p;$/;"	m	struct:setprecision
pair16	./libraries/SdFat/src/common/upcase.cpp	/^struct pair16 {$/;"	s	file:
pair16_t	./libraries/SdFat/src/common/upcase.cpp	/^typedef struct pair16 pair16_t;$/;"	t	typeref:struct:pair16	file:
params	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            inline params() : m_quality(85), m_subsampling(H2V2) { }$/;"	f	struct:jpge::params
params	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    struct params {$/;"	s	namespace:jpge
parsePathName	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::parsePathName(const char* path,$/;"	f	class:ExFatFile
parsePathName	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::parsePathName(const char* path,$/;"	f	class:FatFile
parsePathName	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	/^bool FatFile::parsePathName(const char* path, FatSfn_t* fname,$/;"	f	class:FatFile
part	./libraries/SdFat/src/common/FsStructs.h	/^  MbrPart_t part[4];$/;"	m	struct:masterBootRecordSector
partitionBootSector	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct partitionBootSector {$/;"	s
partitionBootSectorFat	./libraries/SdFat/src/common/FsStructs.h	/^typedef struct partitionBootSectorFat {$/;"	s
partitionOffset	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t partitionOffset[8];$/;"	m	struct:biosParameterBlockExFat
pbs_t	./libraries/SdFat/src/common/FsStructs.h	/^} pbs_t;$/;"	t	typeref:struct:partitionBootSector
pclk	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                uint8_t pclk;$/;"	m	union:__anon13::__anon14
pclk_auto	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                        uint8_t pclk_auto:1;$/;"	m	struct:__anon13::__anon14::__anon15
pclk_div	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                        uint8_t pclk_div:7;$/;"	m	struct:__anon13::__anon14::__anon15
peek	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^int BLESerial::peek(void) {$/;"	f	class:BLESerial
peek	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^int BLESerial::peek(void) {$/;"	f	class:BLESerial
peek	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^int ExFatFile::peek() {$/;"	f	class:ExFatFile
peek	./libraries/SdFat/src/FatLib/FatFile.cpp	/^int FatFile::peek() {$/;"	f	class:FatFile
peek	./libraries/SdFat/src/FsLib/FsFile.h	/^  int peek() {$/;"	f	class:FsBaseFile
peek	./libraries/SdFat/src/common/ArduinoFiles.h	/^  int peek() {$/;"	f	class:StreamFile
peek	./libraries/SdFat/src/iostream/istream.cpp	/^int istream::peek() {$/;"	f	class:istream
percentInUse	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t percentInUse;$/;"	m	struct:biosParameterBlockExFat
performanceMove	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t performanceMove;$/;"	m	struct:SdStatus
permWriteProtect	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool permWriteProtect() const {return  csd[14] & 0X20;}$/;"	f	struct:CSD
perror	./libraries/SdFat/src/iostream/StdioStream.h	65;"	d
pf	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(ios& (*pf)(ios& str)) {$/;"	f	class:istream
pf	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(ios_base& (*pf)(ios_base& str)) {$/;"	f	class:istream
pf	./libraries/SdFat/src/iostream/istream.h	/^  istream& operator>>(istream& (*pf)(istream& str)) {$/;"	f	class:istream
pf	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& operator<< (ios_base& (*pf)(ios_base& str)) {$/;"	f	class:ostream
pf	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& operator<< (ostream& (*pf)(ostream& str)) {$/;"	f	class:ostream
pgm_read_byte	./libraries/SdFat/src/FatLib/FatFile.h	51;"	d
pgm_read_word	./libraries/SdFat/src/FatLib/FatFile.h	55;"	d
physicalDriveNumber	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  physicalDriveNumber;$/;"	m	struct:biosParameterBlockFat16
physicalDriveNumber	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  physicalDriveNumber;$/;"	m	struct:biosParameterBlockFat32
pid	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const camera_pid_t pid;$/;"	m	struct:__anon9
pid	./libraries/esp32-camera/include/sensor.h	/^    const camera_pid_t pid;$/;"	m	struct:__anon10
piezoPin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  int16_t piezoPin = -1; \/\/\/< The pin for a piezo buzzer, if it exists$/;"	m	class:Adafruit_TestBed
pin	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  int16_t pin;        \/\/\/< Output pin number (-1 if not yet set)$/;"	m	class:Adafruit_NeoPixel
pin	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	int pin;$/;"	m	class:ESP32PWM
pin	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  volatile uint8_t* pin;   \/**< address of PIN for this pin *\/$/;"	m	struct:GpioPinMap_t
pinCount	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint8_t pinCount;                \/\/ Number of analog pins in a sample.$/;"	m	struct:metadata_t
pinCount	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  pinCount;         \/\/ Number of analog pins in a sample.$/;"	m	struct:metadata_t
pinMask	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t pinMask;        \/\/\/< Output PORT bitmask$/;"	m	class:Adafruit_NeoPixel
pinMask	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^uint8_t pinMask(uint8_t pin) {$/;"	f
pinNumber	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int pinNumber = 0;                      \/\/ GPIO pin assigned to this channel$/;"	m	class:Servo
pinNumber	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint8_t pinNumber[PIN_NUM_DIM];  \/\/ List of pin numbers in a sample.$/;"	m	struct:metadata_t
pinNumber	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  pinNumber[123];   \/\/ List of pin numbers in a sample.$/;"	m	struct:metadata_t
pinReg	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^volatile uint8_t* pinReg(uint8_t pin) {$/;"	f
pin_d0	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d0;                     \/*!< GPIO pin for camera D0 line *\/$/;"	m	struct:__anon19
pin_d0	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d0;                     \/*!< GPIO pin for camera D0 line *\/$/;"	m	struct:__anon20
pin_d1	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d1;                     \/*!< GPIO pin for camera D1 line *\/$/;"	m	struct:__anon19
pin_d1	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d1;                     \/*!< GPIO pin for camera D1 line *\/$/;"	m	struct:__anon20
pin_d2	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d2;                     \/*!< GPIO pin for camera D2 line *\/$/;"	m	struct:__anon19
pin_d2	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d2;                     \/*!< GPIO pin for camera D2 line *\/$/;"	m	struct:__anon20
pin_d3	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d3;                     \/*!< GPIO pin for camera D3 line *\/$/;"	m	struct:__anon19
pin_d3	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d3;                     \/*!< GPIO pin for camera D3 line *\/$/;"	m	struct:__anon20
pin_d4	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d4;                     \/*!< GPIO pin for camera D4 line *\/$/;"	m	struct:__anon19
pin_d4	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d4;                     \/*!< GPIO pin for camera D4 line *\/$/;"	m	struct:__anon20
pin_d5	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d5;                     \/*!< GPIO pin for camera D5 line *\/$/;"	m	struct:__anon19
pin_d5	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d5;                     \/*!< GPIO pin for camera D5 line *\/$/;"	m	struct:__anon20
pin_d6	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d6;                     \/*!< GPIO pin for camera D6 line *\/$/;"	m	struct:__anon19
pin_d6	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d6;                     \/*!< GPIO pin for camera D6 line *\/$/;"	m	struct:__anon20
pin_d7	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_d7;                     \/*!< GPIO pin for camera D7 line *\/$/;"	m	struct:__anon19
pin_d7	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_d7;                     \/*!< GPIO pin for camera D7 line *\/$/;"	m	struct:__anon20
pin_href	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_href;                   \/*!< GPIO pin for camera HREF line *\/$/;"	m	struct:__anon19
pin_href	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_href;                   \/*!< GPIO pin for camera HREF line *\/$/;"	m	struct:__anon20
pin_pclk	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_pclk;                   \/*!< GPIO pin for camera PCLK line *\/$/;"	m	struct:__anon19
pin_pclk	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_pclk;                   \/*!< GPIO pin for camera PCLK line *\/$/;"	m	struct:__anon20
pin_pwdn	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_pwdn;                   \/*!< GPIO pin for camera power down line *\/$/;"	m	struct:__anon19
pin_pwdn	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_pwdn;                   \/*!< GPIO pin for camera power down line *\/$/;"	m	struct:__anon20
pin_reset	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_reset;                  \/*!< GPIO pin for camera reset line *\/$/;"	m	struct:__anon19
pin_reset	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_reset;                  \/*!< GPIO pin for camera reset line *\/$/;"	m	struct:__anon20
pin_sccb_scl	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^        int pin_sccb_scl;           \/*!< GPIO pin for camera SCL line *\/$/;"	m	union:__anon19::__anon21
pin_sccb_scl	./libraries/esp32-camera/include/esp_camera.h	/^        int pin_sccb_scl;           \/*!< GPIO pin for camera SCL line *\/$/;"	m	union:__anon20::__anon22
pin_sccb_sda	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^        int pin_sccb_sda;           \/*!< GPIO pin for camera SDA line *\/$/;"	m	union:__anon19::__anon20
pin_sccb_sda	./libraries/esp32-camera/include/esp_camera.h	/^        int pin_sccb_sda;           \/*!< GPIO pin for camera SDA line *\/$/;"	m	union:__anon20::__anon21
pin_sscb_scl	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^        int pin_sscb_scl __attribute__((deprecated("please use pin_sccb_scl instead")));           \/*!< GPIO pin for camera SCL line (legacy name) *\/$/;"	m	union:__anon19::__anon21
pin_sscb_scl	./libraries/esp32-camera/include/esp_camera.h	/^        int pin_sscb_scl __attribute__((deprecated("please use pin_sccb_scl instead")));           \/*!< GPIO pin for camera SCL line (legacy name) *\/$/;"	m	union:__anon20::__anon22
pin_sscb_sda	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^        int pin_sscb_sda __attribute__((deprecated("please use pin_sccb_sda instead")));           \/*!< GPIO pin for camera SDA line (legacy name) *\/$/;"	m	union:__anon19::__anon20
pin_sscb_sda	./libraries/esp32-camera/include/esp_camera.h	/^        int pin_sscb_sda __attribute__((deprecated("please use pin_sccb_sda instead")));           \/*!< GPIO pin for camera SDA line (legacy name) *\/$/;"	m	union:__anon20::__anon21
pin_vsync	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_vsync;                  \/*!< GPIO pin for camera VSYNC line *\/$/;"	m	struct:__anon19
pin_vsync	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_vsync;                  \/*!< GPIO pin for camera VSYNC line *\/$/;"	m	struct:__anon20
pin_xclk	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int pin_xclk;                   \/*!< GPIO pin for camera XCLK line *\/$/;"	m	struct:__anon19
pin_xclk	./libraries/esp32-camera/include/esp_camera.h	/^    int pin_xclk;                   \/*!< GPIO pin for camera XCLK line *\/$/;"	m	struct:__anon20
pio	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  PIO pio = pio0;$/;"	m	class:Adafruit_NeoPixel
pixel_format	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    pixformat_t pixel_format;       \/*!< Format of the pixel data: PIXFORMAT_ + YUV422|GRAYSCALE|RGB565|JPEG  *\/$/;"	m	struct:__anon19
pixel_format	./libraries/esp32-camera/include/esp_camera.h	/^    pixformat_t pixel_format;       \/*!< Format of the pixel data: PIXFORMAT_ + YUV422|GRAYSCALE|RGB565|JPEG  *\/$/;"	m	struct:__anon20
pixels	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t *pixels;    \/\/\/< Holds LED color values (3 or 4 bytes each)$/;"	m	class:Adafruit_NeoPixel
pixels	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  Adafruit_NeoPixel *pixels =$/;"	m	class:Adafruit_TestBed
pixformat	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    pixformat_t pixformat;$/;"	m	struct:_sensor
pixformat	./libraries/esp32-camera/include/sensor.h	/^    pixformat_t pixformat;$/;"	m	struct:_sensor
pixformat_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} pixformat_t;$/;"	t	typeref:enum:__anon7
pixformat_t	./libraries/esp32-camera/include/sensor.h	/^} pixformat_t;$/;"	t	typeref:enum:__anon8
planes	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint16_t planes;$/;"	m	struct:__anon4	file:
pnm	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  char pnm[5];$/;"	m	struct:CID
poll	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^void BLESerial::poll() {$/;"	f	class:BLESerial
poll	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^void BLESerial::poll() {$/;"	f	class:BLESerial
pool	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	void* pool;				\/* Pointer to available memory pool *\/$/;"	m	struct:JDEC
pool	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	void* pool;				\/* Pointer to available memory pool *\/$/;"	m	struct:JDEC
port	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  volatile uint8_t *port; \/\/\/< Output PORT register$/;"	m	class:Adafruit_NeoPixel
port	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  volatile uint8_t* port;  \/**< address of PORT for this pin *\/$/;"	m	struct:GpioPinMap_t
portReg	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^volatile uint8_t* portReg(uint8_t pin) {$/;"	f
portTICK_RATE_MS	./libraries/esp32-camera-2.0.8/driver/sccb.c	30;"	d	file:
portTICK_RATE_MS	./libraries/esp32-camera-2.0.8/examples/camera_example/main/take_picture.c	43;"	d	file:
portTICK_RATE_MS	./libraries/esp32-camera/sccb.c	30;"	d	file:
pos_t	./libraries/SdFat/src/iostream/ios.h	/^typedef fspos_t pos_t;$/;"	t
pos_type	./libraries/SdFat/src/iostream/ios.h	/^  typedef uint32_t pos_type;$/;"	t	class:ios_base
pos_type	./libraries/SdFat/src/iostream/ios.h	/^  typedef uint64_t pos_type;$/;"	t	class:ios_base
position	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t position;$/;"	m	struct:DirPos_t
position	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint32_t position;$/;"	m	struct:FatPos_t
position	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint64_t position() const {return curPosition();}$/;"	f	class:FsBaseFile
position	./libraries/SdFat/src/common/ArduinoFiles.h	/^  PosType position() {$/;"	f	class:StreamFile
position	./libraries/SdFat/src/common/FsStructs.h	/^  uint64_t position;$/;"	m	struct:__anon2
powTen	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const double powTen[] = {1e1, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9};$/;"	v	file:
pre-install	./libraries/Adafruit_NeoPixel/.github/workflows/githubci.yml	/^    - name: pre-install$/;"	k
pre-install	./libraries/Adafruit_TestBed/.github/workflows/githubci.yml	/^    - name: pre-install$/;"	k
pre-install	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: pre-install$/;"	k
preAllocate	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::preAllocate(uint64_t length) {$/;"	f	class:ExFatFile
preAllocate	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::preAllocate(uint32_t length) {$/;"	f	class:FatFile
preAllocate	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool preAllocate(uint64_t length) {$/;"	f	class:FsBaseFile
precision	./libraries/SdFat/src/iostream/ios.h	/^  int precision() const {$/;"	f	class:ios_base
precision	./libraries/SdFat/src/iostream/ios.h	/^  int precision(unsigned int n) {$/;"	f	class:ios_base
prepare	./libraries/SdFat/src/common/FsCache.cpp	/^uint8_t* FsCache::prepare(uint32_t sector, uint8_t option) {$/;"	f	class:FsCache
print	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::print(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register
print	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::print(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register
print	./libraries/Logging/logging.h	/^    static void print(const char* format, ...) {$/;"	f	class:Log
print	./libraries/SdFat/extras/attic/PrintBasic.cpp	/^size_t PrintBasic::print(long n, uint8_t base) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(char c) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(const __FlashStringHelper *str) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(const char* str) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(double n, uint8_t prec = 2) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(signed char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(unsigned char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(unsigned int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t print(unsigned long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/BufferedPrint.h	/^  size_t print(Type v) {$/;"	f	class:BufferedPrint
print	./libraries/SdFat/src/BufferedPrint.h	/^  size_t print(double d, uint8_t prec = 2) {$/;"	f	class:BufferedPrint
print	./libraries/SdFat/src/BufferedPrint.h	/^  size_t print(float f, uint8_t prec = 2) {$/;"	f	class:BufferedPrint
print	./libraries/SdFat/src/common/PrintBasic.cpp	/^size_t PrintBasic::print(long n, uint8_t base) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(char c) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(const __FlashStringHelper *str) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(const char* str) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(double n, uint8_t prec = 2) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(signed char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(unsigned char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(unsigned int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t print(unsigned long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
print	./libraries/SdFat/src/iostream/StdioStream.cpp	/^size_t StdioStream::print(const __FlashStringHelper *str) {$/;"	f	class:StdioStream
print	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t print(T val) {$/;"	f	class:StdioStream
print	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t print(char c) {$/;"	f	class:StdioStream
print	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t print(const char* str) {$/;"	f	class:StdioStream
print	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t print(double val, uint8_t prec = 2) {$/;"	f	class:StdioStream
print	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t print(float val, uint8_t prec = 2) {$/;"	f	class:StdioStream
printAccessDate	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	/^size_t FatFile::printAccessDate(print_t* pr) {$/;"	f	class:FatFile
printAccessDateTime	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printAccessDateTime(print_t* pr) {$/;"	f	class:ExFatFile
printAccessDateTime	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t printAccessDateTime(print_t* pr) {$/;"	f	class:FatFile
printAccessDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printAccessDateTime(print_t* pr) {$/;"	f	class:FsBaseFile
printCreateDateTime	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printCreateDateTime(print_t* pr) {$/;"	f	class:ExFatFile
printCreateDateTime	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	/^size_t FatFile::printCreateDateTime(print_t* pr) {$/;"	f	class:FatFile
printCreateDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printCreateDateTime(print_t* pr) {$/;"	f	class:FsBaseFile
printData	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserFunctions.cpp	/^void printData(Print* pr, data_t* data) {$/;"	f
printData	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^void printData(Print* pr, data_t* data) {$/;"	f
printData	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^void printData(Print* pr, data_t* data) {$/;"	f
printDateTime	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDateTime(print_t* pr,$/;"	f	file:
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(float value, uint8_t prec) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(int16_t n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(int32_t n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(signed char n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(uint16_t n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printDec(uint32_t n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printDec(char n) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printDec(double value, uint8_t prec) {$/;"	f	class:StdioStream
printDec	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printDec(unsigned char n) {$/;"	f	class:StdioStream
printDir	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^bool ExFatPartition::printDir(print_t* pr, ExFatFile* file) {$/;"	f	class:ExFatPartition
printDirBitmap	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirBitmap(print_t* pr, DirBitmap_t* dir) {$/;"	f	file:
printDirFile	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirFile(print_t* pr, DirFile_t* dir) {$/;"	f	file:
printDirLabel	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirLabel(print_t* pr, DirLabel_t* dir) {$/;"	f	file:
printDirName	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirName(print_t* pr, DirName_t* dir) {$/;"	f	file:
printDirStream	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirStream(print_t* pr, DirStream_t* dir) {$/;"	f	file:
printDirUpcase	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printDirUpcase(print_t* pr, DirUpcase_t* dir) {$/;"	f	file:
printDouble	./libraries/SdFat/extras/attic/PrintBasic.cpp	/^size_t PrintBasic::printDouble(double n, uint8_t prec) {$/;"	f	class:PrintBasic
printDouble	./libraries/SdFat/src/common/PrintBasic.cpp	/^size_t PrintBasic::printDouble(double n, uint8_t prec) {$/;"	f	class:PrintBasic
printExFatBoot	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printExFatBoot(print_t* pr, pbs_t* pbs) {$/;"	f	file:
printFat	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::printFat(print_t* pr) {$/;"	f	class:ExFatPartition
printFatDir	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static bool printFatDir(print_t* pr, DirFat_t* dir) {$/;"	f	file:
printFatType	./libraries/SdFat/src/SdFat.h	/^  void printFatType(print_t* pr) {$/;"	f	class:SdBase
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(Type n, char term) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(char c, char term) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(const __FlashStringHelper *fsh, char term) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(const char* str, char term) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(double d, char term, uint8_t prec = 2) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/BufferedPrint.h	/^  size_t printField(float f, char term,  uint8_t prec = 2) {$/;"	f	class:BufferedPrint
printField	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t printField(Type value, char term) {$/;"	f	class:ExFatFile
printField	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t printField(double value, char term, uint8_t prec = 2) {$/;"	f	class:ExFatFile
printField	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t printField(float value, char term, uint8_t prec = 2) {$/;"	f	class:ExFatFile
printField	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t printField(Type value, char term) {$/;"	f	class:FatFile
printField	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t printField(double value, char term, uint8_t prec = 2) {$/;"	f	class:FatFile
printField	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t printField(float value, char term, uint8_t prec = 2) {$/;"	f	class:FatFile
printField	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printField(Type value, char term) {$/;"	f	class:FsBaseFile
printField	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printField(double value, char term, uint8_t prec = 2) {$/;"	f	class:FsBaseFile
printField	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printField(float value, char term, uint8_t prec = 2) {$/;"	f	class:FsBaseFile
printField	./libraries/SdFat/src/RingBuf.h	/^  size_t printField(Type value, char term) {$/;"	f	class:RingBuf
printField	./libraries/SdFat/src/RingBuf.h	/^  size_t printField(double value, char term, uint8_t prec = 2) {$/;"	f	class:RingBuf
printField	./libraries/SdFat/src/RingBuf.h	/^  size_t printField(float value, char term, uint8_t prec = 2) {$/;"	f	class:RingBuf
printField	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printField(T value, char term) {$/;"	f	class:StdioStream
printField	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printField(double value, char term, uint8_t prec = 2) {$/;"	f	class:StdioStream
printField	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printField(float value, char term, uint8_t prec = 2) {$/;"	f	class:StdioStream
printFileSize	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printFileSize(print_t* pr) {$/;"	f	class:ExFatFile
printFileSize	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	/^size_t FatFile::printFileSize(print_t* pr) {$/;"	f	class:FatFile
printFileSize	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printFileSize(print_t* pr) {$/;"	f	class:FsBaseFile
printHeader	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserFunctions.cpp	/^void printHeader(Print* pr) {$/;"	f
printHeader	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^void printHeader(Print* pr) {$/;"	f
printHeader	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^void printHeader(Print* pr) {$/;"	f
printHex	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printHex(print_t* pr, uint16_t val) {$/;"	f	file:
printHex	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printHex(print_t* pr, uint32_t val) {$/;"	f	file:
printHex	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printHex(print_t* pr, uint8_t h) {$/;"	f	file:
printHex	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static void printHex(print_t* pr, uint16_t val) {$/;"	f	file:
printHex	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static void printHex(print_t* pr, uint32_t val) {$/;"	f	file:
printHex	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static void printHex(print_t* pr, uint8_t h) {$/;"	f	file:
printHex	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static void printHex(print_t* pr, uint8_t w, uint16_t h) {$/;"	f	file:
printHex	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::printHex(uint32_t n) {$/;"	f	class:StdioStream
printHex64	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printHex64(print_t* pr, uint64_t n) {$/;"	f	file:
printHexLn	./libraries/SdFat/src/FatLib/FatDbg.cpp	/^static void printHexLn(print_t* pr, Uint val) {$/;"	f	file:
printHexln	./libraries/SdFat/src/iostream/StdioStream.h	/^  int printHexln(uint32_t n) {$/;"	f	class:StdioStream
printI2CBusScan	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::printI2CBusScan(void) {$/;"	f	class:Adafruit_TestBed
printMbr	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void printMbr(print_t* pr, MbrSector_t* mbr) {$/;"	f	file:
printModifyDateTime	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printModifyDateTime(print_t* pr) {$/;"	f	class:ExFatFile
printModifyDateTime	./libraries/SdFat/src/FatLib/FatFilePrint.cpp	/^size_t FatFile::printModifyDateTime(print_t* pr) {$/;"	f	class:FatFile
printModifyDateTime	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printModifyDateTime(print_t* pr) {$/;"	f	class:FsBaseFile
printName	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t printName() {$/;"	f	class:ExFatFile
printName	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t printName(print_t* pr) {$/;"	f	class:ExFatFile
printName	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t printName() {$/;"	f	class:FatFile
printName	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::printName(print_t* pr) {$/;"	f	class:FatFile
printName	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t printName(print_t* pr) {$/;"	f	class:FsBaseFile
printName7	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printName7(print_t* pr) {$/;"	f	class:ExFatFile
printName7	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::printName7(print_t* pr) {$/;"	f	class:FatFile
printName8	./libraries/SdFat/src/ExFatLib/ExFatFilePrint.cpp	/^size_t ExFatFile::printName8(print_t *pr) {$/;"	f	class:ExFatFile
printName8	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::printName8(print_t *pr) {$/;"	f	class:FatFile
printNum	./libraries/SdFat/extras/attic/PrintBasic.cpp	/^size_t PrintBasic::printNum(unsigned long n, uint8_t base) {$/;"	f	class:PrintBasic
printNum	./libraries/SdFat/src/common/PrintBasic.cpp	/^size_t PrintBasic::printNum(unsigned long n, uint8_t base) {$/;"	f	class:PrintBasic
printRegs	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void printRegs(uint32_t line) {$/;"	f	file:
printSFN	./libraries/SdFat/src/FatLib/FatName.cpp	/^size_t FatFile::printSFN(print_t* pr) {$/;"	f	class:FatFile
printSdError	./libraries/SdFat/src/SdFat.h	/^  void printSdError(print_t* pr) {$/;"	f	class:SdBase
printSdErrorSymbol	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	/^void printSdErrorSymbol(print_t* pr, uint8_t code) {$/;"	f
printSdErrorText	./libraries/SdFat/src/SdCard/SdCardInfo.cpp	/^void printSdErrorText(print_t* pr, uint8_t code) {$/;"	f
printTimeTaken	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::printTimeTaken(bool restamp) {$/;"	f	class:Adafruit_TestBed
printUpcase	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^void ExFatPartition::printUpcase(print_t* pr) {$/;"	f	class:ExFatPartition
printVolInfo	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^bool ExFatPartition::printVolInfo(print_t* pr) {$/;"	f	class:ExFatPartition
print_buf	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^static void print_buf(uint8_t const *buf, size_t len) {$/;"	f	file:
print_regs	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static void print_regs(uint8_t slv_addr)$/;"	f	file:
print_regs	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static void print_regs(uint8_t slv_addr)$/;"	f	file:
print_regs	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static void print_regs(uint8_t slv_addr)$/;"	f	file:
print_regs	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static void print_regs(uint8_t slv_addr)$/;"	f	file:
print_rgb565_img	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void print_rgb565_img(uint8_t *img, int width, int height)$/;"	f	file:
print_rgb888_img	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void print_rgb888_img(uint8_t *img, int width, int height)$/;"	f	file:
print_t	./libraries/SdFat/src/common/SysCall.h	/^typedef Print print_t;$/;"	t
print_t	./libraries/SdFat/src/common/SysCall.h	/^typedef PrintBasic print_t;$/;"	t
printf_img_base64	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void printf_img_base64(const camera_fb_t *pic)$/;"	f	file:
println	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::println(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register
println	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::println(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register
println	./libraries/Logging/logging.h	/^    static void println(const char* format, ...) {$/;"	f	class:Log
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println() {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(char c) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(const __FlashStringHelper *str) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(const char* str) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(double n, uint8_t prec = 2) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(signed char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(unsigned char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(unsigned int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t println(unsigned long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/BufferedPrint.h	/^  size_t println() {$/;"	f	class:BufferedPrint
println	./libraries/SdFat/src/BufferedPrint.h	/^  size_t println(Type v) {$/;"	f	class:BufferedPrint
println	./libraries/SdFat/src/BufferedPrint.h	/^  size_t println(double d, uint8_t prec = 2) {$/;"	f	class:BufferedPrint
println	./libraries/SdFat/src/BufferedPrint.h	/^  size_t println(float f, uint8_t prec) {$/;"	f	class:BufferedPrint
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println() {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(char c) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(const __FlashStringHelper *str) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(const char* str) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(double n, uint8_t prec = 2) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(signed char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(unsigned char n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(unsigned int n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t println(unsigned long n, uint8_t base = 10) {$/;"	f	class:PrintBasic
println	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t println() {$/;"	f	class:StdioStream
println	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t println(T val) {$/;"	f	class:StdioStream
println	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t println(double val, uint8_t prec = 2) {$/;"	f	class:StdioStream
println	./libraries/SdFat/src/iostream/StdioStream.h	/^  size_t println(float val, uint8_t prec = 2) {$/;"	f	class:StdioStream
println64	./libraries/SdFat/src/ExFatLib/ExFatDbg.cpp	/^static void println64(print_t* pr, uint64_t n) {$/;"	f	file:
process_end_of_image	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    bool jpeg_encoder::process_end_of_image()$/;"	f	class:jpge::jpeg_encoder
process_mcu_row	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::process_mcu_row()$/;"	f	class:jpge::jpeg_encoder
process_scanline	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    bool jpeg_encoder::process_scanline(const void* pScanline)$/;"	f	class:jpge::jpeg_encoder
prv	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t prv;$/;"	m	struct:CID
prvM	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int prvM() const {return prv & 0XF;}$/;"	f	struct:CID
prvN	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int prvN() const {return prv >> 4;}$/;"	f	struct:CID
psn	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint32_t psn() const {$/;"	f	struct:CID
psn8	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t psn8[4];$/;"	m	struct:CID
psram_mode	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    bool psram_mode;$/;"	m	struct:__anon26
put	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& put(char ch) {$/;"	f	class:ostream
putBool	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putBool(bool b) {$/;"	f	class:ostream
putCRLF	./libraries/SdFat/src/iostream/StdioStream.h	/^  int putCRLF() {$/;"	f	class:StdioStream
putChar	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putChar(char c) {$/;"	f	class:ostream
putDouble	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putDouble(double n) {$/;"	f	class:ostream
putLfnChar	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^static void putLfnChar(DirLfn_t* ldir, uint8_t i, uint16_t c) {$/;"	f	file:
putNum	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putNum(int32_t n) {$/;"	f	class:ostream
putNum	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putNum(int64_t n) {$/;"	f	class:ostream
putNum	./libraries/SdFat/src/iostream/ostream.h	/^  void putNum(T n, bool neg) {$/;"	f	class:ostream
putNum	./libraries/SdFat/src/iostream/ostream.h	/^  void putNum(uint32_t n) {putNum(n, false);}$/;"	f	class:ostream
putNum	./libraries/SdFat/src/iostream/ostream.h	/^  void putNum(uint64_t n) {putNum(n, false);}$/;"	f	class:ostream
putPgm	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putPgm(const char* str) {$/;"	f	class:ostream
putStr	./libraries/SdFat/src/iostream/ostream.cpp	/^void ostream::putStr(const char *str) {$/;"	f	class:ostream
put_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    void jpeg_encoder::put_bits(uint bits, uint len)$/;"	f	class:jpge::jpeg_encoder
put_buf	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual bool put_buf(const void* data, int len)$/;"	f	class:callback_stream
put_buf	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual bool put_buf(const void* pBuf, int len)$/;"	f	class:memory_stream
putc	./libraries/SdFat/src/iostream/StdioStream.h	/^  int putc(int c) {$/;"	f	class:StdioStream
putc	./libraries/SdFat/src/iostream/StdioStream.h	67;"	d
putch	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  void putch(char c) {$/;"	f	class:ArduinoOutStream
putch	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^void StreamBaseClass::putch(char c) {$/;"	f	class:StreamBaseClass
putch	./libraries/SdFat/src/iostream/bufstream.h	/^  void putch(char c) {$/;"	f	class:obufstream
putch	./libraries/SdFat/src/iostream/fstream.h	/^  void putch(char c) {$/;"	f	class:fstream
putch	./libraries/SdFat/src/iostream/fstream.h	/^  void putch(char c) {$/;"	f	class:ofstream
putchar	./libraries/SdFat/src/iostream/StdioStream.h	68;"	d
puts	./libraries/SdFat/src/iostream/StdioStream.h	69;"	d
putstr	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  void putstr(const char* str) {$/;"	f	class:ArduinoOutStream
putstr	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^void StreamBaseClass::putstr(const char* str) {$/;"	f	class:StreamBaseClass
putstr	./libraries/SdFat/src/iostream/bufstream.h	/^  void putstr(const char *str) {$/;"	f	class:obufstream
putstr	./libraries/SdFat/src/iostream/fstream.h	/^  void putstr(const char *str) {$/;"	f	class:fstream
putstr	./libraries/SdFat/src/iostream/fstream.h	/^  void putstr(const char* str) {$/;"	f	class:ofstream
pwm	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	ESP32PWM pwm;$/;"	m	class:Servo
pwmChannel	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	int pwmChannel = 0;                         \/\/ channel number for this servo$/;"	m	class:ESP32PWM
pwmFactory	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^ESP32PWM* pwmFactory(int pin) {$/;"	f
qtid	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE qtid[3];			\/* Quantization table ID of each component *\/$/;"	m	struct:JDEC
qtid	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE qtid[3];			\/* Quantization table ID of each component *\/$/;"	m	struct:JDEC
qttbl	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	LONG* qttbl[4];			\/* Dequaitizer tables [id] *\/$/;"	m	struct:JDEC
qttbl	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	LONG* qttbl[4];			\/* Dequaitizer tables [id] *\/$/;"	m	struct:JDEC
quality	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t quality;\/\/0 - 63$/;"	m	struct:__anon15
quality	./libraries/esp32-camera/include/sensor.h	/^    uint8_t quality;\/\/0 - 63$/;"	m	struct:__anon16
rOffset	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t rOffset;    \/\/\/< Red index within each 3- or 4-byte pixel$/;"	m	class:Adafruit_NeoPixel
rainbow	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::rainbow(uint16_t first_hue, int8_t reps,$/;"	f	class:Adafruit_NeoPixel
ratio_settings_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} ratio_settings_t;$/;"	t	typeref:struct:__anon12
ratio_settings_t	./libraries/esp32-camera/include/sensor.h	/^} ratio_settings_t;$/;"	t	typeref:struct:__anon13
ratio_table	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const ratio_settings_t ratio_table[] = {$/;"	v
ratio_table	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const DRAM_ATTR ov2640_ratio_settings_t ratio_table[] = {$/;"	v
ratio_table	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const ratio_settings_t ratio_table[] = {$/;"	v
ratio_table	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const ratio_settings_t ratio_table[] = {$/;"	v
raw_gma	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t raw_gma;$/;"	m	struct:__anon15
raw_gma	./libraries/esp32-camera/include/sensor.h	/^    uint8_t raw_gma;$/;"	m	struct:__anon16
rdWrSectors	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool rdWrSectors(uint32_t xfertyp,$/;"	f	file:
rdstate	./libraries/SdFat/src/iostream/ios.h	/^  iostate rdstate() const {$/;"	f	class:ios
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint16_t *value) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *value) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::read(void) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_RegisterBits::read(void) {$/;"	f	class:Adafruit_BusIO_RegisterBits
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice
read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::read(uint8_t *buffer, size_t len, uint8_t sendvalue) {$/;"	f	class:Adafruit_SPIDevice
read	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint16_t *value) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *value) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::read(void) {$/;"	f	class:Adafruit_BusIO_Register
read	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_RegisterBits::read(void) {$/;"	f	class:Adafruit_BusIO_RegisterBits
read	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice
read	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::read(uint8_t *buffer, size_t len, uint8_t sendvalue) {$/;"	f	class:Adafruit_SPIDevice
read	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^int BLESerial::read(void) {$/;"	f	class:BLESerial
read	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^int BLESerial::read(void) {$/;"	f	class:BLESerial
read	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^uint32_t ESP32PWM::read() {$/;"	f	class:ESP32PWM
read	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo
read	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  bool read() const {$/;"	f	class:DigitalPin
read	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^int ExFatFile::read(void* buf, size_t count) {$/;"	f	class:ExFatFile
read	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  int read() {$/;"	f	class:ExFatFile
read	./libraries/SdFat/src/FatLib/FatFile.cpp	/^int FatFile::read(void* buf, size_t nbyte) {$/;"	f	class:FatFile
read	./libraries/SdFat/src/FatLib/FatFile.h	/^  int read() {$/;"	f	class:FatFile
read	./libraries/SdFat/src/FsLib/FsFile.h	/^  int read() {$/;"	f	class:FsBaseFile
read	./libraries/SdFat/src/FsLib/FsFile.h	/^  int read(void* buf, size_t count) {$/;"	f	class:FsBaseFile
read	./libraries/SdFat/src/MinimumSerial.cpp	/^int MinimumSerial::read() {$/;"	f	class:MinimumSerial
read	./libraries/SdFat/src/common/ArduinoFiles.h	/^  int read() {$/;"	f	class:StreamFile
read8	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::read8(uint8_t addr) {$/;"	f	class:Adafruit_PWMServoDriver
read8	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::read8(uint8_t addr) {$/;"	f	class:Adafruit_PWMServoDriver
readAnalogVoltage	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^float Adafruit_TestBed::readAnalogVoltage(uint16_t pin, float multiplier) {$/;"	f	class:Adafruit_TestBed
readBlock	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual bool readBlock(uint32_t block, uint8_t *dst) {$/;"	f	class:FsBlockDeviceInterface
readBlocks	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual bool readBlocks(uint32_t block, uint8_t *dst, size_t nb) {$/;"	f	class:FsBlockDeviceInterface
readBytes	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^uint16_t ESP32BootROMClass::readBytes(void *buf, uint16_t length,$/;"	f	class:ESP32BootROMClass
readCID	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool readCID(cid_t* cid) {$/;"	f	class:SharedSpiCard
readCID	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readCID(cid_t* cid) {$/;"	f	class:SdioCard
readCSD	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool readCSD(csd_t* csd) {$/;"	f	class:SharedSpiCard
readCSD	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readCSD(csd_t* csd) {$/;"	f	class:SdioCard
readCached	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::readCached(void) { return _cached; }$/;"	f	class:Adafruit_BusIO_Register
readCached	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::readCached(void) { return _cached; }$/;"	f	class:Adafruit_BusIO_Register
readData	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readData(uint8_t* dst) {$/;"	f	class:SharedSpiCard
readData	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readData(uint8_t* dst, size_t count) {$/;"	f	class:SharedSpiCard
readData	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readData(uint8_t* dst) {$/;"	f	class:SdioCard
readDir	./libraries/SdFat/src/FatLib/FatFile.cpp	/^int8_t FatFile::readDir(DirFat_t* dir) {$/;"	f	class:FatFile
readDirCache	./libraries/SdFat/src/FatLib/FatFile.cpp	/^DirFat_t* FatFile::readDirCache(bool skipReadOk) {$/;"	f	class:FatFile
readFreq	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::readFreq() {$/;"	f	class:ESP32PWM
readIn	./libraries/SdFat/src/RingBuf.h	/^  size_t readIn(size_t count) {$/;"	f	class:RingBuf
readMicroseconds	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo
readOCR	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readOCR(uint32_t* ocr) {$/;"	f	class:SharedSpiCard
readOCR	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readOCR(uint32_t* ocr) {$/;"	f	class:SdioCard
readPrescale	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::readPrescale(void) {$/;"	f	class:Adafruit_PWMServoDriver
readPrescale	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::readPrescale(void) {$/;"	f	class:Adafruit_PWMServoDriver
readReg16	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool readReg16(uint32_t xfertyp, void* data) {$/;"	f	file:
readRegister	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readRegister(uint8_t cmd, void* buf) {$/;"	f	class:SharedSpiCard
readSCR	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readSCR(scr_t* scr) {$/;"	f	class:SharedSpiCard
readSCR	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readSCR(scr_t* scr) {$/;"	f	class:SdioCard
readSLIP	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::readSLIP(uint32_t timeout_ms) {$/;"	f	class:ESP32BootROMClass
readSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool readSector(uint32_t sector, uint8_t* dst) {$/;"	f	class:ExFatPartition
readSector	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::readSector(uint32_t sector, uint8_t* dst) {$/;"	f	class:DedicatedSpiCard
readSector	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readSector(uint32_t sector, uint8_t* dst) {$/;"	f	class:SharedSpiCard
readSector	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readSector(uint32_t sector, uint8_t* dst) {$/;"	f	class:SdioCard
readSectors	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::readSectors($/;"	f	class:DedicatedSpiCard
readSectors	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readSectors(uint32_t sector, uint8_t* dst, size_t ns) {$/;"	f	class:SharedSpiCard
readSectors	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readSectors(uint32_t sector, uint8_t* dst, size_t n) {$/;"	f	class:SdioCard
readSkip	./libraries/SdFat/src/iostream/istream.cpp	/^int16_t istream::readSkip() {$/;"	f	class:istream
readStart	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readStart(uint32_t sector) {$/;"	f	class:SharedSpiCard
readStart	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readStart(uint32_t sector) {$/;"	f	class:SdioCard
readStatus	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readStatus(SdStatus* status) {$/;"	f	class:SharedSpiCard
readStop	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::readStop() {$/;"	f	class:SharedSpiCard
readStop	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::readStop() {$/;"	f	class:SdioCard
readTable16	./libraries/SdFat/src/common/upcase.cpp	31;"	d	file:
readTable16	./libraries/SdFat/src/common/upcase.cpp	35;"	d	file:
readTable8	./libraries/SdFat/src/common/upcase.cpp	30;"	d	file:
readTable8	./libraries/SdFat/src/common/upcase.cpp	34;"	d	file:
readTimerWidth	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::readTimerWidth()$/;"	f	class:Servo
read_MAC	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::read_MAC(uint8_t mac[6]) {$/;"	f	class:ESP32BootROMClass
read_chip_detect	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^uint32_t ESP32BootROMClass::read_chip_detect(void) {$/;"	f	class:ESP32BootROMClass
read_reg	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::read_reg(uint32_t addr, uint32_t *val,$/;"	f	class:ESP32BootROMClass
read_reg	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int read_reg(sensor_t *sensor, ov2640_bank_t bank, uint8_t reg)$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg){$/;"	f	file:
read_reg	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int read_reg(uint8_t slv_addr, const uint16_t reg){$/;"	f	file:
read_reg16	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int read_reg16(uint8_t slv_addr, const uint16_t reg)$/;"	f	file:
read_reg16	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int read_reg16(uint8_t slv_addr, const uint16_t reg){$/;"	f	file:
read_reg16	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int read_reg16(uint8_t slv_addr, const uint16_t reg){$/;"	f	file:
read_regs	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int read_regs(uint8_t slv_addr, const uint16_t(*regs)[2])$/;"	f	file:
reader	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        jpg_reader_cb reader;$/;"	m	struct:__anon2	file:
readline	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  void readline() {$/;"	f	class:ArduinoInStream
receive	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  uint8_t receive() {$/;"	f	class:SoftSPI
receive	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  uint8_t receive() {$/;"	f	class:SdSpiDriverBareUno
receive	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  uint8_t receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiDriverBareUno
receive	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  uint8_t receive() {return m_spi.receive();}$/;"	f	class:SoftSpiDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  uint8_t receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiSoftDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^uint8_t SdSpiArduinoDriver::receive() {$/;"	f	class:SdSpiArduinoDriver
receive	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^uint8_t SdSpiArduinoDriver::receive(uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
receiveBit	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  void receiveBit(uint8_t bit, uint8_t* data) {$/;"	f	class:SoftSPI
recordEightBits	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint8_t recordEightBits;         \/\/ Size of ADC values, nonzero for 8-bits.$/;"	m	struct:metadata_t
recordEightBits	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  recordEightBits;  \/\/ Size of ADC values, nonzero for 8-bits.$/;"	m	struct:metadata_t
recv_size	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint32_t recv_size;$/;"	m	struct:__anon26
reg_bank	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static volatile ov2640_bank_t reg_bank = BANK_MAX;$/;"	v	file:
reg_num	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^	uint8_t reg_num;$/;"	m	struct:regval_list	file:
regval_list	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^struct regval_list {$/;"	s	file:
relativeSectors	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t relativeSectors[4];$/;"	m	struct:mbrPartition
release	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^void Servo::release()$/;"	f	class:Servo
remove	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::remove(const char* path) {$/;"	f	class:ExFatFile
remove	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::remove() {$/;"	f	class:ExFatFile
remove	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool remove(const String& path) {$/;"	f	class:ExFatVolume
remove	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool remove(const char* path) {$/;"	f	class:ExFatVolume
remove	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::remove(const char* path) {$/;"	f	class:FatFile
remove	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^bool FatFile::remove() {$/;"	f	class:FatFile
remove	./libraries/SdFat/src/FatLib/FatFileSFN.cpp	/^bool FatFile::remove() {$/;"	f	class:FatFile
remove	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool remove(const String& path) {$/;"	f	class:FatVolume
remove	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool remove(const char* path) {$/;"	f	class:FatVolume
remove	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::remove() {$/;"	f	class:FsBaseFile
remove	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool remove(const char* path) {$/;"	f	class:FsBaseFile
remove	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool remove(const String &path) {$/;"	f	class:FsVolume
remove	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool remove(const char *path) {$/;"	f	class:FsVolume
remove	./libraries/SdFat/src/iostream/StdioStream.h	70;"	d
rename	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::rename(ExFatFile* dirFile, const char* newPath) {$/;"	f	class:ExFatFile
rename	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::rename(const char* newPath) {$/;"	f	class:ExFatFile
rename	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool rename(const String& oldPath, const String& newPath) {$/;"	f	class:ExFatVolume
rename	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool rename(const char* oldPath, const char* newPath) {$/;"	f	class:ExFatVolume
rename	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::rename(FatFile* dirFile, const char* newPath) {$/;"	f	class:FatFile
rename	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::rename(const char* newPath) {$/;"	f	class:FatFile
rename	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool rename(const String& oldPath, const String& newPath) {$/;"	f	class:FatVolume
rename	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool rename(const char *oldPath, const char *newPath) {$/;"	f	class:FatVolume
rename	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool rename(FsBaseFile* dir, const char* newPath) {$/;"	f	class:FsBaseFile
rename	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool rename(const char* newPath) {$/;"	f	class:FsBaseFile
rename	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool rename(const String& oldPath, const String& newPath) {$/;"	f	class:FsVolume
rename	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool rename(const char *oldPath, const char *newPath) {$/;"	f	class:FsVolume
rename	./libraries/SdFat/src/iostream/StdioStream.h	71;"	d
reserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved[18];$/;"	m	struct:__anon6
reserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved[8];$/;"	m	struct:__anon8
reserved	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t reserved[7];$/;"	m	struct:biosParameterBlockExFat
reserved	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t reserved;$/;"	m	struct:__anon4	file:
reserved	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^                        uint8_t reserved:1;$/;"	m	struct:__anon13::__anon16::__anon17
reserved1	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t reserved1;$/;"	m	struct:SdStatus
reserved1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved1;$/;"	m	struct:__anon10
reserved1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved1[2];$/;"	m	struct:__anon9
reserved1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved1[3];$/;"	m	struct:__anon7
reserved1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t reserved1[480];$/;"	m	struct:FsInfoSector
reserved2	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t reserved2[3];$/;"	m	struct:SdStatus
reserved2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved2[12];$/;"	m	struct:__anon7
reserved2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved2[2];$/;"	m	struct:__anon10
reserved2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved2[7];$/;"	m	struct:__anon9
reserved2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t reserved2[12];$/;"	m	struct:FsInfoSector
reserved3	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reserved3[4];$/;"	m	struct:__anon10
reservedManufacturer	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t reservedManufacturer[40];$/;"	m	struct:SdStatus
reservedSectorCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reservedSectorCount[2];$/;"	m	struct:biosParameterBlockFat16
reservedSectorCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  reservedSectorCount[2];$/;"	m	struct:biosParameterBlockFat32
reset	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::reset() {$/;"	f	class:Adafruit_PWMServoDriver
reset	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::reset() {$/;"	f	class:Adafruit_PWMServoDriver
reset	./libraries/SdFat/src/common/FsName.h	/^  void reset() {$/;"	f	class:FsName
reset	./libraries/SdFat/src/common/FsName.h	/^  void reset() {next = begin;}$/;"	f	class:FsName
reset	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*reset)               (sensor_t *sensor); \/\/ Reset the configuration of the sensor, and return ESP_OK if reset is successful$/;"	m	struct:_sensor
reset	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int reset(sensor_t *sensor)$/;"	f	file:
reset	./libraries/esp32-camera/include/sensor.h	/^    int  (*reset)               (sensor_t *sensor); \/\/ Reset the configuration of the sensor, and return ESP_OK if reset is successful$/;"	m	struct:_sensor
resetBootloader	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^void ESP32BootROMClass::resetBootloader(void) {$/;"	f	class:ESP32BootROMClass
resolution	./libraries/esp32-camera-2.0.8/driver/sensor.c	/^const resolution_info_t resolution[FRAMESIZE_INVALID] = {$/;"	v
resolution	./libraries/esp32-camera/sensor.c	/^const resolution_info_t resolution[FRAMESIZE_INVALID] = {$/;"	v
resolutionBits	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	uint8_t resolutionBits;$/;"	m	class:ESP32PWM
resolution_info_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} resolution_info_t;$/;"	t	typeref:struct:__anon13
resolution_info_t	./libraries/esp32-camera/include/sensor.h	/^} resolution_info_t;$/;"	t	typeref:struct:__anon14
response	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^int ESP32BootROMClass::response(uint8_t opcode, uint32_t timeout_ms,$/;"	f	class:ESP32BootROMClass
restart	./libraries/esp32-camera-2.0.8/target/tjpgd.c	/^JRESULT restart ($/;"	f	file:
rewind	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  void rewind() {$/;"	f	class:ExFatFile
rewind	./libraries/SdFat/src/FatLib/FatFile.h	/^  void rewind() {$/;"	f	class:FatFile
rewind	./libraries/SdFat/src/FsLib/FsFile.h	/^  void rewind() {$/;"	f	class:FsBaseFile
rewind	./libraries/SdFat/src/iostream/StdioStream.cpp	/^bool StdioStream::rewind() {$/;"	f	class:StdioStream
rewind	./libraries/SdFat/src/iostream/StdioStream.h	72;"	d
rewindDirectory	./libraries/SdFat/src/FsLib/FsFile.h	/^  void rewindDirectory() {$/;"	f	class:FsBaseFile
rewindDirectory	./libraries/SdFat/src/common/ArduinoFiles.h	/^  void rewindDirectory() {$/;"	f	class:StreamFile
rgb_jpg_decoder	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^} rgb_jpg_decoder;$/;"	t	typeref:struct:__anon5	file:
right	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags right      = 0x0002;$/;"	m	class:ios_base
right	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& right(ios_base& str) {$/;"	f
right	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon30
right	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon28
rmRfStar	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::rmRfStar() {$/;"	f	class:FatFile
rmdir	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::rmdir() {$/;"	f	class:ExFatFile
rmdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool rmdir(const String& path) {$/;"	f	class:ExFatVolume
rmdir	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool rmdir(const char* path) {$/;"	f	class:ExFatVolume
rmdir	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::rmdir() {$/;"	f	class:FatFile
rmdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool rmdir(const String& path) {$/;"	f	class:FatVolume
rmdir	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool rmdir(const char* path) {$/;"	f	class:FatVolume
rmdir	./libraries/SdFat/src/FsLib/FsFile.cpp	/^bool FsBaseFile::rmdir() {$/;"	f	class:FsBaseFile
rmdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool rmdir(const String &path) {$/;"	f	class:FsVolume
rmdir	./libraries/SdFat/src/FsLib/FsVolume.h	/^  bool rmdir(const char *path) {$/;"	f	class:FsVolume
rmt_reserved_channels	./libraries/Adafruit_NeoPixel/esp.c	/^bool rmt_reserved_channels[ADAFRUIT_RMT_CHANNEL_MAX];$/;"	v
rnd	./libraries/SdFat/src/common/FmtNumber.cpp	/^static const double rnd[] =$/;"	v	file:
rootDirEntryCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t rootDirEntryCount() const {$/;"	f	class:FatPartition
rootDirEntryCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  rootDirEntryCount[2];$/;"	m	struct:biosParameterBlockFat16
rootDirEntryCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  rootDirEntryCount[2];$/;"	m	struct:biosParameterBlockFat32
rootDirStart	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t rootDirStart() const {$/;"	f	class:FatPartition
rootDirectoryCluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t rootDirectoryCluster() const {return m_rootDirectoryCluster;}$/;"	f	class:ExFatPartition
rootDirectoryCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t rootDirectoryCluster[4];$/;"	m	struct:biosParameterBlockExFat
rootLength	./libraries/SdFat/src/ExFatLib/ExFatPartition.cpp	/^uint32_t ExFatPartition::rootLength() {$/;"	f	class:ExFatPartition
rp2040Init	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::rp2040Init(uint8_t pin, bool is800KHz)$/;"	f	class:Adafruit_NeoPixel
rp2040Show	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void  Adafruit_NeoPixel::rp2040Show(uint8_t pin, uint8_t *pixels, uint32_t numBytes, bool is800KHz)$/;"	f	class:Adafruit_NeoPixel
rp2040_programUF2	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^size_t Adafruit_TestBed_Brains::rp2040_programUF2(const char *fpath) {$/;"	f	class:Adafruit_TestBed_Brains
rp2040_targetResetBootRom	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::rp2040_targetResetBootRom(int bootsel_pin,$/;"	f	class:Adafruit_TestBed_Brains
s_ac_chroma_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_ac_chroma_bits[17] = { 0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77 };$/;"	m	namespace:jpge	file:
s_ac_chroma_val	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_ac_chroma_val[AC_CHROMA_CODES] = {$/;"	m	namespace:jpge	file:
s_ac_lum_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_ac_lum_bits[17] = { 0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d };$/;"	m	namespace:jpge	file:
s_ac_lum_val	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_ac_lum_val[AC_LUM_CODES]  = {$/;"	m	namespace:jpge	file:
s_dc_chroma_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_dc_chroma_bits[17] = { 0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0 };$/;"	m	namespace:jpge	file:
s_dc_chroma_val	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_dc_chroma_val[DC_CHROMA_CODES]  = { 0,1,2,3,4,5,6,7,8,9,10,11 };$/;"	m	namespace:jpge	file:
s_dc_lum_bits	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_dc_lum_bits[17] = { 0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0 };$/;"	m	namespace:jpge	file:
s_dc_lum_val	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_dc_lum_val[DC_LUM_CODES] = { 0,1,2,3,4,5,6,7,8,9,10,11 };$/;"	m	namespace:jpge	file:
s_state	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^static camera_state_t *s_state = NULL;$/;"	v	file:
s_state	./libraries/esp32-camera/esp_camera.c	/^static camera_state_t *s_state = NULL;$/;"	v	file:
s_std_croma_quant	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const int16 s_std_croma_quant[64] = { 17,18,18,24,21,24,47,26,26,47,99,66,56,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99 };$/;"	m	namespace:jpge	file:
s_std_lum_quant	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const int16 s_std_lum_quant[64] = { 16,11,12,14,12,10,16,14,13,14,18,17,16,19,24,40,26,24,22,22,24,49,35,37,29,40,58,51,61,60,57,51,56,55,64,72,92,78,64,68,87,69,55,56,80,109,81,87,95,98,103,104,103,62,77,113,121,112,100,120,92,101,103,99 };$/;"	m	namespace:jpge	file:
s_zag	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    static const uint8 s_zag[64] = { 0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63 };$/;"	m	namespace:jpge	file:
sample1	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^        uint32_t sample1:8;$/;"	m	struct:__anon8::__anon9	file:
sample2	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^        uint32_t sample2:8;$/;"	m	struct:__anon8::__anon9	file:
sampleInterval	./libraries/SdFat/examples/AvrAdcLogger/AvrAdcLogger.h	/^  uint32_t sampleInterval;         \/\/ Sample interval in CPU cycles.$/;"	m	struct:metadata_t
sampleInterval	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^  unsigned long  sampleInterval;   \/\/ Sample interval in CPU cycles.$/;"	m	struct:metadata_t
sample_array_t	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            typedef int32 sample_array_t;$/;"	t	class:jpge::jpeg_encoder
sampling_mode	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^static i2s_sampling_mode_t sampling_mode = SM_0A00_0B00;$/;"	v	file:
saturation	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int8_t saturation;\/\/-2 - 2$/;"	m	struct:__anon15
saturation	./libraries/esp32-camera/include/sensor.h	/^    int8_t saturation;\/\/-2 - 2$/;"	m	struct:__anon16
saturation_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t saturation_regs[NUM_SATURATION_LEVELS + 1][5] = {$/;"	v
sc030iot_default_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/sc030iot_settings.h	/^static const uint8_t sc030iot_default_init_regs[][2] = {$/;"	v
sc030iot_detect	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^int sc030iot_detect(int slv_addr, sensor_id_t *id)$/;"	f
sc030iot_init	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^int sc030iot_init(sensor_t *sensor)$/;"	f
sc031gs_200x200_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^static const struct sc031gs_regval sc031gs_200x200_init_regs[] = {$/;"	v	typeref:struct:sc031gs_regval
sc031gs_640x480_50fps_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^static const struct sc031gs_regval sc031gs_640x480_50fps_init_regs[] = {$/;"	v	typeref:struct:sc031gs_regval
sc031gs_detect	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^int sc031gs_detect(int slv_addr, sensor_id_t *id)$/;"	f
sc031gs_init	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^int sc031gs_init(sensor_t *sensor)$/;"	f
sc031gs_regval	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^struct sc031gs_regval {$/;"	s
sc031gs_reset_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^static const struct sc031gs_regval sc031gs_reset_regs[] = {$/;"	v	typeref:struct:sc031gs_regval
sc101iot_default_init_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/sc101iot_settings.h	/^static const uint8_t sc101iot_default_init_regs[][2] = {$/;"	v
sc101iot_detect	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^int sc101iot_detect(int slv_addr, sensor_id_t *id)$/;"	f
sc101iot_init	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^int sc101iot_init(sensor_t *sensor)$/;"	f
scale	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        jpg_scale_t scale;$/;"	m	struct:__anon2	file:
scale	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    bool scale;$/;"	m	struct:__anon15
scale	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	BYTE scale;				\/* Output scaling ratio *\/$/;"	m	struct:JDEC
scale	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	BYTE scale;				\/* Output scaling ratio *\/$/;"	m	struct:JDEC
scale	./libraries/esp32-camera/include/sensor.h	/^    bool scale;$/;"	m	struct:__anon16
scale10	./libraries/SdFat/src/common/FmtNumber.cpp	/^float scale10(float v, int8_t n) {$/;"	f
scanFloat	./libraries/SdFat/src/common/FmtNumber.cpp	/^float scanFloat(const char* str, const char** ptr) {$/;"	f
scanI2CBus	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::scanI2CBus(byte addr, uint8_t post_delay) {$/;"	f	class:Adafruit_TestBed
scanf	./libraries/SdFat/src/iostream/StdioStream.h	73;"	d
sccb_addr	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const camera_sccb_addr_t sccb_addr;$/;"	m	struct:__anon9
sccb_addr	./libraries/esp32-camera/include/sensor.h	/^    const camera_sccb_addr_t sccb_addr;$/;"	m	struct:__anon10
sccb_i2c_port	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int sccb_i2c_port;              \/*!< If pin_sccb_sda is -1, use the already configured I2C bus by number *\/$/;"	m	struct:__anon19
sccb_i2c_port	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^static int sccb_i2c_port;$/;"	v	file:
sccb_i2c_port	./libraries/esp32-camera/include/esp_camera.h	/^    int sccb_i2c_port;              \/*!< If pin_sccb_sda is -1, use the already configured I2C bus by number *\/$/;"	m	struct:__anon20
sccb_i2c_port	./libraries/esp32-camera/sccb.c	/^static int sccb_i2c_port;$/;"	v	file:
sccb_owns_i2c_port	./libraries/esp32-camera-2.0.8/driver/sccb.c	/^static bool sccb_owns_i2c_port;$/;"	v	file:
sccb_owns_i2c_port	./libraries/esp32-camera/sccb.c	/^static bool sccb_owns_i2c_port;$/;"	v	file:
scr	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t scr[8];$/;"	m	struct:SCR
scr_t	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^} scr_t;$/;"	t	typeref:struct:SCR
sdBusWidths	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sdBusWidths() {return scr[1] & 0XF;}$/;"	f	struct:SCR
sdCardType	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sdCardType[2];$/;"	m	struct:SdStatus
sdCsInit	./libraries/SdFat/src/SpiDriver/SdSpiChipSelect.cpp	/^void sdCsInit(SdCsPin_t pin) {$/;"	f
sdCsWrite	./libraries/SdFat/src/SpiDriver/SdSpiChipSelect.cpp	/^void sdCsWrite(SdCsPin_t pin, bool level) {$/;"	f
sdError	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	275;"	d	file:
sdErrorCode	./libraries/SdFat/src/SdFat.h	/^  uint8_t sdErrorCode() {$/;"	f	class:SdBase
sdErrorData	./libraries/SdFat/src/SdFat.h	/^  uint8_t sdErrorData() {return m_card ? m_card->errorData() : 0;}$/;"	f	class:SdBase
sdIrs	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void sdIrs() {$/;"	f	file:
sdSecurity	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sdSecurity() {return (scr[1] >> 4) & 0X7;}$/;"	f	struct:SCR
sdSpec	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sdSpec() {return scr[0] & 0XF;}$/;"	f	struct:SCR
sdSpec3	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool sdSpec3() {return scr[2] & 0X80;}$/;"	f	struct:SCR
sdSpec4	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool sdSpec4() {return scr[2] & 0X4;}$/;"	f	struct:SCR
sdSpecVer	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  int16_t sdSpecVer() {$/;"	f	struct:SCR
sdSpecX	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sdSpecX() {return (scr[2] & 0X3) << 2 | scr[3] >> 6;}$/;"	f	struct:SCR
sdState	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t sdState() {return m_state;}$/;"	f	class:SharedSpiCard
sdios_h	./libraries/SdFat/src/sdios.h	26;"	d
searchPair16	./libraries/SdFat/src/common/upcase.cpp	/^static size_t searchPair16(const pair16_t* table, size_t size, uint16_t key) {$/;"	f	file:
sector	./libraries/SdFat/src/common/FsCache.h	/^  uint32_t sector() {$/;"	f	class:FsCache
sectorCount	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^uint32_t SharedSpiCard::sectorCount() {$/;"	f	class:SharedSpiCard
sectorCount	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint32_t SdioCard::sectorCount() {$/;"	f	class:SdioCard
sectorMask	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint16_t sectorMask() const {return m_sectorMask;}$/;"	f	class:ExFatPartition
sectorMask	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint16_t sectorMask() const {$/;"	f	class:FatPartition
sectorOfCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t sectorOfCluster(uint32_t position) const {$/;"	f	class:FatPartition
sectorsPerCluster	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint32_t sectorsPerCluster() const {return 1UL << m_sectorsPerClusterShift;}$/;"	f	class:ExFatPartition
sectorsPerCluster	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t sectorsPerCluster() const {$/;"	f	class:FatPartition
sectorsPerCluster	./libraries/SdFat/src/FsLib/FsVolume.h	/^  uint32_t sectorsPerCluster() const {$/;"	f	class:FsVolume
sectorsPerCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParameterBlockFat16
sectorsPerCluster	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerCluster;$/;"	m	struct:biosParameterBlockFat32
sectorsPerClusterShift	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  uint8_t  sectorsPerClusterShift() const {return m_sectorsPerClusterShift;}$/;"	f	class:ExFatPartition
sectorsPerClusterShift	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint8_t sectorsPerClusterShift() const {$/;"	f	class:FatPartition
sectorsPerClusterShift	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t sectorsPerClusterShift;$/;"	m	struct:biosParameterBlockExFat
sectorsPerFat	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t sectorsPerFat()  const {$/;"	f	class:FatPartition
sectorsPerFat16	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerFat16[2];$/;"	m	struct:biosParameterBlockFat16
sectorsPerFat16	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerFat16[2];$/;"	m	struct:biosParameterBlockFat32
sectorsPerFat32	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerFat32[4];$/;"	m	struct:biosParameterBlockFat32
sectorsPerTrtack	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerTrtack[2];$/;"	m	struct:biosParameterBlockFat16
sectorsPerTrtack	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  sectorsPerTrtack[2];$/;"	m	struct:biosParameterBlockFat32
seek	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool seek(uint64_t pos) {return seekSet(pos);}$/;"	f	class:FsBaseFile
seek	./libraries/SdFat/src/common/ArduinoFiles.h	/^  bool seek(PosType pos) {$/;"	f	class:StreamFile
seekCur	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool seekCur(int64_t offset) {$/;"	f	class:ExFatFile
seekCur	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool seekCur(int32_t offset) {$/;"	f	class:FatFile
seekCur	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool seekCur(int64_t offset) {$/;"	f	class:FsBaseFile
seekEnd	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool seekEnd(int64_t offset = 0) {$/;"	f	class:ExFatFile
seekEnd	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool seekEnd(int32_t offset = 0) {$/;"	f	class:FatFile
seekEnd	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool seekEnd(int64_t offset = 0) {$/;"	f	class:FsBaseFile
seekSet	./libraries/SdFat/src/ExFatLib/ExFatFile.cpp	/^bool ExFatFile::seekSet(uint64_t pos) {$/;"	f	class:ExFatFile
seekSet	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::seekSet(uint32_t pos) {$/;"	f	class:FatFile
seekSet	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool seekSet(uint64_t pos) {$/;"	f	class:FsBaseFile
seekdir	./libraries/SdFat/src/iostream/ios.h	/^  enum seekdir {$/;"	g	class:ios_base
seekg	./libraries/SdFat/src/iostream/istream.h	/^  istream& seekg(off_type off, seekdir way) {$/;"	f	class:istream
seekg	./libraries/SdFat/src/iostream/istream.h	/^  istream& seekg(pos_type pos) {$/;"	f	class:istream
seekoff	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:ArduinoInStream
seekoff	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:ArduinoOutStream
seekoff	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^bool StreamBaseClass::seekoff(off_type off, seekdir way) {$/;"	f	class:StreamBaseClass
seekoff	./libraries/SdFat/src/iostream/bufstream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:ibufstream
seekoff	./libraries/SdFat/src/iostream/bufstream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:obufstream
seekoff	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:fstream
seekoff	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:ifstream
seekoff	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekoff(off_type off, seekdir way) {$/;"	f	class:ofstream
seekp	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& seekp(off_type off, seekdir way) {$/;"	f	class:ostream
seekp	./libraries/SdFat/src/iostream/ostream.h	/^  ostream& seekp(pos_type pos) {$/;"	f	class:ostream
seekpos	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:ArduinoInStream
seekpos	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:ArduinoOutStream
seekpos	./libraries/SdFat/src/iostream/bufstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:ibufstream
seekpos	./libraries/SdFat/src/iostream/bufstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:obufstream
seekpos	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:StreamBaseClass
seekpos	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:fstream
seekpos	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:ifstream
seekpos	./libraries/SdFat/src/iostream/fstream.h	/^  bool seekpos(pos_type pos) {$/;"	f	class:ofstream
select	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void select() {$/;"	f	class:SdSpiDriverBareUno
selftest_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino = {$/;"	v
selftest_ino	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino = {$/;"	v
selftest_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino_bootloader = {$/;"	v
selftest_ino_bootloader	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino_bootloader = {$/;"	v
selftest_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino_partitions = {$/;"	v
selftest_ino_partitions	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t selftest_ino_partitions = {$/;"	v
send	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  void send(uint8_t data) {$/;"	f	class:SoftSPI
send	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiArtemis.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiAvr.h	/^inline void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void send(const uint8_t* buf, size_t count) {$/;"	f	class:SdSpiDriverBareUno
send	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void send(uint8_t data) {$/;"	f	class:SdSpiDriverBareUno
send	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiESP.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::send(const uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiLibDriver.h	/^inline void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiParticle.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSTM32.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf, size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSTM32Core.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void send(const uint8_t* buf, size_t count) {$/;"	f	class:SdSpiSoftDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void send(uint8_t data) {m_spi.send(data);}$/;"	f	class:SoftSpiDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::send(const uint8_t* buf , size_t count) {$/;"	f	class:SdSpiArduinoDriver
send	./libraries/SdFat/src/SpiDriver/SdSpiTeensy3.cpp	/^void SdSpiArduinoDriver::send(uint8_t data) {$/;"	f	class:SdSpiArduinoDriver
sendBit	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  void sendBit(uint8_t bit, uint8_t data) {$/;"	f	class:SoftSPI
sendCommandGetResponse	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::sendCommandGetResponse(uint8_t opcode, const void *data,$/;"	f	class:ESP32BootROMClass
sensor	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^    sensor_t sensor;$/;"	m	struct:__anon6	file:
sensor	./libraries/esp32-camera/esp_camera.c	/^    sensor_t sensor;$/;"	m	struct:__anon11	file:
sensor_ae_level	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_ae_level[][2] = {$/;"	v
sensor_default_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_default_regs[][2] = {$/;"	v
sensor_default_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_default_regs[][2] = {$/;"	v
sensor_default_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_default_regs[][2] = {$/;"	v
sensor_fmt_grayscale	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_grayscale[][2] = {$/;"	v
sensor_fmt_grayscale	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_grayscale[][2] = {$/;"	v
sensor_fmt_grayscale	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_grayscale[][2] = {$/;"	v
sensor_fmt_jpeg	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_jpeg[][2] = {$/;"	v
sensor_fmt_jpeg	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_jpeg[][2] = {$/;"	v
sensor_fmt_jpeg	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_jpeg[][2] = {$/;"	v
sensor_fmt_raw	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_raw[][2] = {$/;"	v
sensor_fmt_raw	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_raw[][2] = {$/;"	v
sensor_fmt_raw	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_raw[][2] = {$/;"	v
sensor_fmt_rgb565	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_rgb565[][2] = {$/;"	v
sensor_fmt_rgb565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_rgb565[][2] = {$/;"	v
sensor_fmt_rgb565	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_rgb565[][2] = {$/;"	v
sensor_fmt_yuv422	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_yuv422[][2] = {$/;"	v
sensor_fmt_yuv422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_yuv422[][2] = {$/;"	v
sensor_fmt_yuv422	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_fmt_yuv422[][2] = {$/;"	v
sensor_framesize_HD	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_HD[][2] = {$/;"	v
sensor_framesize_QVGA	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_QVGA[][2] = {$/;"	v
sensor_framesize_QVGA_crop	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_QVGA_crop[][2] = {$/;"	v
sensor_framesize_QVGA_xskip	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_QVGA_xskip[][2] = {$/;"	v
sensor_framesize_VGA	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_VGA[][2] = {$/;"	v
sensor_framesize_VGA_crop	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_VGA_crop[][2] = {$/;"	v
sensor_framesize_VGA_xskip	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_VGA_xskip[][2] = {$/;"	v
sensor_framesize_VGA_xyskip	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint16_t sensor_framesize_VGA_xyskip[][2] = {$/;"	v
sensor_func_t	./libraries/esp32-camera-2.0.8/driver/esp_camera.c	/^} sensor_func_t;$/;"	t	typeref:struct:__anon7	file:
sensor_func_t	./libraries/esp32-camera/esp_camera.c	/^} sensor_func_t;$/;"	t	typeref:struct:__anon12	file:
sensor_id_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} sensor_id_t;$/;"	t	typeref:struct:__anon14
sensor_id_t	./libraries/esp32-camera/include/sensor.h	/^} sensor_id_t;$/;"	t	typeref:struct:__anon15
sensor_regs_awb0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_regs_awb0[][2] = {$/;"	v
sensor_regs_gamma0	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_regs_gamma0[][2] = {$/;"	v
sensor_regs_gamma1	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint16_t sensor_regs_gamma1[][2] = {$/;"	v
sensor_saturation_levels	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint8_t sensor_saturation_levels[9][1] = {$/;"	v
sensor_saturation_levels	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint8_t sensor_saturation_levels[9][11] = {$/;"	v
sensor_saturation_levels	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint8_t sensor_saturation_levels[9][11] = {$/;"	v
sensor_special_effects	./libraries/esp32-camera-2.0.8/sensors/private_include/nt99141_settings.h	/^static const DRAM_ATTR uint8_t sensor_special_effects[7][4] = {$/;"	v
sensor_special_effects	./libraries/esp32-camera-2.0.8/sensors/private_include/ov3660_settings.h	/^static const DRAM_ATTR uint8_t sensor_special_effects[7][4] = {$/;"	v
sensor_special_effects	./libraries/esp32-camera-2.0.8/sensors/private_include/ov5640_settings.h	/^static const DRAM_ATTR uint8_t sensor_special_effects[7][4] = {$/;"	v
sensor_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^typedef struct _sensor sensor_t;$/;"	t	typeref:struct:_sensor
sensor_t	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^} sensor_t;$/;"	t	typeref:struct:_sensor
sensor_t	./libraries/esp32-camera/include/sensor.h	/^typedef struct _sensor sensor_t;$/;"	t	typeref:struct:_sensor
sensor_t	./libraries/esp32-camera/include/sensor.h	/^} sensor_t;$/;"	t	typeref:struct:_sensor
seqPos	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t seqPos;$/;"	m	class:FatLfn_t
set	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  void set(uint16_t ms) {$/;"	f	class:Timeout
setAddress	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddress(uint16_t address) {$/;"	f	class:Adafruit_BusIO_Register
setAddress	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddress(uint16_t address) {$/;"	f	class:Adafruit_BusIO_Register
setAddressWidth	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddressWidth(uint16_t address_width) {$/;"	f	class:Adafruit_BusIO_Register
setAddressWidth	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddressWidth(uint16_t address_width) {$/;"	f	class:Adafruit_BusIO_Register
setBrightness	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::setBrightness(uint8_t b) {$/;"	f	class:Adafruit_NeoPixel
setCallback	./libraries/SdFat/src/common/FsDateTime.cpp	/^  void setCallback($/;"	f	namespace:FsDateTime
setCallback	./libraries/SdFat/src/common/FsDateTime.cpp	/^  void setCallback(void (*dateTime)(uint16_t* date, uint16_t* time)) {$/;"	f	namespace:FsDateTime
setChecksum	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  setChecksum[2];$/;"	m	struct:__anon9
setChipSelect	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::setChipSelect(int value) {$/;"	f	class:Adafruit_SPIDevice
setChipSelect	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::setChipSelect(int value) {$/;"	f	class:Adafruit_SPIDevice
setColor	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::setColor(uint32_t color) {$/;"	f	class:Adafruit_TestBed
setColor	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void __no_inline_not_in_flash_func(Adafruit_TestBed_Brains::setColor)($/;"	f
setCount	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint8_t setCount() const {return m_setCount;}$/;"	f	class:ExFatFile
setCount	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  setCount;$/;"	m	struct:__anon9
setDedicatedSpi	./libraries/SdFat/src/SdCard/SdCardInterface.h	/^  virtual bool setDedicatedSpi(bool value) {$/;"	f	class:SdCardInterface
setDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::setDedicatedSpi(bool value) {$/;"	f	class:DedicatedSpiCard
setDedicatedSpi	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  bool setDedicatedSpi(bool value) {$/;"	f	class:SharedSpiCard
setDedicatedSpi	./libraries/SdFat/src/SdFat.h	/^  bool setDedicatedSpi(bool value) {$/;"	f	class:SdBase
setExtClk	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setExtClk(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver
setExtClk	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setExtClk(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver
setFreeClusterCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  void setFreeClusterCount(int32_t value) {$/;"	f	class:FatPartition
setLED	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::setLED(uint8_t state) { digitalWrite(ledPin, state); }$/;"	f	class:Adafruit_TestBed
setLe16	./libraries/SdFat/src/common/FsStructs.h	/^inline void setLe16(uint8_t* dst, uint16_t src) {$/;"	f
setLe32	./libraries/SdFat/src/common/FsStructs.h	/^inline void setLe32(uint8_t* dst, uint32_t src) {$/;"	f
setLe64	./libraries/SdFat/src/common/FsStructs.h	/^inline void setLe64(uint8_t* dst, uint64_t src) {$/;"	f
setMirrorOffset	./libraries/SdFat/src/common/FsCache.h	/^  void setMirrorOffset(uint32_t offset) {$/;"	f	class:FsCache
setOscillatorFrequency	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOscillatorFrequency(uint32_t freq) {$/;"	f	class:Adafruit_PWMServoDriver
setOscillatorFrequency	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOscillatorFrequency(uint32_t freq) {$/;"	f	class:Adafruit_PWMServoDriver
setOutputMode	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOutputMode(bool totempole) {$/;"	f	class:Adafruit_PWMServoDriver
setOutputMode	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOutputMode(bool totempole) {$/;"	f	class:Adafruit_PWMServoDriver
setPWM	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::setPWM(uint8_t num, uint16_t on,$/;"	f	class:Adafruit_PWMServoDriver
setPWM	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::setPWM(uint8_t num, uint16_t on,$/;"	f	class:Adafruit_PWMServoDriver
setPWMFreq	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPWMFreq(float freq) {$/;"	f	class:Adafruit_PWMServoDriver
setPWMFreq	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPWMFreq(float freq) {$/;"	f	class:Adafruit_PWMServoDriver
setPeriodHertz	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	void setPeriodHertz(int hertz){$/;"	f	class:Servo
setPin	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::setPin(int16_t p) {$/;"	f	class:Adafruit_NeoPixel
setPin	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPin(uint8_t num, uint16_t val, bool invert) {$/;"	f	class:Adafruit_PWMServoDriver
setPin	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPin(uint8_t num, uint16_t val, bool invert) {$/;"	f	class:Adafruit_PWMServoDriver
setPixelColor	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::setPixelColor(uint16_t n, uint32_t c) {$/;"	f	class:Adafruit_NeoPixel
setPixelColor	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::setPixelColor(uint16_t n, uint8_t r, uint8_t g,$/;"	f	class:Adafruit_NeoPixel
setSckSpeed	./libraries/SdFat/src/SpiDriver/SdSpiArduinoDriver.h	/^  void setSckSpeed(uint32_t maxSck) {$/;"	f	class:SdSpiArduinoDriver
setSckSpeed	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void setSckSpeed(uint32_t maxSck) {$/;"	f	class:SdSpiDriverBareUno
setSckSpeed	./libraries/SdFat/src/SpiDriver/SdSpiBaseClass.h	/^  virtual void setSckSpeed(uint32_t maxSck) {(void)maxSck;}$/;"	f	class:SdSpiBaseClass
setSckSpeed	./libraries/SdFat/src/SpiDriver/SdSpiSoftDriver.h	/^  void setSckSpeed(uint32_t maxSck) {$/;"	f	class:SdSpiSoftDriver
setSdErrorCode	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^inline bool setSdErrorCode(uint8_t code, uint32_t line) {$/;"	f
setSdclk	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static void setSdclk(uint32_t kHzMax) {$/;"	f	file:
setSpeed	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::setSpeed(uint32_t desiredclk) {$/;"	f	class:Adafruit_I2CDevice
setSpeed	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::setSpeed(uint32_t desiredclk) {$/;"	f	class:Adafruit_I2CDevice
setTimerWidth	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^void Servo::setTimerWidth(int value)$/;"	f	class:Servo
setWidth	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setWidth(uint8_t width) { _width = width; }$/;"	f	class:Adafruit_BusIO_Register
setWidth	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setWidth(uint8_t width) { _width = width; }$/;"	f	class:Adafruit_BusIO_Register
setWriteError	./libraries/SdFat/extras/attic/PrintBasic.h	/^  void setWriteError(int err = 1) {$/;"	f	class:PrintBasic
setWriteError	./libraries/SdFat/src/common/PrintBasic.h	/^  void setWriteError(int err = 1) {$/;"	f	class:PrintBasic
set_ae_level	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_ae_level)        (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_ae_level	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_ae_level(sensor_t *sensor, int level)$/;"	f	file:
set_ae_level	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_ae_level(sensor_t *sensor, int level)$/;"	f	file:
set_ae_level	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_ae_level(sensor_t *sensor, int level)$/;"	f	file:
set_ae_level	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_ae_level(sensor_t *sensor, int level)$/;"	f	file:
set_ae_level	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_ae_level)        (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_aec2	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_aec2)            (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_aec2	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_aec2(sensor_t *sensor, int enable)$/;"	f	file:
set_aec2	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_aec2(sensor_t *sensor, int enable)$/;"	f	file:
set_aec2	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_aec2(sensor_t *sensor, int enable)$/;"	f	file:
set_aec2	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_aec2(sensor_t *sensor, int enable)$/;"	f	file:
set_aec2	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_aec2(sensor_t *sensor, int enable)$/;"	f	file:
set_aec2	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_aec2)            (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_aec_sensor	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_aec_sensor(sensor_t *sensor, int enable)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_aec_value)       (sensor_t *sensor, int gain);$/;"	m	struct:_sensor
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_aec_value(sensor_t *sensor, int value)$/;"	f	file:
set_aec_value	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_aec_value)       (sensor_t *sensor, int gain);$/;"	m	struct:_sensor
set_agc_gain	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_agc_gain)        (sensor_t *sensor, int gain);$/;"	m	struct:_sensor
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_agc_gain(sensor_t *sensor, int option)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_agc_gain(sensor_t *sensor, int gain)$/;"	f	file:
set_agc_gain	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_agc_gain)        (sensor_t *sensor, int gain);$/;"	m	struct:_sensor
set_agc_sensor	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_agc_sensor(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_awb_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_gain	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_awb_gain)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_awb_gain	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_awb_gain(sensor_t *sensor, int value)$/;"	f	file:
set_awb_gain	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_awb_gain(sensor_t *sensor, int value)$/;"	f	file:
set_awb_gain	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_awb_gain)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int value)$/;"	f	file:
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_awb_gain_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_awb_gain_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_bank	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_bank(sensor_t *sensor, ov2640_bank_t bank)$/;"	f	file:
set_bpc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_bpc)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_bpc	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^int set_bpc(sensor_t *sensor, int enable) \/\/ \/\/ For sc03ags sensor, This API used to control BLC$/;"	f
set_bpc	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_bpc)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_bpc_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_bpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_bpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_bpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_bpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_bpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_bpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_bpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_bpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_bpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_brightness)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_brightness	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_brightness(sensor_t *sensor, int level)$/;"	f	file:
set_brightness	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_brightness)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_colorbar	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_colorbar)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_colorbar(sensor_t *sensor, int value)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_colorbar(sensor_t *sensor, int value)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_colorbar(sensor_t *sensor, int enable)$/;"	f	file:
set_colorbar	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_colorbar)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_contrast	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_contrast)        (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_contrast	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_contrast(sensor_t *sensor, int contrast)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_contrast(sensor_t *sensor, int level)$/;"	f	file:
set_contrast	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_contrast)        (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_dcw	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_dcw)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_dcw	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_dcw)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_dcw_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_dcw_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_dcw_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_dcw_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_dcw_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_dcw_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_dcw_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_dcw_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_dcw_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_dcw_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_denoise	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_denoise)         (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_denoise	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_denoise(sensor_t *sensor, int level)$/;"	f	file:
set_denoise	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_denoise(sensor_t *sensor, int level)$/;"	f	file:
set_denoise	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_denoise(sensor_t *sensor, int level)$/;"	f	file:
set_denoise	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_denoise(sensor_t *sensor, int level)$/;"	f	file:
set_denoise	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_denoise)         (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_dummy	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_dummy(sensor_t *sensor, int val)$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_dummy(sensor_t *sensor, int val)$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_dummy(sensor_t *sensor, int val)$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_dummy(sensor_t *sensor, int val)$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_dummy	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_dummy(sensor_t *sensor, int val){ return -1; }$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_exposure_ctrl)   (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_exposure_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_exposure_ctrl	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_exposure_ctrl)   (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_framesize	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_framesize)       (sensor_t *sensor, framesize_t framesize);$/;"	m	struct:_sensor
set_framesize	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_framesize(sensor_t *sensor, framesize_t framesize)$/;"	f	file:
set_framesize	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_framesize)       (sensor_t *sensor, framesize_t framesize);$/;"	m	struct:_sensor
set_gain_ctrl	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_gain_ctrl)       (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_gain_ctrl(sensor_t *sensor, int enable)$/;"	f	file:
set_gain_ctrl	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_gain_ctrl)       (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_gainceiling	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_gainceiling)     (sensor_t *sensor, gainceiling_t gainceiling);$/;"	m	struct:_sensor
set_gainceiling	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t level)$/;"	f	file:
set_gainceiling	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t level)$/;"	f	file:
set_gainceiling	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_gainceiling(sensor_t *sensor, gainceiling_t level)$/;"	f	file:
set_gainceiling	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_gainceiling)     (sensor_t *sensor, gainceiling_t gainceiling);$/;"	m	struct:_sensor
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val)$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val){ return -1; }$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val)$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val)$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val)$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val){ return -1; }$/;"	f	file:
set_gainceiling_dummy	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_gainceiling_dummy(sensor_t *sensor, gainceiling_t val){ return -1; }$/;"	f	file:
set_gainceiling_sensor	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_gainceiling_sensor(sensor_t *sensor, gainceiling_t gainceiling)$/;"	f	file:
set_global_gain	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_global_gain(sensor_t *sensor, int gain_level)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_hmirror)         (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_hmirror(sensor_t *sensor, int enable)$/;"	f	file:
set_hmirror	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_hmirror)         (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_hmirror_sensor	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_hmirror_sensor(sensor_t *sensor, int enable)$/;"	f	file:
set_image_options	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_image_options(sensor_t *sensor)$/;"	f	file:
set_image_options	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_image_options(sensor_t *sensor)$/;"	f	file:
set_image_options	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_image_options(sensor_t *sensor)$/;"	f	file:
set_lenc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_lenc)            (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_lenc	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_lenc)            (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_lenc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_lenc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_output_window	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_output_window(sensor_t *sensor, int offset_x, int offset_y, int w, int h)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_pixformat)       (sensor_t *sensor, pixformat_t pixformat);$/;"	m	struct:_sensor
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_pixformat(sensor_t *sensor, pixformat_t pixformat)$/;"	f	file:
set_pixformat	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_pixformat)       (sensor_t *sensor, pixformat_t pixformat);$/;"	m	struct:_sensor
set_pll	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_pll)             (sensor_t *sensor, int bypass, int mul, int sys, int root, int pre, int seld5, int pclken, int pclk);$/;"	m	struct:_sensor
set_pll	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_pll(sensor_t *sensor, bool bypass, uint8_t multiplier, uint8_t sys_div, uint8_t pre_div, bool root_2x, uint8_t seld5, bool pclk_manual, uint8_t pclk_div)$/;"	f	file:
set_pll	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_pll(sensor_t *sensor, bool bypass, uint8_t multiplier, uint8_t sys_div, uint8_t pre_div, bool root_2x, uint8_t seld5, bool pclk_manual, uint8_t pclk_div){$/;"	f	file:
set_pll	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_pll(sensor_t *sensor, bool bypass, uint8_t multiplier, uint8_t sys_div, uint8_t pre_div, bool root_2x, uint8_t pclk_root_div, bool pclk_manual, uint8_t pclk_div){$/;"	f	file:
set_pll	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_pll)             (sensor_t *sensor, int bypass, int mul, int sys, int root, int pre, int seld5, int pclken, int pclk);$/;"	m	struct:_sensor
set_quality	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_quality)         (sensor_t *sensor, int quality);$/;"	m	struct:_sensor
set_quality	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_quality(sensor_t *sensor, int qs)$/;"	f	file:
set_quality	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_quality(sensor_t *sensor, int quality)$/;"	f	file:
set_quality	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_quality(sensor_t *sensor, int qs)$/;"	f	file:
set_quality	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_quality(sensor_t *sensor, int qs)$/;"	f	file:
set_quality	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_quality)         (sensor_t *sensor, int quality);$/;"	m	struct:_sensor
set_raw_gma	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_raw_gma)         (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_raw_gma	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_raw_gma(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_raw_gma)         (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_raw_gma_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_raw_gma_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_reg)             (sensor_t *sensor, int reg, int mask, int value);$/;"	m	struct:_sensor
set_reg	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_reg(sensor_t *sensor, int reg, int mask, int value)$/;"	f	file:
set_reg	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_reg)             (sensor_t *sensor, int reg, int mask, int value);$/;"	m	struct:_sensor
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_reg_bits(sensor_t *sensor, uint8_t reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_reg_bits(sensor_t *sensor, uint8_t reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_reg_bits(sensor_t *sensor, uint8_t bank, uint8_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_reg_bits(uint8_t slv_addr, uint16_t reg, uint8_t offset, uint8_t mask, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_reg_bits(sensor_t *sensor, uint8_t reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_reg_bits(sensor_t *sensor, int reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_reg_bits(sensor_t *sensor, uint16_t reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_reg_bits	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_reg_bits(sensor_t *sensor, int reg, uint8_t offset, uint8_t length, uint8_t value)$/;"	f	file:
set_regs	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_regs(sensor_t *sensor, const uint8_t (*regs)[2], uint32_t regs_entry_len)$/;"	f	file:
set_regs	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_regs(sensor_t *sensor, const uint8_t (*regs)[2], uint32_t regs_entry_len)$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_res_raw)         (sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning);$/;"	m	struct:_sensor
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning){return -1;}$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning)$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning)$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning)$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning)$/;"	f	file:
set_res_raw	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_res_raw(sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning){return -1;}$/;"	f	file:
set_res_raw	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_res_raw)         (sensor_t *sensor, int startX, int startY, int endX, int endY, int offsetX, int offsetY, int totalX, int totalY, int outputX, int outputY, bool scale, bool binning);$/;"	m	struct:_sensor
set_saturation	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_saturation)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_saturation	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_saturation(sensor_t *sensor, int level)$/;"	f	file:
set_saturation	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_saturation)      (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_sharpness	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_sharpness)       (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_sharpness(sensor_t *sensor, int level)$/;"	f	file:
set_sharpness	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_sharpness)       (sensor_t *sensor, int level);$/;"	m	struct:_sensor
set_special_effect	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_special_effect)  (sensor_t *sensor, int effect);$/;"	m	struct:_sensor
set_special_effect	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_special_effect(sensor_t *sensor, int effect)$/;"	f	file:
set_special_effect	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_special_effect(sensor_t *sensor, int effect)$/;"	f	file:
set_special_effect	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_special_effect(sensor_t *sensor, int effect)$/;"	f	file:
set_special_effect	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_special_effect(sensor_t *sensor, int effect)$/;"	f	file:
set_special_effect	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_special_effect(sensor_t *sensor, int sleep_mode_enable) \/\/ For sc03ags sensor, This API used for sensor sleep mode control.$/;"	f	file:
set_special_effect	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_special_effect)  (sensor_t *sensor, int effect);$/;"	m	struct:_sensor
set_vflip	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_vflip)           (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_vflip	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_vflip(sensor_t *sensor, int enable)$/;"	f	file:
set_vflip	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_vflip)           (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_vflip_sensor	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_vflip_sensor(sensor_t *sensor, int enable)$/;"	f	file:
set_wb_mode	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_wb_mode)         (sensor_t *sensor, int mode);$/;"	m	struct:_sensor
set_wb_mode	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_wb_mode(sensor_t *sensor, int mode)$/;"	f	file:
set_wb_mode	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_wb_mode(sensor_t *sensor, int mode)$/;"	f	file:
set_wb_mode	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_wb_mode(sensor_t *sensor, int mode)$/;"	f	file:
set_wb_mode	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_wb_mode(sensor_t *sensor, int mode)$/;"	f	file:
set_wb_mode	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_wb_mode)         (sensor_t *sensor, int mode);$/;"	m	struct:_sensor
set_whitebal	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_whitebal)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_whitebal(sensor_t *sensor, int enable)$/;"	f	file:
set_whitebal	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_whitebal)        (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_window	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_window(sensor_t *sensor, ov2640_sensor_mode_t mode, int offset_x, int offset_y, int max_x, int max_y, int w, int h){$/;"	f	file:
set_window	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_window(sensor_t *sensor, int offset_x, int offset_y, int w, int h)$/;"	f	file:
set_window	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_window(sensor_t *sensor, int offset_x, int offset_y, int w, int h)$/;"	f	file:
set_wpc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_wpc)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_wpc	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_wpc)             (sensor_t *sensor, int enable);$/;"	m	struct:_sensor
set_wpc_dsp	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_wpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_wpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_wpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_wpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_wpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_wpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_wpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_wpc_dsp	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_wpc_dsp(sensor_t *sensor, int enable)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int  (*set_xclk)            (sensor_t *sensor, int timer, int xclk);$/;"	m	struct:_sensor
set_xclk	./libraries/esp32-camera-2.0.8/sensors/bf3005.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/ov7725.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/sc030iot.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera-2.0.8/sensors/sc101iot.c	/^static int set_xclk(sensor_t *sensor, int timer, int xclk)$/;"	f	file:
set_xclk	./libraries/esp32-camera/include/sensor.h	/^    int  (*set_xclk)            (sensor_t *sensor, int timer, int xclk);$/;"	m	struct:_sensor
setbuf	./libraries/SdFat/src/iostream/StdioStream.h	74;"	d
setf	./libraries/SdFat/src/iostream/ios.h	/^  fmtflags setf(fmtflags fl) {$/;"	f	class:ios_base
setf	./libraries/SdFat/src/iostream/ios.h	/^  fmtflags setf(fmtflags fl, fmtflags mask) {$/;"	f	class:ios_base
setfill	./libraries/SdFat/src/iostream/iostream.h	/^  explicit setfill(char arg) : c(arg) {}$/;"	f	struct:setfill
setfill	./libraries/SdFat/src/iostream/iostream.h	/^struct setfill {$/;"	s
setmode	./libraries/SdFat/src/iostream/fstream.h	/^  void setmode(ios::openmode mode) {$/;"	f	class:StreamBaseClass
setpos	./libraries/SdFat/src/iostream/bufstream.h	/^  void setpos(pos_t* pos) {$/;"	f	class:ibufstream
setpos	./libraries/SdFat/src/iostream/fstream.h	/^  void setpos(pos_t* pos) {$/;"	f	class:fstream
setpos	./libraries/SdFat/src/iostream/fstream.h	/^  void setpos(pos_t* pos) {$/;"	f	class:ifstream
setprecision	./libraries/SdFat/src/iostream/iostream.h	/^  explicit setprecision(unsigned int arg) : p(arg) {}$/;"	f	struct:setprecision
setprecision	./libraries/SdFat/src/iostream/iostream.h	/^struct setprecision {$/;"	s
setstate	./libraries/SdFat/src/iostream/ios.h	/^  void setstate(iostate state) {$/;"	f	class:ios
setup	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::setup(double freq, uint8_t resolution_bits) {$/;"	f	class:ESP32PWM
setvbuf	./libraries/SdFat/src/iostream/StdioStream.h	75;"	d
setw	./libraries/SdFat/src/iostream/iostream.h	/^  explicit setw(unsigned arg) : w(arg) {}$/;"	f	struct:setw
setw	./libraries/SdFat/src/iostream/iostream.h	/^struct setw {$/;"	s
sfn	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t sfn[11];$/;"	m	class:FatLfn_t
sfn	./libraries/SdFat/src/FatLib/FatFile.h	/^  uint8_t sfn[11];$/;"	m	class:FatSfn_t
sfnReservedChar	./libraries/SdFat/src/common/FsStructs.h	/^inline bool sfnReservedChar(uint8_t c) {$/;"	f
sharpness	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int8_t sharpness;\/\/-2 - 2$/;"	m	struct:__anon15
sharpness	./libraries/esp32-camera/include/sensor.h	/^    int8_t sharpness;\/\/-2 - 2$/;"	m	struct:__anon16
show	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::show(void) {$/;"	f	class:Adafruit_NeoPixel
showbase	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags showbase   = 0x0200;$/;"	m	class:ios_base
showbase	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& showbase(ios_base& str) {$/;"	f
showpoint	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags showpoint  = 0x0400;$/;"	m	class:ios_base
showpoint	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& showpoint(ios_base& str) {$/;"	f
showpos	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags showpos    = 0x0800;$/;"	m	class:ios_base
showpos	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& showpos(ios_base& str) {$/;"	f
signature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t   signature[2];$/;"	m	struct:masterBootRecordSector
signature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  signature[2];$/;"	m	struct:ExFatBootSector
signature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  signature[2];$/;"	m	struct:partitionBootSector
signature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  signature[2];$/;"	m	struct:partitionBootSectorFat
sine8	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  static uint8_t sine8(uint8_t x) {$/;"	f	class:Adafruit_NeoPixel
size	./libraries/SdFat/src/FsLib/FsFile.h	/^  uint64_t size() const {return fileSize();}$/;"	f	class:FsBaseFile
size	./libraries/SdFat/src/common/ArduinoFiles.h	/^  PosType size() {$/;"	f	class:StreamFile
size	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  size[8];$/;"	m	struct:__anon6
size	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  size[8];$/;"	m	struct:__anon7
sizeOfProtectedArea	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t sizeOfProtectedArea[4];$/;"	m	struct:SdStatus
skipWhite	./libraries/SdFat/src/iostream/istream.cpp	/^void istream::skipWhite() {$/;"	f	class:istream
skipws	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags skipws     = 0x1000;$/;"	m	class:ios_base
skipws	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& skipws(ios_base& str) {$/;"	f
sleep	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::sleep() {$/;"	f	class:Adafruit_PWMServoDriver
sleep	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::sleep() {$/;"	f	class:Adafruit_PWMServoDriver
slv_addr	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t  slv_addr;          \/\/ Sensor I2C slave address.$/;"	m	struct:_sensor
slv_addr	./libraries/esp32-camera/include/sensor.h	/^    uint8_t  slv_addr;          \/\/ Sensor I2C slave address.$/;"	m	struct:_sensor
sm	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  int sm = 0;$/;"	m	class:Adafruit_NeoPixel
special_effect	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t special_effect;\/\/0 - 6$/;"	m	struct:__anon15
special_effect	./libraries/esp32-camera/include/sensor.h	/^    uint8_t special_effect;\/\/0 - 6$/;"	m	struct:__anon16
special_effects_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t special_effects_regs[NUM_SPECIAL_EFFECTS + 1][5] = {$/;"	v
speedClass	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t speedClass;$/;"	m	struct:SdStatus
spiActivate	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiActivate() {$/;"	f	class:SharedSpiCard
spiAttach	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::spiAttach() {$/;"	f	class:ESP32BootROMClass
spiBegin	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiBegin(SdSpiConfig spiConfig) {$/;"	f	class:SharedSpiCard
spiDeactivate	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiDeactivate() {$/;"	f	class:SharedSpiCard
spiDmaRX	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void spiDmaRX(uint8_t* dst, uint16_t count) {$/;"	f	file:
spiDmaTX	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static void spiDmaTX(const uint8_t* src, uint16_t count) {$/;"	f	file:
spiEnd	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiEnd() {$/;"	f	class:SharedSpiCard
spiOptionDedicated	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^inline bool spiOptionDedicated(uint8_t opt) {(void)opt; return false;}$/;"	f
spiOptionDedicated	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^inline bool spiOptionDedicated(uint8_t opt) {return opt & DEDICATED_SPI;}$/;"	f
spiPort	./libraries/SdFat/src/SpiDriver/SdSpiDriver.h	/^  SpiPort_t* spiPort = nullptr;$/;"	m	class:SdSpiConfig
spiReceive	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t spiReceive() {$/;"	f	class:SharedSpiCard
spiReceive	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t spiReceive(uint8_t* buf, size_t n) {$/;"	f	class:SharedSpiCard
spiSelect	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiSelect() {$/;"	f	class:SharedSpiCard
spiSend	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiSend(const uint8_t* buf, size_t n) {$/;"	f	class:SharedSpiCard
spiSend	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiSend(uint8_t data) {$/;"	f	class:SharedSpiCard
spiSetSckSpeed	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiSetSckSpeed(uint32_t maxSck) {$/;"	f	class:SharedSpiCard
spiStart	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^void SharedSpiCard::spiStart() {$/;"	f	class:SharedSpiCard
spiStop	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^void SharedSpiCard::spiStop() {$/;"	f	class:SharedSpiCard
spiTransfer	./libraries/SdFat/src/SpiDriver/SdSpiDue.cpp	/^static inline uint8_t spiTransfer(uint8_t b) {$/;"	f	file:
spiUnselect	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void spiUnselect() {$/;"	f	class:SharedSpiCard
srcStructure	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t srcStructure() {return scr[0] >> 4;}$/;"	f	struct:SCR
sscanf	./libraries/SdFat/src/iostream/StdioStream.h	77;"	d
stackBegin	./libraries/SdFat/src/FreeStack.cpp	/^inline char* stackBegin() {$/;"	f
stackPointer	./libraries/SdFat/src/FreeStack.cpp	/^inline char* stackPointer() {$/;"	f
startMicros	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserFunctions.cpp	/^static uint32_t startMicros;$/;"	v	file:
startMicros	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^static uint32_t startMicros;$/;"	v	file:
startMicros	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^static uint32_t startMicros;$/;"	v	file:
start_x	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t start_x;$/;"	m	struct:__anon12
start_x	./libraries/esp32-camera/include/sensor.h	/^        uint16_t start_x;$/;"	m	struct:__anon13
start_y	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t start_y;$/;"	m	struct:__anon12
start_y	./libraries/esp32-camera/include/sensor.h	/^        uint16_t start_y;$/;"	m	struct:__anon13
state	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    cam_state_t state;$/;"	m	struct:__anon26
status	./libraries/SdFat/src/SdCard/SdCardInterface.h	/^  virtual uint32_t status() {return 0XFFFFFFFF;}$/;"	f	class:SdCardInterface
status	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint32_t SdioCard::status() {$/;"	f	class:SdioCard
status	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    camera_status_t status;$/;"	m	struct:_sensor
status	./libraries/esp32-camera/include/sensor.h	/^    camera_status_t status;$/;"	m	struct:_sensor
statusCMD13	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static uint32_t statusCMD13() {$/;"	f	file:
stopTransmission	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::stopTransmission(bool blocking) {$/;"	f	class:SdioCard
str2order	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^neoPixelType Adafruit_NeoPixel::str2order(const char *v) {$/;"	f	class:Adafruit_NeoPixel
stream_t	./libraries/SdFat/src/common/SysCall.h	/^typedef PrintBasic stream_t;$/;"	t
stream_t	./libraries/SdFat/src/common/SysCall.h	/^typedef Stream stream_t;$/;"	t
streamsize	./libraries/SdFat/src/iostream/ios.h	/^  typedef uint32_t streamsize;$/;"	t	class:ios_base
streamsize	./libraries/SdFat/src/iostream/ios.h	/^  typedef uint64_t streamsize;$/;"	t	class:ios_base
structSignature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t structSignature[4];$/;"	m	struct:FsInfoSector
stub_esp32	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const esp32_stub_loader_t stub_esp32 = {$/;"	v
stub_esp32s2	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const esp32_stub_loader_t stub_esp32s2 = {$/;"	v
stub_esp32s3	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const esp32_stub_loader_t stub_esp32s3 = {$/;"	v
stub_esp8266	./libraries/Adafruit_TestBed/src/stub_esp32.h	/^const esp32_stub_loader_t stub_esp8266 = {$/;"	v
subsampling_t	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    enum subsampling_t { Y_ONLY = 0, H1V1 = 1, H2V1 = 2, H2V2 = 3 };$/;"	g	namespace:jpge
support_jpeg	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    const bool support_jpeg;$/;"	m	struct:__anon9
support_jpeg	./libraries/esp32-camera/include/sensor.h	/^    const bool support_jpeg;$/;"	m	struct:__anon10
susAddr	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t susAddr[3];$/;"	m	struct:SdStatus
swap_data	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    bool swap_data;$/;"	m	struct:__anon26
sync	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::sync() {$/;"	f	class:ESP32BootROMClass
sync	./libraries/SdFat/src/BufferedPrint.h	/^  bool sync() {$/;"	f	class:BufferedPrint
sync	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::sync() {$/;"	f	class:ExFatFile
sync	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::sync() {$/;"	f	class:FatFile
sync	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool sync() {$/;"	f	class:FsBaseFile
sync	./libraries/SdFat/src/RingBuf.h	/^  bool sync() {$/;"	f	class:RingBuf
sync	./libraries/SdFat/src/common/FsCache.cpp	/^bool FsCache::sync() {$/;"	f	class:FsCache
sync	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  bool sync() {$/;"	f	class:ArduinoOutStream
sync	./libraries/SdFat/src/iostream/bufstream.h	/^  bool sync() {$/;"	f	class:obufstream
sync	./libraries/SdFat/src/iostream/fstream.h	/^  bool sync() {$/;"	f	class:fstream
sync	./libraries/SdFat/src/iostream/fstream.h	/^  bool sync() {$/;"	f	class:ofstream
syncBlocks	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual bool syncBlocks() { return syncDevice(); }$/;"	f	class:FsBlockDeviceInterface
syncDevice	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool syncDevice() {$/;"	f	class:ExFatPartition
syncDevice	./libraries/SdFat/src/FatLib/FatPartition.h	/^  bool syncDevice() {$/;"	f	class:FatPartition
syncDevice	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::syncDevice() {$/;"	f	class:SharedSpiCard
syncDevice	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::syncDevice() {$/;"	f	class:SdioCard
syncDir	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::syncDir() {$/;"	f	class:ExFatFile
syncStub	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::syncStub(uint32_t timeout_ms) {$/;"	f	class:ESP32BootROMClass
syncUpcase	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^bool ExFatFormatter::syncUpcase() {$/;"	f	class:ExFatFormatter
sz_pool	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	UINT sz_pool;			\/* Size of momory pool (bytes available) *\/$/;"	m	struct:JDEC
sz_pool	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	UINT sz_pool;			\/* Size of momory pool (bytes available) *\/$/;"	m	struct:JDEC
t0h_ticks	./libraries/Adafruit_NeoPixel/esp.c	/^static uint32_t t0h_ticks = 0;$/;"	v	file:
t0l_ticks	./libraries/Adafruit_NeoPixel/esp.c	/^static uint32_t t0l_ticks = 0;$/;"	v	file:
t1h_ticks	./libraries/Adafruit_NeoPixel/esp.c	/^static uint32_t t1h_ticks = 0;$/;"	v	file:
t1l_ticks	./libraries/Adafruit_NeoPixel/esp.c	/^static uint32_t t1l_ticks = 0;$/;"	v	file:
targetPower	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::targetPower(bool on) {$/;"	f	class:Adafruit_TestBed
targetPowerCycle	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::targetPowerCycle(uint16_t off_time) {$/;"	f	class:Adafruit_TestBed
targetPowerPin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  int16_t targetPowerPin = -1;     \/\/\/< Set to a target power pin if used$/;"	m	class:Adafruit_TestBed
targetPowerPolarity	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  bool targetPowerPolarity = HIGH; \/\/\/< What to set the power pin to, for ON$/;"	m	class:Adafruit_TestBed
targetReset	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^void Adafruit_TestBed::targetReset(uint32_t reset_ms) {$/;"	f	class:Adafruit_TestBed
targetResetPin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  int targetResetPin = -1; \/\/\/< Set to target reset pin if used$/;"	m	class:Adafruit_TestBed
task_handle	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    TaskHandle_t task_handle;$/;"	m	struct:__anon26
tellg	./libraries/SdFat/src/iostream/istream.h	/^  pos_type tellg() {$/;"	f	class:istream
tellp	./libraries/SdFat/src/iostream/ostream.h	/^  pos_type tellp() {$/;"	f	class:ostream
tellpos	./libraries/SdFat/src/iostream/ArduinoStream.h	/^  pos_type tellpos() {$/;"	f	class:ArduinoOutStream
tellpos	./libraries/SdFat/src/iostream/bufstream.h	/^  pos_type tellpos() {$/;"	f	class:ibufstream
tellpos	./libraries/SdFat/src/iostream/bufstream.h	/^  pos_type tellpos() {$/;"	f	class:obufstream
tellpos	./libraries/SdFat/src/iostream/fstream.h	/^  pos_type tellpos() {$/;"	f	class:fstream
tellpos	./libraries/SdFat/src/iostream/fstream.h	/^  pos_type tellpos() {$/;"	f	class:ifstream
tellpos	./libraries/SdFat/src/iostream/fstream.h	/^  pos_type tellpos() {$/;"	f	class:ofstream
tempWriteProtect	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  bool tempWriteProtect() const {return  csd[14] & 0X10;}$/;"	f	struct:CSD
test platforms	./libraries/Adafruit_NeoPixel/.github/workflows/githubci.yml	/^    - name: test platforms$/;"	k
test platforms	./libraries/Adafruit_TestBed/.github/workflows/githubci.yml	/^    - name: test platforms$/;"	k
test platforms	./libraries/SdFat/.github/workflows/githubci.yml	/^    - name: test platforms$/;"	k
testAnalogVoltage	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::testAnalogVoltage(uint16_t pin, const char *name,$/;"	f	class:Adafruit_TestBed
testPullup	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::testPullup(uint16_t pin, uint8_t inter_delay) {$/;"	f	class:Adafruit_TestBed
testpins	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^bool Adafruit_TestBed::testpins(uint8_t a, uint8_t b, uint8_t *allpins,$/;"	f	class:Adafruit_TestBed
text	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  const uint8_t *text;$/;"	m	struct:__anon2
text_length	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t text_length;$/;"	m	struct:__anon2
text_start	./libraries/Adafruit_TestBed/src/ESP32BootROM.h	/^  uint32_t text_start;$/;"	m	struct:__anon2
theSerial	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  Stream *theSerial = &Serial; \/\/\/< The Serial port used for debugging$/;"	m	class:Adafruit_TestBed
theWire	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  TwoWire *theWire = &Wire;    \/\/\/< The I2C port used in scanning$/;"	m	class:Adafruit_TestBed
ticks	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int ticks = DEFAULT_PULSE_WIDTH_TICKS; \/\/ current pulse width on this channel$/;"	m	class:Servo
ticksToUs	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::ticksToUs(int ticks)$/;"	f	class:Servo
time	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserTypes.h	/^  uint32_t time;$/;"	m	struct:data_t
time	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserTypes.h	/^  uint32_t time;$/;"	m	struct:data_t
time	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserTypes.h	/^  unsigned long time;$/;"	m	struct:data_t
timedOut	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^  bool timedOut() {$/;"	f	class:Timeout
timerAndIndexToChannel	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^int ESP32PWM::timerAndIndexToChannel(int timerNum, int index) {$/;"	f	class:ESP32PWM
timerCount	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^int ESP32PWM::timerCount[4] = { 0, 0, 0, 0 };$/;"	m	class:ESP32PWM	file:
timerCount	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static int timerCount[4];$/;"	m	class:ESP32PWM
timerFreqSet	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^long ESP32PWM::timerFreqSet[4] = { -1, -1, -1, -1 };$/;"	m	class:ESP32PWM	file:
timerFreqSet	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	static long timerFreqSet[4];$/;"	m	class:ESP32PWM
timerNum	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.h	/^	int timerNum = -1;$/;"	m	class:ESP32PWM
timer_width	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int timer_width = DEFAULT_TIMER_WIDTH; \/\/ ESP32 allows variable width PWM timers$/;"	m	class:Servo
timer_width_ticks	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.h	/^	int timer_width_ticks = DEFAULT_TIMER_WIDTH_TICKS; \/\/ no. of ticks at rollover; varies with width$/;"	m	class:Servo
timestamp	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.cpp	/^uint32_t Adafruit_TestBed::timestamp(void) {$/;"	f	class:Adafruit_TestBed
timestamp	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:ExFatFile
timestamp	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::timestamp(uint8_t flags, uint16_t year, uint8_t month,$/;"	f	class:FatFile
timestamp	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool timestamp(uint8_t flags, uint16_t year, uint8_t month, uint8_t day,$/;"	f	class:FsBaseFile
timestamp	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    struct timeval timestamp;   \/*!< Timestamp since boot of the first DMA buffer of the frame *\/$/;"	m	struct:__anon22	typeref:struct:__anon22::timeval
timestamp	./libraries/esp32-camera/include/esp_camera.h	/^    struct timeval timestamp;   \/*!< Timestamp since boot of the first DMA buffer of the frame *\/$/;"	m	struct:__anon23	typeref:struct:__anon23::timeval
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s2_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/feather_esp32s3_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tinyuf2	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries/metro_esp32s2_binaries.h	/^const esp32_zipfile_t tinyuf2 = {$/;"	v
tjpgd_decode_rgb565	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void tjpgd_decode_rgb565(uint8_t *mjpegbuffer, uint32_t size, uint8_t *outbuffer)$/;"	f	file:
tjpgd_decode_rgb888	./libraries/esp32-camera-2.0.8/test/test_camera.c	/^static void tjpgd_decode_rgb888(uint8_t *mjpegbuffer, uint32_t size, uint8_t *outbuffer)$/;"	f	file:
tmpfile	./libraries/SdFat/src/iostream/StdioStream.h	78;"	d
tmpnam	./libraries/SdFat/src/iostream/StdioStream.h	79;"	d
toUpcase	./libraries/SdFat/src/common/upcase.cpp	/^uint16_t toUpcase(uint16_t chr) {$/;"	f
toUpper	./libraries/SdFat/src/ExFatLib/ExFatName.cpp	/^static char toUpper(char c) {$/;"	f	file:
toUpper	./libraries/SdFat/src/FatLib/FatFileLFN.cpp	/^inline char toUpper(char c) {$/;"	f
toggle	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void toggle() {$/;"	f	class:DigitalPin
top	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon30
top	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	WORD left, right, top, bottom;$/;"	m	struct:__anon28
totalSectors	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t totalSectors[4];$/;"	m	struct:mbrPartition
totalSectors16	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  totalSectors16[2];$/;"	m	struct:biosParameterBlockFat16
totalSectors16	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  totalSectors16[2];$/;"	m	struct:biosParameterBlockFat32
totalSectors32	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  totalSectors32[4];$/;"	m	struct:biosParameterBlockFat16
totalSectors32	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  totalSectors32[4];$/;"	m	struct:biosParameterBlockFat32
total_x	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t total_x;$/;"	m	struct:__anon12
total_x	./libraries/esp32-camera/include/sensor.h	/^        uint16_t total_x;$/;"	m	struct:__anon13
total_y	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        uint16_t total_y;$/;"	m	struct:__anon12
total_y	./libraries/esp32-camera/include/sensor.h	/^        uint16_t total_y;$/;"	m	struct:__anon13
trailSignature	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t trailSignature[4];$/;"	m	struct:FsInfoSector
transfer	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^uint8_t Adafruit_SPIDevice::transfer(uint8_t send) {$/;"	f	class:Adafruit_SPIDevice
transfer	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::transfer(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice
transfer	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^uint8_t Adafruit_SPIDevice::transfer(uint8_t send) {$/;"	f	class:Adafruit_SPIDevice
transfer	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::transfer(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice
transfer	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  uint8_t transfer(uint8_t txData) {$/;"	f	class:SoftSPI
transfer	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  static uint8_t transfer(uint8_t data) {$/;"	f	class:SdSpiDriverBareUno
transferBit	./libraries/SdFat/src/DigitalIO/SoftSPI.h	/^  void transferBit(uint8_t bit, uint8_t* rxData, uint8_t txData) {$/;"	f	class:SoftSPI
transferStop	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool transferStop() {$/;"	f	file:
trunc	./libraries/SdFat/src/iostream/ios.h	/^  static const openmode trunc  = 0X80;$/;"	m	class:ios_base
truncate	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  bool truncate(uint64_t length) {$/;"	f	class:ExFatFile
truncate	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^bool ExFatFile::truncate() {$/;"	f	class:ExFatFile
truncate	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool truncate(const String& path, uint64_t length) {$/;"	f	class:ExFatVolume
truncate	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  bool truncate(const char* path, uint64_t length) {$/;"	f	class:ExFatVolume
truncate	./libraries/SdFat/src/FatLib/FatFile.cpp	/^bool FatFile::truncate() {$/;"	f	class:FatFile
truncate	./libraries/SdFat/src/FatLib/FatFile.h	/^  bool truncate(uint32_t length) {$/;"	f	class:FatFile
truncate	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool truncate(const String& path, uint32_t length) {$/;"	f	class:FatVolume
truncate	./libraries/SdFat/src/FatLib/FatVolume.h	/^  bool truncate(const char* path, uint32_t length) {$/;"	f	class:FatVolume
truncate	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool truncate() {$/;"	f	class:FsBaseFile
truncate	./libraries/SdFat/src/FsLib/FsFile.h	/^  bool truncate(uint64_t length) {$/;"	f	class:FsBaseFile
type	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  uint8_t type() const {$/;"	f	class:SharedSpiCard
type	./libraries/SdFat/src/SdCard/SdSpiCard.h	/^  void type(uint8_t value) {$/;"	f	class:SharedSpiCard
type	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^uint8_t SdioCard::type() const {$/;"	f	class:SdioCard
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon10
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon11
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon6
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon7
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon8
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  type;$/;"	m	struct:__anon9
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t type;$/;"	m	struct:__anon1
type	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t type;$/;"	m	struct:mbrPartition
u16	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^    unsigned short u16[DATA_DIM16];$/;"	m	union:adcdata_t::__anon2
u16ToCp	./libraries/SdFat/src/common/FsUtf.h	/^  inline uint32_t u16ToCp(uint16_t hs, uint16_t ls) {$/;"	f	namespace:FsUtf
u8	./libraries/SdFat/examples/examplesV1/AnalogBinLogger/AnalogBinLogger.h	/^    unsigned char  u8[DATA_DIM8];$/;"	m	union:adcdata_t::__anon2
uhsSpeedAuSize	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t uhsSpeedAuSize;$/;"	m	struct:SdStatus
uint	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef unsigned int   uint;$/;"	t	namespace:jpge
uint16	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef unsigned short uint16;$/;"	t	namespace:jpge
uint32	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef unsigned int   uint32;$/;"	t	namespace:jpge
uint32_max	./libraries/SdFat/src/iostream/istream.cpp	/^static const uint32_t uint32_max = (uint32_t)-1;$/;"	v	file:
uint8	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^    typedef unsigned char  uint8;$/;"	t	namespace:jpge
uncompressed_len	./libraries/Adafruit_TestBed/src/Adafruit_TestBed.h	/^  const uint32_t uncompressed_len;$/;"	m	struct:__anon3
ungetc	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::ungetc(int c) {$/;"	f	class:StdioStream
ungetc	./libraries/SdFat/src/iostream/StdioStream.h	80;"	d
unicode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  unicode[22];$/;"	m	struct:__anon8
unicode	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  unicode[30];$/;"	m	struct:__anon11
unicode1	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  unicode1[10];$/;"	m	struct:__anon5
unicode2	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  unicode2[12];$/;"	m	struct:__anon5
unicode3	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  unicode3[4];$/;"	m	struct:__anon5
unoBit	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^inline uint8_t unoBit(uint8_t pin) {$/;"	f
unoDigitalRead	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^inline uint8_t unoDigitalRead(uint8_t pin) {$/;"	f
unoDigitalWrite	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^inline void unoDigitalWrite(uint8_t pin, uint8_t value) {$/;"	f
unoPinMode	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^inline void unoPinMode(uint8_t pin, uint8_t mode) {$/;"	f
unselect	./libraries/SdFat/src/SpiDriver/SdSpiBareUnoDriver.h	/^  void unselect() {$/;"	f	class:SdSpiDriverBareUno
unsetf	./libraries/SdFat/src/iostream/ios.h	/^  void unsetf(fmtflags fl) {$/;"	f	class:ios_base
unused1	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^        uint32_t unused1:8;$/;"	m	struct:__anon8::__anon9	file:
unused2	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^        uint32_t unused2:8;$/;"	m	struct:__anon8::__anon9	file:
upcaseChecksum	./libraries/SdFat/src/common/upcase.cpp	/^uint32_t upcaseChecksum(uint16_t uc, uint32_t sum) {$/;"	f
upcase_h	./libraries/SdFat/src/common/upcase.h	26;"	d
updateFreeClusterCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  void updateFreeClusterCount(int32_t change) {$/;"	f	class:FatPartition
updateLength	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::updateLength(uint16_t n) {$/;"	f	class:Adafruit_NeoPixel
updateType	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^void Adafruit_NeoPixel::updateType(neoPixelType t) {$/;"	f	class:Adafruit_NeoPixel
uploadStub	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^bool ESP32BootROMClass::uploadStub(const esp32_stub_loader_t *stub) {$/;"	f	class:ESP32BootROMClass
uppercase	./libraries/SdFat/src/iostream/ios.h	/^  static const fmtflags uppercase  = 0x4000;$/;"	m	class:ios_base
uppercase	./libraries/SdFat/src/iostream/ios.h	/^inline ios_base& uppercase(ios_base& str) {$/;"	f
usToTicks	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^int Servo::usToTicks(int usec)$/;"	f	class:Servo
usbh_begin	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::usbh_begin(void) {$/;"	f	class:Adafruit_TestBed_Brains
usbh_inited	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::usbh_inited(void) { return tuh_inited(); }$/;"	f	class:Adafruit_TestBed_Brains
usbh_mountFS	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::usbh_mountFS(uint8_t dev_addr) {$/;"	f	class:Adafruit_TestBed_Brains
usbh_setVBus	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^void Adafruit_TestBed_Brains::usbh_setVBus(bool en) {$/;"	f	class:Adafruit_TestBed_Brains
usbh_umountFS	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^bool Adafruit_TestBed_Brains::usbh_umountFS(uint8_t dev_addr) {$/;"	f	class:Adafruit_TestBed_Brains
useDma	./libraries/SdFat/src/SdCard/SdioCard.h	/^  bool useDma() {return m_options & DMA_SDIO;}$/;"	f	class:SdioConfig
userSetup	./libraries/SdFat/examples/examplesV1/LowLatencyLogger/UserFunctions.cpp	/^void userSetup() {$/;"	f
userSetup	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^void userSetup() {$/;"	f
userSetup	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050/UserFunctions.cpp	/^void userSetup() {$/;"	f
vUb	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^        int16_t vUb;$/;"	m	struct:__anon3	file:
vUg	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^        int16_t vUg;$/;"	m	struct:__anon3	file:
vVg	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^        int16_t vVg;$/;"	m	struct:__anon3	file:
vVr	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^        int16_t vVr;$/;"	m	struct:__anon3	file:
vY	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^        int16_t vY;$/;"	m	struct:__anon3	file:
val	./libraries/SdFat/src/common/upcase.cpp	/^  uint16_t val;$/;"	m	struct:pair16	file:
val	./libraries/esp32-camera-2.0.8/sensors/private_include/sc031gs_settings.h	/^	uint8_t val;$/;"	m	struct:sc031gs_regval
val	./libraries/esp32-camera-2.0.8/target/esp32/ll_cam.c	/^    uint32_t val;$/;"	m	union:__anon8	file:
validLength	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  uint64_t validLength() const {return m_validLength;}$/;"	f	class:ExFatFile
validLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  validLength[8];$/;"	m	struct:__anon10
value	./libraries/esp32-camera-2.0.8/sensors/ov7670.c	/^	uint8_t value;$/;"	m	struct:regval_list	file:
vflip	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t vflip;$/;"	m	struct:__anon15
vflip	./libraries/esp32-camera/include/sensor.h	/^    uint8_t vflip;$/;"	m	struct:__anon16
vfprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int vfprintf(F* file, const char *fmt, va_list ap) {$/;"	f
vfprintf	./libraries/SdFat/src/iostream/StdioStream.h	81;"	d
videoSpeed	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t videoSpeed;$/;"	m	struct:SdStatus
vmprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int vmprintf(F file, const __FlashStringHelper *ifsh, va_list ap) {$/;"	f
vmprintf	./libraries/SdFat/extras/attic/PrintTemplates.h	/^int vmprintf(F* file, const char *fmt, va_list ap) {$/;"	f
vol	./libraries/SdFat/src/SdFat.h	/^  Vol* vol() {return reinterpret_cast<Vol*>(this);}$/;"	f	class:SdBase
volume	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ExFatVolume* volume() const {return m_vol;}$/;"	f	class:ExFatFile
volumeBegin	./libraries/SdFat/src/SdFat.h	/^  bool volumeBegin() {$/;"	f	class:SdBase
volumeFlags	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t volumeFlags[2];$/;"	m	struct:biosParameterBlockExFat
volumeLabel	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeLabel[11];$/;"	m	struct:biosParameterBlockFat16
volumeLabel	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeLabel[11];$/;"	m	struct:biosParameterBlockFat32
volumeLength	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t volumeLength[8];$/;"	m	struct:biosParameterBlockExFat
volumeSectorCount	./libraries/SdFat/src/FatLib/FatPartition.h	/^  uint32_t volumeSectorCount() const {$/;"	f	class:FatPartition
volumeSerialNumber	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeSerialNumber[4];$/;"	m	struct:biosParameterBlockFat16
volumeSerialNumber	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeSerialNumber[4];$/;"	m	struct:biosParameterBlockFat32
volumeSerialNumber	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t volumeSerialNumber[4];$/;"	m	struct:biosParameterBlockExFat
volumeType	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeType[8];$/;"	m	struct:biosParameterBlockFat16
volumeType	./libraries/SdFat/src/common/FsStructs.h	/^  uint8_t  volumeType[8];$/;"	m	struct:biosParameterBlockFat32
vprintf	./libraries/SdFat/src/iostream/StdioStream.h	82;"	d
vscAuSize	./libraries/SdFat/src/SdCard/SdCardInfo.h	/^  uint8_t vscAuSize[2];$/;"	m	struct:SdStatus
vsprintf	./libraries/SdFat/src/iostream/StdioStream.h	83;"	d
vsync_invert	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t vsync_invert;$/;"	m	struct:__anon26
vsync_pin	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint8_t vsync_pin;$/;"	m	struct:__anon26
vwd	./libraries/SdFat/src/ExFatLib/ExFatVolume.h	/^  ExFatFile* vwd() {return &m_vwd;}$/;"	f	class:ExFatVolume
vwd	./libraries/SdFat/src/FatLib/FatVolume.h	/^  FatFile* vwd() {return &m_vwd;}$/;"	f	class:FatVolume
w	./libraries/SdFat/src/iostream/iostream.h	/^  unsigned w;$/;"	m	struct:setw
wOffset	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h	/^  uint8_t wOffset;    \/\/\/< Index of white (==rOffset if no white)$/;"	m	class:Adafruit_NeoPixel
waitDmaStatus	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool waitDmaStatus() {$/;"	f	file:
waitReady	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::waitReady(uint16_t ms) {$/;"	f	class:SharedSpiCard
waitTimeout	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool waitTimeout(bool (*fcn)()) {$/;"	f	file:
waitTransferComplete	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool waitTransferComplete() {$/;"	f	file:
wakeup	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::wakeup() {$/;"	f	class:Adafruit_PWMServoDriver
wakeup	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::wakeup() {$/;"	f	class:Adafruit_PWMServoDriver
wb_mode	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t wb_mode;\/\/0 - 4$/;"	m	struct:__anon15
wb_mode	./libraries/esp32-camera/include/sensor.h	/^    uint8_t wb_mode;\/\/0 - 4$/;"	m	struct:__anon16
wb_modes_regs	./libraries/esp32-camera-2.0.8/sensors/private_include/ov2640_settings.h	/^static const uint8_t wb_modes_regs[NUM_WB_MODES + 1][3] = {$/;"	v
width	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^uint8_t Adafruit_BusIO_Register::width(void) { return _width; }$/;"	f	class:Adafruit_BusIO_Register
width	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint8_t Adafruit_BusIO_Register::width(void) { return _width; }$/;"	f	class:Adafruit_BusIO_Register
width	./libraries/SdFat/src/iostream/ios.h	/^  unsigned width() {$/;"	f	class:ios_base
width	./libraries/SdFat/src/iostream/ios.h	/^  unsigned width(unsigned n) {$/;"	f	class:ios_base
width	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^        uint16_t width;$/;"	m	struct:__anon5	file:
width	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    int32_t width;$/;"	m	struct:__anon4	file:
width	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    size_t width;               \/*!< Width of the buffer in pixels *\/$/;"	m	struct:__anon22
width	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^        const uint16_t width;$/;"	m	struct:__anon13
width	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	UINT width, height;		\/* Size of the input image (pixel) *\/$/;"	m	struct:JDEC
width	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	UINT width, height;		\/* Size of the input image (pixel) *\/$/;"	m	struct:JDEC
width	./libraries/esp32-camera-2.0.8/target/private_include/ll_cam.h	/^    uint16_t width;$/;"	m	struct:__anon26
width	./libraries/esp32-camera/include/esp_camera.h	/^    size_t width;               \/*!< Width of the buffer in pixels *\/$/;"	m	struct:__anon23
width	./libraries/esp32-camera/include/sensor.h	/^        const uint16_t width;$/;"	m	struct:__anon14
workbuf	./libraries/esp32-camera-2.0.8/target/esp32s2/private_include/tjpgd.h	/^	void* workbuf;			\/* Working buffer for IDCT and RGB output *\/$/;"	m	struct:JDEC
workbuf	./libraries/esp32-camera-2.0.8/target/jpeg_include/tjpgd.h	/^	void* workbuf;			\/* Working buffer for IDCT and RGB output *\/$/;"	m	struct:JDEC
wpc	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    uint8_t wpc;$/;"	m	struct:__anon15
wpc	./libraries/esp32-camera/include/sensor.h	/^    uint8_t wpc;$/;"	m	struct:__anon16
write	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint32_t value, uint8_t numbytes) {$/;"	f	class:Adafruit_BusIO_Register
write	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register
write	./libraries/Adafruit_BusIO-1.15.0/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_RegisterBits::write(uint32_t data) {$/;"	f	class:Adafruit_BusIO_RegisterBits
write	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write(const uint8_t *buffer, size_t len, bool stop,$/;"	f	class:Adafruit_I2CDevice
write	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write(const uint8_t *buffer, size_t len,$/;"	f	class:Adafruit_SPIDevice
write	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint32_t value, uint8_t numbytes) {$/;"	f	class:Adafruit_BusIO_Register
write	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register
write	./libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_RegisterBits::write(uint32_t data) {$/;"	f	class:Adafruit_BusIO_RegisterBits
write	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write(const uint8_t *buffer, size_t len, bool stop,$/;"	f	class:Adafruit_I2CDevice
write	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write(const uint8_t *buffer, size_t len,$/;"	f	class:Adafruit_SPIDevice
write	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE/BLESerial.cpp	/^size_t BLESerial::write(uint8_t byte) {$/;"	f	class:BLESerial
write	./libraries/Adafruit_NeoPixel/examples/StrandtestBLE_nodelay/BLESerial.cpp	/^size_t BLESerial::write(uint8_t byte) {$/;"	f	class:BLESerial
write	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::write(uint32_t duty) {$/;"	f	class:ESP32PWM
write	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo
write	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t write(const char *buffer, size_t size) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/extras/attic/PrintBasic.h	/^  size_t write(const char *str) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/extras/attic/PrintBasic.h	/^  virtual size_t write(const uint8_t* buffer, size_t size) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/src/BufferedPrint.h	/^  size_t write(const void* src, size_t n) {$/;"	f	class:BufferedPrint
write	./libraries/SdFat/src/DigitalIO/DigitalPin.h	/^  void write(bool value) {$/;"	f	class:DigitalPin
write	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t write(const char* str) {$/;"	f	class:ExFatFile
write	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  size_t write(uint8_t b) {return write(&b, 1);}$/;"	f	class:ExFatFile
write	./libraries/SdFat/src/ExFatLib/ExFatFileWrite.cpp	/^size_t ExFatFile::write(const void* buf, size_t nbyte) {$/;"	f	class:ExFatFile
write	./libraries/SdFat/src/FatLib/FatFile.cpp	/^size_t FatFile::write(const void* buf, size_t nbyte) {$/;"	f	class:FatFile
write	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t write(const char* str) {$/;"	f	class:FatFile
write	./libraries/SdFat/src/FatLib/FatFile.h	/^  size_t write(uint8_t b) {$/;"	f	class:FatFile
write	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t write(const char* str) {$/;"	f	class:FsBaseFile
write	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t write(const void* buf, size_t count) {$/;"	f	class:FsBaseFile
write	./libraries/SdFat/src/FsLib/FsFile.h	/^  size_t write(uint8_t b) {return write(&b, 1);}$/;"	f	class:FsBaseFile
write	./libraries/SdFat/src/MinimumSerial.cpp	/^size_t MinimumSerial::write(uint8_t b) {$/;"	f	class:MinimumSerial
write	./libraries/SdFat/src/RingBuf.h	/^  size_t write(const char* str) {$/;"	f	class:RingBuf
write	./libraries/SdFat/src/RingBuf.h	/^  size_t write(const void* buf, size_t count) {$/;"	f	class:RingBuf
write	./libraries/SdFat/src/common/ArduinoFiles.h	/^  size_t write(const uint8_t* buffer, size_t size) {$/;"	f	class:StreamFile
write	./libraries/SdFat/src/common/ArduinoFiles.h	/^  size_t write(uint8_t b) {$/;"	f	class:PrintFile
write	./libraries/SdFat/src/common/ArduinoFiles.h	/^  size_t write(uint8_t b) {$/;"	f	class:StreamFile
write	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t write(const char *buffer, size_t size) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/src/common/PrintBasic.h	/^  size_t write(const char *str) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/src/common/PrintBasic.h	/^  virtual size_t write(const uint8_t* buffer, size_t size) {$/;"	f	class:PrintBasic
write	./libraries/SdFat/src/iostream/StdioStream.cpp	/^int StdioStream::write(const void* buf, size_t count) {$/;"	f	class:StdioStream
write	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^int StreamBaseClass::write(const void* buf, size_t n) {$/;"	f	class:StreamBaseClass
write	./libraries/SdFat/src/iostream/StreamBaseClass.cpp	/^void StreamBaseClass::write(char c) {$/;"	f	class:StreamBaseClass
write8	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::write8(uint8_t addr, uint8_t d) {$/;"	f	class:Adafruit_PWMServoDriver
write8	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::write8(uint8_t addr, uint8_t d) {$/;"	f	class:Adafruit_PWMServoDriver
writeADXL345Register	./libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345/UserFunctions.cpp	/^void writeADXL345Register(const uint8_t registerAddress, const uint8_t value) {$/;"	f
writeBlock	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual bool writeBlock(uint32_t block, const uint8_t *src) {$/;"	f	class:FsBlockDeviceInterface
writeBlocks	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual bool writeBlocks(uint32_t block, const uint8_t *src, size_t nb) {$/;"	f	class:FsBlockDeviceInterface
writeData	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeData(const uint8_t* src) {$/;"	f	class:SharedSpiCard
writeData	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeData(uint8_t token, const uint8_t* src) {$/;"	f	class:SharedSpiCard
writeData	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::writeData(const uint8_t* src) {$/;"	f	class:SdioCard
writeEscapedBytes	./libraries/Adafruit_TestBed/src/ESP32BootROM.cpp	/^void ESP32BootROMClass::writeEscapedBytes(const uint8_t *data,$/;"	f	class:ESP32BootROMClass
writeMbr	./libraries/SdFat/src/FatLib/FatFormatter.cpp	/^bool FatFormatter::writeMbr() {$/;"	f	class:FatFormatter
writeMicroseconds	./libraries/Adafruit_PWMServoDriver/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::writeMicroseconds(uint8_t num,$/;"	f	class:Adafruit_PWMServoDriver
writeMicroseconds	./libraries/Adafruit_PWM_Servo_Driver_Library-3.0.1/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::writeMicroseconds(uint8_t num,$/;"	f	class:Adafruit_PWMServoDriver
writeMicroseconds	./libraries/ESP32Servo-1.1.2/src/ESP32Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo
writeMsg	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	42;"	d	file:
writeMsg	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	44;"	d	file:
writeMsg	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	46;"	d	file:
writeMsg	./libraries/SdFat/src/FatLib/FatFormatter.cpp	41;"	d	file:
writeMsg	./libraries/SdFat/src/FatLib/FatFormatter.cpp	43;"	d	file:
writeMsg	./libraries/SdFat/src/FatLib/FatFormatter.cpp	45;"	d	file:
writeNote	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::writeNote(note_t note, uint8_t octave) {$/;"	f	class:ESP32PWM
writeOut	./libraries/SdFat/src/RingBuf.h	/^  size_t writeOut(size_t count) {$/;"	f	class:RingBuf
writeScaled	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^void ESP32PWM::writeScaled(double duty) {$/;"	f	class:ESP32PWM
writeSector	./libraries/SdFat/src/ExFatLib/ExFatPartition.h	/^  bool writeSector(uint32_t sector, const uint8_t* src) {$/;"	f	class:ExFatPartition
writeSector	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::writeSector(uint32_t sector, const uint8_t* src) {$/;"	f	class:DedicatedSpiCard
writeSector	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeSector(uint32_t sector, const uint8_t* src) {$/;"	f	class:SharedSpiCard
writeSector	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::writeSector(uint32_t sector, const uint8_t* src) {$/;"	f	class:SdioCard
writeSectors	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool DedicatedSpiCard::writeSectors($/;"	f	class:DedicatedSpiCard
writeSectors	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeSectors(uint32_t sector,$/;"	f	class:SharedSpiCard
writeSectors	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::writeSectors(uint32_t sector, const uint8_t* src, size_t n) {$/;"	f	class:SdioCard
writeStart	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeStart(uint32_t sector) {$/;"	f	class:SharedSpiCard
writeStart	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::writeStart(uint32_t sector) {$/;"	f	class:SdioCard
writeStop	./libraries/SdFat/src/SdCard/SdSpiCard.cpp	/^bool SharedSpiCard::writeStop() {$/;"	f	class:SharedSpiCard
writeStop	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^bool SdioCard::writeStop() {$/;"	f	class:SdioCard
writeTone	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^double ESP32PWM::writeTone(double freq) {$/;"	f	class:ESP32PWM
writeUpcase	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^bool ExFatFormatter::writeUpcase(uint32_t sector) {$/;"	f	class:ExFatFormatter
writeUpcaseByte	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^bool ExFatFormatter::writeUpcaseByte(uint8_t b) {$/;"	f	class:ExFatFormatter
writeUpcaseUnicode	./libraries/SdFat/src/ExFatLib/ExFatFormatter.cpp	/^bool ExFatFormatter::writeUpcaseUnicode(uint16_t unicode) {$/;"	f	class:ExFatFormatter
write_addr_reg	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int write_addr_reg(uint8_t slv_addr, const uint16_t reg, uint16_t x_value, uint16_t y_value)$/;"	f	file:
write_addr_reg	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int write_addr_reg(uint8_t slv_addr, const uint16_t reg, uint16_t x_value, uint16_t y_value)$/;"	f	file:
write_addr_reg	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int write_addr_reg(uint8_t slv_addr, const uint16_t reg, uint16_t x_value, uint16_t y_value)$/;"	f	file:
write_and_read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_and_read(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice
write_and_read	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_and_read(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice
write_reg	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int write_reg(sensor_t *sensor, ov2640_bank_t bank, uint8_t reg, uint8_t value)$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value){$/;"	f	file:
write_reg	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int write_reg(uint8_t slv_addr, const uint16_t reg, uint8_t value){$/;"	f	file:
write_reg16	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int write_reg16(uint8_t slv_addr, const uint16_t reg, uint16_t value)$/;"	f	file:
write_reg16	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int write_reg16(uint8_t slv_addr, const uint16_t reg, uint16_t value)$/;"	f	file:
write_reg16	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int write_reg16(uint8_t slv_addr, const uint16_t reg, uint16_t value)$/;"	f	file:
write_reg_bits	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	146;"	d	file:
write_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int write_reg_bits(sensor_t *sensor, uint8_t bank, uint8_t reg, uint8_t mask, int enable)$/;"	f	file:
write_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	126;"	d	file:
write_reg_bits	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	175;"	d	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/bf20a6.c	/^static int write_regs(uint8_t slv_addr, const uint16_t(*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/gc0308.c	/^static int write_regs(uint8_t slv_addr, const uint8_t (*regs)[2], size_t regs_size)$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/gc032a.c	/^static int write_regs(uint8_t slv_addr, const uint16_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/gc2145.c	/^static int write_regs(uint8_t slv_addr, const uint16_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/nt99141.c	/^static int write_regs(uint8_t slv_addr, const uint16_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/ov2640.c	/^static int write_regs(sensor_t *sensor, const uint8_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/ov3660.c	/^static int write_regs(uint8_t slv_addr, const uint16_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/ov5640.c	/^static int write_regs(uint8_t slv_addr, const uint16_t (*regs)[2])$/;"	f	file:
write_regs	./libraries/esp32-camera-2.0.8/sensors/sc031gs.c	/^static int write_regs(uint8_t slv_addr, const struct sc031gs_regval *regs)$/;"	f	file:
write_then_read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_I2CDevice
write_then_read	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_SPIDevice
write_then_read	./libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_I2CDevice
write_then_read	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_SPIDevice
writer	./libraries/esp32-camera-2.0.8/conversions/esp_jpg_decode.c	/^        jpg_writer_cb writer;$/;"	m	struct:__anon2	file:
ws	./libraries/SdFat/src/iostream/iostream.h	/^inline istream& ws(istream& is) {$/;"	f
ws2812_T1	./libraries/Adafruit_NeoPixel/rp2040_pio.h	19;"	d
ws2812_T2	./libraries/Adafruit_NeoPixel/rp2040_pio.h	20;"	d
ws2812_T3	./libraries/Adafruit_NeoPixel/rp2040_pio.h	21;"	d
ws2812_program	./libraries/Adafruit_NeoPixel/rp2040_pio.h	/^static const struct pio_program ws2812_program = {$/;"	v	typeref:struct:pio_program
ws2812_program_get_default_config	./libraries/Adafruit_NeoPixel/rp2040_pio.h	/^static inline pio_sm_config ws2812_program_get_default_config(uint offset) {$/;"	f
ws2812_program_init	./libraries/Adafruit_NeoPixel/rp2040_pio.h	/^static inline void ws2812_program_init(PIO pio, uint sm, uint offset, uint pin,$/;"	f
ws2812_program_instructions	./libraries/Adafruit_NeoPixel/rp2040_pio.h	/^static const uint16_t ws2812_program_instructions[] = {$/;"	v
ws2812_rmt_adapter	./libraries/Adafruit_NeoPixel/esp.c	/^static void IRAM_ATTR ws2812_rmt_adapter(const void *src, rmt_item32_t *dest, size_t src_size,$/;"	f	file:
ws2812_wrap	./libraries/Adafruit_NeoPixel/rp2040_pio.h	17;"	d
ws2812_wrap_target	./libraries/Adafruit_NeoPixel/rp2040_pio.h	16;"	d
xclk_freq_hz	./libraries/esp32-camera-2.0.8/driver/include/esp_camera.h	/^    int xclk_freq_hz;               \/*!< Frequency of XCLK signal, in Hz. EXPERIMENTAL: Set to 16MHz on ESP32-S2 or ESP32-S3 to enable EDMA mode *\/$/;"	m	struct:__anon19
xclk_freq_hz	./libraries/esp32-camera-2.0.8/driver/include/sensor.h	/^    int xclk_freq_hz;$/;"	m	struct:_sensor
xclk_freq_hz	./libraries/esp32-camera/include/esp_camera.h	/^    int xclk_freq_hz;               \/*!< Frequency of XCLK signal, in Hz. EXPERIMENTAL: Set to 16MHz on ESP32-S2 or ESP32-S3 to enable EDMA mode *\/$/;"	m	struct:__anon20
xclk_freq_hz	./libraries/esp32-camera/include/sensor.h	/^    int xclk_freq_hz;$/;"	m	struct:_sensor
xclk_timer_conf	./libraries/esp32-camera-2.0.8/target/esp32s3/ll_cam.c	/^esp_err_t xclk_timer_conf(int ledc_timer, int xclk_freq_hz)$/;"	f
xclk_timer_conf	./libraries/esp32-camera-2.0.8/target/xclk.c	/^esp_err_t xclk_timer_conf(int ledc_timer, int xclk_freq_hz)$/;"	f
xpixelpermeter	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t xpixelpermeter;$/;"	m	struct:__anon4	file:
yieldTimeout	./libraries/SdFat/src/SdCard/SdioTeensy.cpp	/^static bool yieldTimeout(bool (*fcn)()) {$/;"	f	file:
ypixelpermeter	./libraries/esp32-camera-2.0.8/conversions/to_bmp.c	/^    uint32_t ypixelpermeter;$/;"	m	struct:__anon4	file:
yuv2rgb	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^void IRAM_ATTR yuv2rgb(uint8_t y, uint8_t u, uint8_t v, uint8_t *r, uint8_t *g, uint8_t *b)$/;"	f
yuv_table	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^static const yuv_table_row yuv_table[256] = {$/;"	v	file:
yuv_table_row	./libraries/esp32-camera-2.0.8/conversions/yuv.c	/^} yuv_table_row;$/;"	t	typeref:struct:__anon3	file:
zfile	./libraries/Adafruit_TestBed/examples/Brain/program_esp_cdc/esp_binaries.h	/^  esp32_zipfile_t const *zfile;$/;"	m	struct:__anon31
zfile	./libraries/Adafruit_TestBed/examples/Brain/program_esp_uart/esp_binaries.h	/^  esp32_zipfile_t const *zfile;$/;"	m	struct:__anon33
~Adafruit_NeoPixel	./libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.cpp	/^Adafruit_NeoPixel::~Adafruit_NeoPixel() {$/;"	f	class:Adafruit_NeoPixel
~Adafruit_SPIDevice	./libraries/Adafruit_BusIO-1.15.0/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::~Adafruit_SPIDevice() {$/;"	f	class:Adafruit_SPIDevice
~Adafruit_SPIDevice	./libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::~Adafruit_SPIDevice() {$/;"	f	class:Adafruit_SPIDevice
~BrainCRC32	./libraries/Adafruit_TestBed/src/Adafruit_TestBed_Brains.cpp	/^  ~BrainCRC32() {}$/;"	f	class:BrainCRC32
~ESP32PWM	./libraries/ESP32Servo-1.1.2/src/ESP32PWM.cpp	/^ESP32PWM::~ESP32PWM() {$/;"	f	class:ESP32PWM
~ExFatFile	./libraries/SdFat/src/ExFatLib/ExFatFile.h	/^  ~ExFatFile() {$/;"	f	class:ExFatFile
~FatFile	./libraries/SdFat/src/FatLib/FatFile.h	/^  ~FatFile() {$/;"	f	class:FatFile
~FsBaseFile	./libraries/SdFat/src/FsLib/FsFile.h	/^  ~FsBaseFile() {close();}$/;"	f	class:FsBaseFile
~FsBlockDeviceInterface	./libraries/SdFat/src/common/FsBlockDeviceInterface.h	/^  virtual ~FsBlockDeviceInterface() {}$/;"	f	class:FsBlockDeviceInterface
~FsVolume	./libraries/SdFat/src/FsLib/FsVolume.h	/^  ~FsVolume() {end();}$/;"	f	class:FsVolume
~callback_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual ~callback_stream() { }$/;"	f	class:callback_stream
~fstream	./libraries/SdFat/src/iostream/fstream.h	/^  ~fstream() {}$/;"	f	class:fstream
~ifstream	./libraries/SdFat/src/iostream/fstream.h	/^  ~ifstream() {}$/;"	f	class:ifstream
~jpeg_encoder	./libraries/esp32-camera-2.0.8/conversions/jpge.cpp	/^    jpeg_encoder::~jpeg_encoder()$/;"	f	class:jpge::jpeg_encoder
~memory_stream	./libraries/esp32-camera-2.0.8/conversions/to_jpg.cpp	/^    virtual ~memory_stream() { }$/;"	f	class:memory_stream
~ofstream	./libraries/SdFat/src/iostream/fstream.h	/^  ~ofstream() {}$/;"	f	class:ofstream
~output_stream	./libraries/esp32-camera-2.0.8/conversions/private_include/jpge.h	/^            virtual ~output_stream() { };$/;"	f	class:jpge::output_stream
